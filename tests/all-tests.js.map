{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/actions/channelsActions.ts","webpack:///./src/actions/chatUsersActions.ts","webpack:///./src/actions/notificationsActions.ts","webpack:///./src/actions/sidebarActions.ts","webpack:///./src/actions/socketActions.ts","webpack:///./src/actions/userActions.ts","webpack:///./src/reducers/channels.ts","webpack:///./src/reducers/chatUsers.ts","webpack:///./src/reducers/notifications.ts","webpack:///./src/reducers/sidebar.ts","webpack:///./src/reducers/socket.ts","webpack:///./src/reducers/user.ts","webpack:///./src/store.ts","webpack:///./tests/index.ts","webpack:///./tests/testAsyncActions.ts","webpack:///./tests/testStore.ts","webpack:///external \"axios\"","webpack:///external \"chai\"","webpack:///external \"lodash\"","webpack:///external \"mocha\"","webpack:///external \"redux\"","webpack:///external \"redux-logger\"","webpack:///external \"redux-thunk\"","webpack:///external \"socket.io-client\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA,iBAoJA;;AAnJA,wDAAyD;AAEzD,iIAAkE;AAErD,oBAAY,GAAG,cAAc,CAAC;AAC9B,yCAAiC,GAAG,mCAAmC,CAAC;AACxE,qCAA6B,GAAG,8BAA8B,CAAC;AAC/D,oCAA4B,GAAG,8BAA8B,CAAC;AAC9D,sCAA8B,GAAG,gCAAgC,CAAC;AAClE,kDAA0C,GAAG,4CAA4C,CAAC;AAC1F,iCAAyB,GAAG,2BAA2B,CAAC;AACxD,2BAAmB,GAAG,qBAAqB,CAAC;AAE5C,mBAAW,GAAG,UAAC,YAAsB;IAC9C,IAAI,QAAQ,GAAU,EAAE,CAAC;IACzB,YAAY,CAAC,OAAO,CAAC,UAAC,IAAY;QAC9B,QAAQ,CAAC,IAAI,CAAC;YACV,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,EAAE;YACZ,sBAAsB,EAAE,CAAC;YACzB,eAAe,EAAE,IAAI;YACrB,mBAAmB,EAAE,KAAK;SAC7B,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,OAAO;QACH,IAAI,EAAE,oBAAY;QAClB,IAAI,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE;KAC/B,CAAC;AACN,CAAC;AAEY,8CAAsC,GAAG,UAAC,OAAe,EAAE,CAAS;IAC7E,OAAO;QACH,IAAI,EAAE,kDAA0C;QAChD,IAAI,EAAE;YACF,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,CAAC;SACf;KACJ,CAAC;AACN,CAAC;AAEY,qCAA6B,GAAG,UAAC,OAAe,EAAE,UAAmB;IAC9E,OAAO;QACH,IAAI,EAAE,yCAAiC;QACvC,IAAI,EAAE;YACF,WAAW,EAAE,OAAO;YACpB,UAAU,EAAE,UAAU;SACzB;KACJ,CAAC;AACN,CAAC;AAEY,iCAAyB,GAAG,UAAC,WAAmB,EAAE,OAAgB;IAC3E,OAAO;QACH,IAAI,EAAE,qCAA6B;QACnC,IAAI,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE;KACvD,CAAC;AACN,CAAC;AAEY,iCAAyB,GAAG,UAAC,WAAmB,EAAE,OAAgB;IAC3E,OAAO;QACH,IAAI,EAAE,oCAA4B;QAClC,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE;KACvD,CAAC;AACN,CAAC;AAEY,mCAA2B,GAAG,UAAC,WAAmB,EAAE,QAAmB;IAChF,OAAO;QACH,IAAI,EAAE,sCAA8B;QACpC,IAAI,EAAE,EAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAC;KACvD,CAAC;AACN,CAAC;AAEY,yBAAiB,GAAG;IAC7B,OAAO;QACH,IAAI,EAAE,2BAAmB;KAC5B;AACL,CAAC;AAIY,qBAAa,GAAG;IACzB,OAAO,UAAC,QAAa;QACjB,OAAO,kBAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;YACzD,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAE,UAAC,CAA8B;gBACjE,OAAO,CAAC,CAAC,IAAI,CAAC;YAClB,CAAC,CAAC,CAAC;YACH,OAAO,QAAQ,CAAC,mBAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,QAAQ,CAAC,+BAAQ,CAAC,yDAAyD,CAAC,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC;AAEY,+BAAuB,GAAG,UAAC,WAAmB;IACvD,OAAO,UAAO,QAAa,EAAE,QAAa;;;YAClC,OAAO,GAAY,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAE,UAAC,CAAU;gBACxD,OAAO,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC;YAClC,CAAC,CAAC;YACF,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,mBAAmB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;gBACrE,OAAO,CAAC,GAAG,CAAC,qGAAqG,EACrG,WAAW,EACX,QAAQ,EAAE,CAAC,CAAC;gBACxB,WAAO,OAAO,CAAC,OAAO,EAAE,EAAC;aAC5B;YACD,QAAQ,CAAC,qCAA6B,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YAC5D,WAAO,kBAAK,CAAC,GAAG,CAAC,mBAAmB,GAAG,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;oBAChH,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;wBAChC,QAAQ,CAAC,iCAAyB,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;wBACzD,OAAO,GAAG,CAAC;qBACd;oBACD,QAAQ,CAAC,8CAAsC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;oBAClE,QAAQ,CAAC,mCAA2B,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1E,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;oBACrB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;oBACrD,QAAQ,CAAC,+BAAQ,CAAC,qDAAqD,CAAC,CAAC,CAAC;gBAC9E,CAAC,CAAC,CAAC,IAAI,CAAC;oBACJ,OAAO,QAAQ,CAAC,qCAA6B,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;gBACxE,CAAC,CAAC,EAAC;;SACN;AACL,CAAC;AAEY,qBAAa,GAAG,UAAC,WAAmB;IAC7C,OAAO,UAAC,QAAa;QACjB,OAAO,kBAAK,CAAC,GAAG,CAAC,yBAAyB,GAAG,WAAW,CAAC;YACrD,IAAI,CAAC,UAAC,GAAkB;YACpB,QAAQ,CAAC,8BAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACrC,OAAO,QAAQ,CAAC,qBAAa,EAAE,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;YAC3C,OAAO,QAAQ,CAAC,+BAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACX,CAAC,CAAC;AACN,CAAC;AAEY,kBAAU,GAAG,UAAC,WAAmB;IAC1C,OAAO,UAAC,QAAa;QACjB,OAAO,kBAAK,CAAC,IAAI,CAAC,wBAAwB,EAAE;YACxC,WAAW,EAAE,WAAW;SAC3B,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;YACvB,QAAQ,CAAC,8BAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACrC,OAAO,QAAQ,CAAC,qBAAa,EAAE,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;YAC1C,OAAO,QAAQ,CAAC,+BAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACvD,CAAC,CAAC;IACN,CAAC,CAAC;AACN,CAAC;;;;;;;;;;;;;;;ACnJD,wDAAyD;AAIzD,wHAAkD;AAErC,yBAAiB,GAAG,mBAAmB,CAAC;AACxC,qBAAa,GAAG,UAAU,CAAC;AAC3B,wBAAgB,GAAG,aAAa,CAAC;AAEjC,mBAAW,GAAG,UAAS,KAAY;IAC5C,OAAO;QACH,IAAI,EAAE,yBAAiB;QACvB,IAAI,EAAE;YACF,KAAK,EAAE,KAAK;SACf;KACJ;AACL,CAAC;AAEY,eAAO,GAAG,UAAS,IAAc;IAC1C,OAAO;QACH,IAAI,EAAE,qBAAa;QACnB,IAAI,EAAE;YACF,IAAI,EAAE,IAAI;SACb;KACJ;AACL,CAAC;AAEY,kBAAU,GAAG,UAAS,KAAa;IAC5C,OAAO;QACH,IAAI,EAAE,wBAAgB;QACtB,IAAI,EAAE;YACF,KAAK,EAAE,KAAK;SACf;KACJ;AACL,CAAC;AAGY,qBAAa,GAAG;IACzB,OAAO,UAAC,QAAkB;QACtB,kBAAK,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;YAC/C,IAAI,KAAK,GAAU,EAAE,CAAC;YACtB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAW;gBAC/B,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG;oBACb,IAAI,EAAE,CAAC,CAAC,IAAI;oBACZ,IAAI,EAAE,CAAC,CAAC,IAAI;iBACf,CAAC;YACN,CAAC,CAAC,CAAC;YACH,QAAQ,CAAC,mBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7B,OAAO,GAAG,CAAC;QACf,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,QAAQ,CAAC,+BAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC;AAEY,qBAAa,GAAG,UAAC,IAAc;AAE5C,CAAC;AAEY,gBAAQ,GAAG,UAAC,KAAa,EAAE,IAAc;AAEtD,CAAC;AAEY,kBAAU,GAAG,UAAC,KAAa;AAExC,CAAC;;;;;;;;;;;;;;;ACpEY,iBAAS,GAAG,WAAW,CAAC;AACxB,oBAAY,GAAG,cAAc,CAAC;AAC9B,oBAAY,GAAG,cAAc,CAAC;AAC9B,gBAAQ,GAAG,UAAU,CAAC;AACtB,mBAAW,GAAG,aAAa,CAAC;AAC5B,mBAAW,GAAG,aAAa,CAAC;AAE5B,gBAAQ,GAAG,UAAC,KAAa;IAClC,OAAO;QACH,IAAI,EAAE,iBAAS;QACf,IAAI,EAAE,KAAK;KACd,CAAC;AACN,CAAC;AAEY,mBAAW,GAAG,UAAC,CAAS;IACjC,OAAO;QACH,IAAI,EAAE,oBAAY;QAClB,IAAI,EAAE,CAAC;KACV,CAAC;AACN,CAAC;AAEY,mBAAW,GAAG;IACvB,OAAO,EAAE,IAAI,EAAE,oBAAY,EAAE,CAAC;AAClC,CAAC;AAEY,eAAO,GAAG,UAAC,IAAY;IAChC,OAAO;QACH,IAAI,EAAE,gBAAQ;QACd,IAAI,EAAE,IAAI;KACb,CAAC;AACN,CAAC;AAEY,kBAAU,GAAG,UAAC,CAAS;IAChC,OAAO;QACH,IAAI,EAAE,mBAAW;QACjB,IAAI,EAAE,CAAC;KACV,CAAC;AACN,CAAC;AAEY,kBAAU,GAAG;IACtB,OAAO;QACH,IAAI,EAAE,mBAAW;KACpB,CAAC;AACN,CAAC;;;;;;;;;;;;;;;AC3CY,2BAAmB,GAAG,qBAAqB,CAAC;AAE5C,yBAAiB,GAAG;IAC7B,OAAO;QACH,IAAI,EAAE,2BAAmB;KAC5B;AACL,CAAC;;;;;;;;;;;;;;;ACND,yEAAuC;AAG1B,sBAAc,GAAG,gBAAgB,CAAC;AAClC,4BAAoB,GAAG,sBAAsB,CAAC;AAC9C,kCAA0B,GAAG,4BAA4B,CAAC;AAE1D,qBAAa,GAAG,UAAC,EAAyB;IACnD,OAAO;QACH,IAAI,EAAE,sBAAc;QACpB,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;KACnB,CAAC;AACN,CAAC;AAEY,0BAAkB,GAAG,UAAC,SAAkB;IACjD,OAAO;QACH,IAAI,EAAE,4BAAoB;QAC1B,IAAI,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE;KACjC;AACL,CAAC;AAEY,+BAAuB,GAAG,UAAC,UAAoB;IACxD,OAAO;QACH,IAAI,EAAE,kCAA0B;QAChC,IAAI,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE;KACnC;AACL,CAAC;AAEY,YAAI,GAAG;IAChB,OAAO,UAAC,QAAkB;QACtB,IAAI,QAAQ,GAA0B,EAAE,EAAE,CAAC;QAC3C,QAAQ,CAAC,EAAE,CAAC,SAAS,EAAE;YACnB,QAAQ,CAAC,0BAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAG,QAAQ,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE;YACtB,QAAQ,CAAC,0BAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,0DAA0D,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,EAAE,CAAC,iBAAiB,EAAE,UAAC,UAAoB;YAChD,QAAQ,CAAC,+BAAuB,CAAC,UAAU,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC;QACF,OAAO,QAAQ,CAAC,qBAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7C,CAAC;AACL,CAAC;;;;;;;;;;;;;;;AC5CD,wDAAyD;AAEzD,yGAAoD;AACpD,wHAAyD;AAE5C,sBAAc,GAAG,gBAAgB,CAAC;AAClC,gBAAQ,GAAG,UAAU,CAAC;AACtB,mBAAW,GAAG,aAAa,CAAC;AAE5B,qBAAa,GAAG,UAAC,UAAmB;IAC7C,OAAQ;QACJ,IAAI,EAAE,sBAAc;QACpB,IAAI,EAAE,UAAU;KACnB,CAAC;AACN,CAAC;AAEY,eAAO,GAAG,UAAC,IAAe;IACnC,OAAO;QACH,IAAI,EAAE,gBAAQ;QACd,IAAI,EAAE,IAAI;KACb,CAAC;AACN,CAAC;AAEY,kBAAU,GAAG;IACtB,OAAO;QACH,IAAI,EAAE,mBAAW;KACpB,CAAC;AACN,CAAC;AAEY,cAAM,GAAG;IAClB,OAAO,UAAC,QAAa;QACjB,QAAQ,CAAC,kBAAU,EAAE,CAAC,CAAC;QACvB,OAAO,QAAQ,CAAC,mCAAiB,EAAE,CAAC,CAAC;IACzC,CAAC;AAEL,CAAC;AAGY,kBAAU,GAAG,UAAC,IAAY,EAAE,SAAoB;IACzD,OAAO,UAAC,QAAa;QACjB,OAAO,kBAAK,CAAC,IAAI,CAAC,0BAA0B,EAAE;YAC1C,IAAI,EAAE,IAAI;SACb,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;YACvB,QAAQ,CAAC,8BAAO,CAAC,cAAc,CAAC,CAAC,CAAC;YAClC,IAAI,SAAS;gBAAE,SAAS,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,IAAI,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;gBACvC,OAAO,QAAQ,CAAC,+BAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,OAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,GAAG,CAAC,CAAC;YAC5D,QAAQ,CAAC,+BAAQ,CAAC,wDAAwD,CAAC,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAEY,mBAAW,GAAG,UAAC,KAAa,EAAE,SAAoB;IAC3D,OAAO,UAAC,QAAa;QACjB,OAAO,kBAAK,CAAC,IAAI,CAAC,2BAA2B,EAAE;YAC3C,KAAK,EAAE,KAAK;SACf,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;YACvB,QAAQ,CAAC,8BAAO,CAAC,eAAe,CAAC,CAAC,CAAC;YACnC,IAAI,SAAS;gBAAE,SAAS,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,IAAI,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;gBACvC,OAAO,QAAQ,CAAC,+BAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,GAAG,CAAC,CAAC;YAC7D,QAAQ,CAAC,+BAAQ,CAAC,yDAAyD,CAAC,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAEY,sBAAc,GAAG,UAAC,OAAe,EAAE,OAAe,EAAE,SAAoB;IACjF,OAAO,UAAC,QAAa;QACjB,OAAO,kBAAK,CAAC,IAAI,CAAC,8BAA8B,EAAE;YAC9C,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;SACnB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;YACvB,QAAQ,CAAC,8BAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACtC,IAAI,SAAS;gBAAE,SAAS,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,IAAI,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;gBACvC,OAAO,QAAQ,CAAC,+BAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,OAAO,CAAC,GAAG,CAAC,6CAA6C,EAAE,GAAG,CAAC,CAAC;YAChE,QAAQ,CAAC,+BAAQ,CAAC,4DAA4D,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;;;;;;;;;;;;;;;ACrFD,kHAOsC;AA0BtC,IAAI,YAAY,GAAU,EAAE,CAAC;AAEhB,qBAAa,GAAG,UAAC,QAA2B,EAAE,WAAmB;IAC1E,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAE,UAAC,CAAU;QACpC,OAAO,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC;IAClC,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,OAAO;QAAE,OAAO,KAAK,CAAC;IAC3B,OAAO,OAAO,CAAC;AACnB,CAAC;AAED,mBAAyB,KAA2B,EAAE,MAAc;IAA3C,4CAA2B;IAChD,QAAO,MAAM,CAAC,IAAI,EAAE;QAChB,KAAK,8BAAY;YACb,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAChC,KAAK,4DAA0C,CAAC,CAAC;YAC7C,IAAI,SAAO,GAAY,qBAAa,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjE,IAAI,WAAS,GAAW,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;YAC9C,IAAI,CAAC,SAAO,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,oDAAoD,EAAE,MAAM,CAAC,CAAC;gBAC1E,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,aAAW,GAAc,KAAK,CAAC,GAAG,CAAE,UAAC,CAAU;gBAC/C,IAAG,CAAC,CAAC,IAAI,KAAK,SAAO,CAAC,IAAI,EAAE;oBACxB,CAAC,CAAC,sBAAsB,IAAI,WAAS,CAAC;iBACzC;gBACD,OAAO,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;YACH,OAAO,aAAW,CAAC;SACtB;QACD,KAAK,mDAAiC;YAClC,IAAI,OAAO,GAAY,qBAAa,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACrE,IAAI,CAAC,OAAO,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,6CAA6C,EAAE,MAAM,CAAC,CAAC;gBACnE,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,WAAW,GAAc,KAAK,CAAC,GAAG,CAAE,UAAC,CAAU;gBAC/C,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE;oBACpC,CAAC,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;iBAClD;gBACD,OAAO,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;YACH,OAAO,WAAW,CAAC;QACvB,KAAK,+CAA6B,CAAC,CAAC;YAChC,IAAI,SAAO,GAAY,qBAAa,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACrE,IAAI,SAAO,GAAY,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;YAC3C,IAAI,CAAC,SAAO,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,gDAAgD,EAAE,MAAM,CAAC,CAAC;gBACtE,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,aAAW,GAAc,KAAK,CAAC,GAAG,CAAE,UAAC,CAAU;gBAC/C,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,WAAW;oBAClC,CAAC,CAAC,eAAe,GAAG,SAAO,CAAC;gBAChC,OAAO,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;YACH,OAAO,aAAW,CAAC;SACtB;QACD,KAAK,gDAA8B,CAAC,CAAC;YACjC,IAAI,mBAAiB,GAAc,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACxD,IAAI,aAAW,GAAW,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;YAClD,IAAI,SAAO,GAAY,qBAAa,CAAC,KAAK,EAAE,aAAW,CAAC,CAAC;YACzD,IAAG,CAAC,SAAO,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,yDAAyD,EAAE,MAAM,CAAC,CAAC;gBAC/E,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,aAAW,GAAc,KAAK,CAAC,GAAG,CAAE,UAAC,CAAU;gBAC/C,IAAI,CAAC,CAAC,IAAI,KAAK,aAAW;oBACtB,CAAC,CAAC,QAAQ,GAAG,mBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACtD,OAAO,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;YACH,OAAO,aAAW,CAAC;SACtB;QACD,KAAK,8CAA4B,CAAC,CAAC;YAC/B,IAAI,iBAAe,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;YAC1C,IAAI,aAAW,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;YAC1C,IAAI,SAAO,GAAY,qBAAa,CAAC,KAAK,EAAE,aAAW,CAAC,CAAC;YACzD,IAAI,CAAC,SAAO,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,+CAA+C,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;gBAC5E,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,aAAW,GAAc,KAAK,CAAC,GAAG,CAAC,UAAC,CAAU;gBAC9C,IAAG,CAAC,CAAC,IAAI,KAAK,aAAW;oBACrB,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,iBAAe,CAAC,CAAC,CAAC;gBACtD,OAAO,CAAC,CAAC;YACb,CAAC,CAAC;YACF,OAAO,aAAW,CAAC;SACtB;QACD,KAAK,qCAAmB;YACpB,OAAO,EAAE,CAAC;QACd;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC;AAjFD,+BAiFC;;;;;;;;;;;;;;;AC3HD,qHACuC;AAevC,IAAI,YAAY,GAAU,EAEzB;AAED,mBAAwB,KAA2B,EAAE,MAAiB;IAA9C,4CAA2B;;IAC/C,QAAO,MAAM,CAAC,IAAI,EAAE;QAChB,KAAK,oCAAiB;YAClB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QAC7B,KAAK,gCAAa;YACd,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK;gBAC1B,GAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAG;oBACtB,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;oBAC3B,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;iBAC9B;oBACH,CAAC;QACP,KAAK,mCAAgB;YACjB,IAAI,KAAK,GAAU,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAC5C,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACnC;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC;AAjBD,+BAiBC;;;;;;;;;;;;;;;ACtCD,iIAC2C;AAW3C,IAAI,YAAY,GAAU;IACtB,MAAM,EAAE,EAAE;IACV,KAAK,EAAE,EAAE;CACZ;AAED,mBAAwB,KAA2B,EAAE,MAAc;IAA3C,4CAA2B;IAC/C,QAAO,MAAM,CAAC,IAAI,EAAE;QAChB,KAAK,gCAAS;YACV,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC;QAClF,KAAK,mCAAY;YACb,IAAI,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC1C,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACtC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,cAAc,EAAC,CAAC,CAAC;QAC9D,KAAK,mCAAY;YACb,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAG,EAAC,MAAM,EAAE,EAAE,EAAC,CAAC,CAAC;QACnD,KAAK,+BAAQ;YACT,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC;QAChF,KAAK,kCAAW;YACZ,IAAI,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACxC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACrC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC;QAC9D,KAAK,kCAAW;YACZ,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAC,CAAC,CAAC;QACjD;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC;AArBD,+BAqBC;;;;;;;;;;;;;;;ACrCD,+GAAgE;AAMhE,IAAI,YAAY,GAAU;IACtB,IAAI,EAAE,IAAI;CACb;AAED,mBAAwB,KAA2B,EAAE,MAAc;IAA3C,4CAA2B;IAC/C,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,oCAAmB;YACpB,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,EAAC,CAAC,CAAC;QACzD;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC;AAPD,+BAOC;;;;;;;;;;;;;;;ACfD,4GAGoC;AAQpC,IAAI,YAAY,GAAU;IACtB,EAAE,EAAE,IAAI;IACR,SAAS,EAAE,KAAK;IAChB,mBAAmB,EAAE,EAAE;CAC1B;AAED,mBAAwB,KAA2B,EAAE,MAAiB;IAA9C,4CAA2B;IAC/C,QAAO,MAAM,CAAC,IAAI,EAAE;QAChB,KAAK,8BAAc;YACf,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,CAAC;QAC1D,KAAK,oCAAoB;YACrB,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC;QACxE,KAAK,0CAA0B;YAC3B,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,mBAAmB,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QACnF;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC;AAXD,+BAWC;;;;;;;;;;;;;;;AC/BD,sGAA6E;AAc7E,IAAI,YAAY,GAAW;IACvB,UAAU,EAAE,KAAK;IACjB,KAAK,EAAE,KAAK;IACZ,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;CACd;AAGD,mBAAwB,KAA2B,EAAE,MAAc;IAA3C,4CAA2B;IAC/C,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,4BAAc;YACf,IAAI,OAAO,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;gBAClC,OAAO,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;gBAChE,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK;gBACrB,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;YACvE,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,MAAM,CAAC,IAAI,EAAC,CAAC,CAAC;QAC/D,KAAK,sBAAQ;YACT,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QACjD,KAAK,yBAAW;YACZ,OAAO;gBACH,UAAU,EAAE,KAAK;gBACjB,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,KAAK;aACd;QACL;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC;AAtBD,+BAsBC;;;;;;;;;;;;;;;AC5CD,wDAA4F;AAC5F,0EAAqC;AACrC,6EAA0C;AAE1C,kFAAgE;AAChE,8FAA4E;AAC5E,6GAA2F;AAC3F,2FAAyE;AACzE,wFAAsE;AACtE,iGAA+E;AAW/E,IAAM,WAAW,GAAY,uBAAe,CAAC;IACzC,IAAI,EAAE,iBAAW;IACjB,QAAQ,EAAE,qBAAe;IACzB,aAAa,EAAE,0BAAoB;IACnC,OAAO,EAAE,oBAAc;IACvB,MAAM,EAAE,mBAAa;IACrB,SAAS,EAAE,sBAAgB;CAC9B,CAAC,CAAC;AAEH,IAAM,UAAU,GACZ,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IAC7D,uBAAe,CAAC,wBAAU,CAAC,CAAC,CAAC,CAAC,uBAAe,CAAC,wBAAU,EAAE,2BAAY,EAAE,CAAC,CAAC;AAE9E,qBAAe,mBAAW,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;;;;;;;;;;;;ACjCpD,MAAM,CAAC,WAAW,EAAE;AAEpB,CAAC,CAAC,CAAC;AACH,UAAU,CAAC,UAAU,EAAE;AAEvB,CAAC,CAAC,CAAC;AAEH,KAAK,CAAC,WAAW,EAAE;AAEnB,CAAC,CAAC;AAEF,mBAAO,CAAC,yCAAa,CAAC,CAAC;AACvB,mBAAO,CAAC,uDAAoB,CAAC,CAAC;;;;;;;;;;;;;;;ACZ9B,0CAAe;AACf,oDAA4B;AAE5B,wEAA4C;AAE5C,SAAS,YAAY;IACjB,OAAO,CAAC,CAAC,SAAS,CAAC,kBAAK,CAAC,CAAC;AAC9B,CAAC;AAED,QAAQ,CAAC,eAAe,EAAE;IACtB,IAAI,KAAmB,CAAC;IACxB,UAAU,CAAC;QACP,KAAK,GAAG,YAAY,EAAE,CAAC;IAC3B,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,oBAAoB,EAAE;QAC3B,EAAE,CAAC,oBAAoB,CAAC,CAAC;QACzB,EAAE,CAAC,qBAAqB,CAAC,CAAC;QAC1B,EAAE,CAAC,wBAAwB,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,wBAAwB,EAAE;QAC/B,EAAE,CAAC,uBAAuB,CAAC,CAAC;QAC5B,EAAE,CAAC,kCAAkC,CAAC,CAAC;QACvC,EAAE,CAAC,uBAAuB,CAAC,CAAC;QAC5B,EAAE,CAAC,2BAA2B,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,sBAAsB,EAAE;QAC7B,EAAE,CAAC,wCAAwC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,0BAA0B,EAAE;QACjC,EAAE,CAAC,wBAAwB,CAAC,CAAC;QAC7B,EAAE,CAAC,0BAA0B,CAAC,CAAC;QAC/B,EAAE,CAAC,sBAAsB,CAAC,CAAC;QAC3B,EAAE,CAAC,wBAAwB,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;;;;;;;;;;;;;;;AClCF,qDAA8B;AAC9B,oDAA4B;AAC5B,0CAAe;AACf,wEAA0C;AAE1C,0GAAgF;AAChF,sHAA4F;AAE5F,SAAS,YAAY;IACjB,OAAO,CAAC,CAAC,SAAS,CAAC,kBAAK,CAAC,CAAC;AAC9B,CAAC;AAED,QAAQ,CAAC,+BAA+B,EAAE;IACtC,QAAQ,CAAC,YAAY,EAAE;QACnB,IAAI,KAAmB,CAAC;QACxB,IAAI,IAA2B,CAAC;QAChC,UAAU,CAAC;YACP,KAAK,GAAG,YAAY,EAAE,CAAC;YACvB,IAAI,GAAG,cAAM,YAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,EAArB,CAAqB,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,0BAA0B,EAAE;YAC3B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YAClC,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC;YAC7B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;YAC5B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iDAAiD,EAAE;YAClD,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YAClC,KAAK,CAAC,QAAQ,CAAC,2BAAa,CAAC,IAAI,CAAC,CAAC,CAAC;YACpC,aAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YACjC,KAAK,CAAC,QAAQ,CAAC,2BAAa,CAAC,KAAK,CAAC,CAAC,CAAC;YACrC,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,8CAA8C,EAAE;YAC/C,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YAClC,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC;YAC7B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;YAC5B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;YAC5B,KAAK,CAAC,QAAQ,CAAC,qBAAO,CAAC;gBACnB,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,eAAe;gBACtB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,OAAO;aAChB,CAAC,CAAC,CAAC;YACJ,aAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YACjC,aAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;YAClD,aAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;YAC5C,aAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACzC,KAAK,CAAC,QAAQ,CAAC,qBAAO,CAAC;gBACnB,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,KAAK;aACd,CAAC,CAAC,CAAC;YACJ,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YAClC,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC;YAC7B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;YAC5B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,6CAA6C,EAAE;YAC9C,KAAK,CAAC,QAAQ,CAAC,qBAAO,CAAC;gBACnB,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,eAAe;gBACtB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,OAAO;aAChB,CAAC,CAAC,CAAC;YACJ,KAAK,CAAC,QAAQ,CAAC,wBAAU,EAAE,CAAC,CAAC;YAC7B,KAAK,CAAC,QAAQ,CAAC,qBAAO,CAAC;gBACnB,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,KAAK;aACd,CAAC,CAAC,CAAC;QACR,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,gBAAgB,EAAE;QACvB,IAAI,KAAmB,CAAC;QACxB,IAAI,QAAmC,CAAC;QACxC,UAAU,CAAC;YACP,KAAK,GAAG,YAAY,EAAE,CAAC;YACvB,QAAQ,GAAG,cAAM,YAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAzB,CAAyB,CAAC;QAC/C,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,oDAAoD,EAAE;YACrD,KAAK,CAAC,QAAQ,CAAC,6BAAW,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACrE,IAAI,EAAE,GAAyB,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,EAAE,GAAyB,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,EAAE,GAAyB,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7C,aAAM,CAAC,eAAe,CAAC,EAAE,EAAE;gBACvB,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,EAAE;gBACZ,sBAAsB,EAAE,CAAC;gBACzB,eAAe,EAAE,IAAI;gBACrB,mBAAmB,EAAE,KAAK;aAC7B,CAAC,CAAC;YACH,aAAM,CAAC,eAAe,CAAC,EAAE,EAAE;gBACvB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,EAAE;gBACZ,sBAAsB,EAAE,CAAC;gBACzB,eAAe,EAAE,IAAI;gBACrB,mBAAmB,EAAE,KAAK;aAC7B,CAAC,CAAC;YACH,aAAM,CAAC,eAAe,CAAC,EAAE,EAAE;gBACvB,IAAI,EAAE,gBAAgB;gBACtB,QAAQ,EAAE,EAAE;gBACZ,sBAAsB,EAAE,CAAC;gBACzB,eAAe,EAAE,IAAI;gBACrB,mBAAmB,EAAE,KAAK;aAC7B,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,sFAAsF,EAAE;YACvF,KAAK,CAAC,QAAQ,CAAC,6BAAW,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACrE,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAC,CAAuB;gBACvC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;gBACtC,KAAK,CAAC,QAAQ,CAAC,+CAA6B,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;YACH,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAC,CAAuB;gBACvC,aAAM,CAAC,MAAM,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;gBACrC,KAAK,CAAC,QAAQ,CAAC,+CAA6B,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;YACH,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAC,CAAuB;gBACvC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iEAAiE,EAAE;QAEtE,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,yDAAyD,CAAC,CAAC;QAC9D,EAAE,CAAC,0DAA0D,CAAC,CAAC;QAC/D,EAAE,CAAC,0DAA0D,CAAC,CAAC;QAC/D,EAAE,CAAC,+BAA+B,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,qBAAqB,EAAE;QAC5B,EAAE,CAAC,mBAAmB,CAAC,CAAC;QACxB,EAAE,CAAC,qCAAqC,CAAC,CAAC;QAC1C,EAAE,CAAC,qBAAqB,CAAC,CAAC;QAC1B,EAAE,CAAC,iBAAiB,CAAC,CAAC;QACtB,EAAE,CAAC,mCAAmC,CAAC,CAAC;QACxC,EAAE,CAAC,oBAAoB,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,eAAe,EAAE;QACtB,EAAE,CAAC,0BAA0B,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,cAAc,EAAE;QACrB,EAAE,CAAC,6DAA6D,CAAC,CAAC;QAClE,EAAE,CAAC,mCAAmC,CAAC,CAAC;QACxC,EAAE,CAAC,mCAAmC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,kBAAkB,EAAE;QACzB,EAAE,CAAC,qBAAqB,CAAC,CAAC;QAC1B,EAAE,CAAC,mBAAmB,CAAC,CAAC;QACxB,EAAE,CAAC,sBAAsB,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;;;;;;;;;;;;ACxJH,kC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,6C","file":"all-tests.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./tests/index.ts\");\n","import {State, Channel, Message} from '../reducers/channels';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\n\nimport {addError, addInfo} from '../actions/notificationsActions';\n\nexport const ADD_CHANNELS = 'ADD_CHANNELS';\nexport const SET_CHANNEL_FETCHING_NEW_MESSAGES = 'SET_CHANNEL_FETCHING_NEW_MESSAGES';\nexport const SET_CHANNEL_HAS_MORE_MESSAGES = 'SET_CHANNEL_HAS_MORE_MESSAGE';\nexport const ADD_RECEIVED_CHANNEL_MESSAGE = 'ADD_RECEIVED_CHANNEL_MESSAGE';\nexport const ADD_RETRIEVED_CHANNEL_MESSAGES = 'ADD_RETRIEVED_CHANNEL_MESSAGES';\nexport const INCREMENT_CHANNEL_RETRIEVE_MESSAGES_OFFSET = 'INCREMENT_CHANNEL_RETRIEVE_MESSAGES_OFFSET';\nexport const RETRIEVE_CHANNEL_MESSAGES = 'RETRIEVE_CHANNEL_MESSAGES';\nexport const CLEAR_CHANNELS_DATA = 'CLEAR_CHANNELS_DATA';\n\nexport const addChannels = (channelNames: string[]) => {\n    let channels: State = [];\n    channelNames.forEach((name: string) => {\n        channels.push({\n            name: name,\n            messages: [],\n            retrieveMessagesOffset: 0,\n            hasMoreMessages: true,\n            fetchingNewMessages: false\n        });\n    });\n    return {\n        type: ADD_CHANNELS,\n        data: { channels: channels }\n    };\n}\n\nexport const incrementChannelRetrieveMessagesOffset = (channel: string, n: number) => {\n    return {\n        type: INCREMENT_CHANNEL_RETRIEVE_MESSAGES_OFFSET,\n        data: {\n            channel: channel,\n            increment: n\n        }\n    };\n}\n\nexport const setChannelFetchingNewMessages = (channel: string, isFetching: boolean) => {\n    return {\n        type: SET_CHANNEL_FETCHING_NEW_MESSAGES,\n        data: {\n            channelName: channel,\n            isFetching: isFetching\n        }\n    };\n}\n\nexport const setChannelHasMoreMessages = (channelName: string, hasMore: boolean) => {\n    return {\n        type: SET_CHANNEL_HAS_MORE_MESSAGES,\n        data: { channelName: channelName, hasMore: hasMore }\n    };\n}\n\nexport const addReceivedChannelMessage = (channelName: string, message: Message) => {\n    return {\n        type: ADD_RECEIVED_CHANNEL_MESSAGE,\n        data: { message: message, channelName: channelName }\n    };\n}\n\nexport const addRetrievedChannelMessages = (channelName: string, messages: Message[]) => {\n    return {\n        type: ADD_RETRIEVED_CHANNEL_MESSAGES,\n        data: {channelName: channelName, messages: messages}\n    };\n}\n\nexport const clearChannelsData = () => {\n    return {\n        type: CLEAR_CHANNELS_DATA\n    }\n}\n\n/* Async Actions */\n\nexport const fetchChannels = () => {\n    return (dispatch: any)  => {\n        return axios.get('/api/v1/channels').then((res: AxiosResponse) => {\n            let channels = res.data.channels.map( (c: {name: string, _id: string}) => {\n                return c.name;\n            });\n            return dispatch(addChannels(channels));\n        }).catch((err: AxiosError) => {\n            console.log(err);\n            return dispatch(addError('Something went wrong while trying to fetch the channels'));\n        });\n    }\n}\n\nexport const retrieveChannelMessages = (channelName: string) => {\n    return async (dispatch: any, getState: any) => {\n        let channel: Channel = getState().channels.find( (c: Channel) => {\n            return c.name === channelName;\n        })\n        if (!channel || channel.fetchingNewMessages || !channel.hasMoreMessages) {\n            console.log('Retrieve Channel Messages dispatched with incorrect channel name or while already fetching messages',\n                        channelName,\n                        getState());\n            return Promise.resolve();\n        }\n        dispatch(setChannelFetchingNewMessages(channel.name, true));\n        return axios.get('/api/v1/messages/' + channel.name + '/' + channel.retrieveMessagesOffset).then((res: AxiosResponse) => {\n            if (res.data.messages.length === 0) {\n                dispatch(setChannelHasMoreMessages(channel.name, false));\n                return res;\n            }\n            dispatch(incrementChannelRetrieveMessagesOffset(channelName, 20));\n            dispatch(addRetrievedChannelMessages(channel.name, res.data.messages))\n        }).catch((err: AxiosError) => {\n            console.log('Error fetching messages', channel, err);\n            dispatch(addError('Something went wrong while trying to fetch messages'));\n        }).then(() => {\n            return dispatch(setChannelFetchingNewMessages(channel.name, false));\n        });\n    }\n}\n\nexport const deleteChannel = (channelName: string) => {\n    return (dispatch: any) => {\n        return axios.get('/api/v1/channel/delete/' + channelName).\n            then((res: AxiosResponse) => {\n                dispatch(addInfo('Channel deleted'));\n                return dispatch(fetchChannels());\n            }).catch((err: AxiosError) => {\n                console.log('Error deleting channel', err);\n                return dispatch(addError(err.response.data.error));\n            });\n    };\n}\n\nexport const addChannel = (channelName: string) => {\n    return (dispatch: any) => {\n        return axios.post('/api/v1/channel/create', {\n            channelName: channelName\n        }).then((res: AxiosResponse) => {\n            dispatch(addInfo('Channel created'));\n            return dispatch(fetchChannels());\n        }).catch((err: AxiosError) => {\n            console.log('Error creating chanel', err);\n            return dispatch(addError(err.response.data.error));\n        })\n    };\n}\n","import axios, { AxiosError, AxiosResponse } from 'axios';\n\nimport {State, ChatUser} from '../reducers/chatUsers';\nimport { Dispatch } from 'redux';\nimport { addError } from './notificationsActions';\n\nexport const UPDATE_CHAT_USERS = 'UPDATE_CHAT_USERS';\nexport const ADD_CHAT_USER = 'ADD_USER';\nexport const REMOVE_CHAT_USER = 'REMOVE_USER';\n\nexport const updateUsers = function(users: State) {\n    return {\n        type: UPDATE_CHAT_USERS,\n        data: {\n            users: users\n        }\n    }\n}\n\nexport const addUser = function(user: ChatUser) {\n    return {\n        type: ADD_CHAT_USER,\n        data: {\n            user: user\n        }\n    }\n}\n\nexport const removeUser = function(email: string) {\n    return {\n        type: REMOVE_CHAT_USER,\n        data: {\n            email: email\n        }\n    }\n}\n\n/* Async Functions */\nexport const fetchAllUsers = () => {\n    return (dispatch: Dispatch) => {\n        axios.get('/api/v1/users').then((res: AxiosResponse) => {\n            let users: State = {};\n            res.data.users.forEach((u: ChatUser) => {\n                users[u.email] = {\n                    role: u.role,\n                    name: u.name\n                };\n            });\n            dispatch(updateUsers(users));\n            return res;\n        }).catch((err: AxiosError) => {\n            dispatch(addError('Fetching all users failed'));\n            console.log(err);\n            return err;\n        });\n    }\n}\n\nexport const createNewUser = (user: ChatUser) => {\n\n}\n\nexport const editUser = (email: string, user: ChatUser) => {\n\n}\n\nexport const deleteUser = (email: string) => {\n\n}","export const ADD_ERROR = 'ADD_ERROR';\nexport const REMOVE_ERROR = 'REMOVE_ERROR';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const ADD_INFO = 'ADD_INFO';\nexport const REMOVE_INFO = 'REMOVE_INFO';\nexport const CLEAR_INFOS = 'CLEAR_INFOS';\n\nexport const addError = (error: string) => {\n    return {\n        type: ADD_ERROR,\n        data: error\n    };\n}\n\nexport const removeError = (i: number) => {\n    return {\n        type: REMOVE_ERROR,\n        data: i\n    };\n}\n\nexport const clearErrors = () => {\n    return { type: CLEAR_ERRORS };\n}\n\nexport const addInfo = (info: string) => {\n    return {\n        type: ADD_INFO,\n        data: info\n    };\n}\n\nexport const removeInfo = (i: number) => {\n    return {\n        type: REMOVE_INFO,\n        data: i\n    };\n}\n\nexport const clearInfos = () => {\n    return {\n        type: CLEAR_INFOS\n    };\n}\n","export const TOGGLE_SIDEBAR_OPEN = 'TOGGLE_SIDEBAR_OPEN';\n\nexport const toggleSidebarOpen = () => {\n    return {\n        type: TOGGLE_SIDEBAR_OPEN\n    }\n}","import * as io from 'socket.io-client';\nimport { Dispatch } from 'redux';\n\nexport const INIT_WEBSOCKET = 'INIT_WEBSOCKET';\nexport const SET_SOCKET_CONNECTED = 'SET_SOCKET_CONNECTED';\nexport const SET_SOCKET_CONNECTED_USERS = 'SET_SOCKET_CONNECTED_USERS';\n\nexport const initWebsocket = (io: SocketIOClient.Socket) => {\n    return {\n        type: INIT_WEBSOCKET,\n        data: { io: io }\n    };\n}\n\nexport const setSocketConnected = (connected: boolean) => {\n    return {\n        type: SET_SOCKET_CONNECTED,\n        data: { connected: connected }\n    }\n}\n\nexport const setSocketConnectedUsers = (userEmails: string[]) => {\n    return {\n        type: SET_SOCKET_CONNECTED_USERS,\n        data: { userEmails: userEmails }\n    }\n}\n\nexport const init = () => {\n    return (dispatch: Dispatch) => {\n        let ioSocket: SocketIOClient.Socket = io();\n        ioSocket.on('connect', () => {\n            dispatch(setSocketConnected(true));\n            console.log('Connected to websocket server [' + ioSocket.id + ']');\n        });\n        ioSocket.on('disconnect', () => {\n            dispatch(setSocketConnected(false));\n            console.log('Disconnected from websocket server, attempting reconnect');\n        });\n        ioSocket.on('connected users', (userEmails: string[]) => {\n            dispatch(setSocketConnectedUsers(userEmails));\n        })\n        return dispatch(initWebsocket(ioSocket));\n    }\n}","import axios, { AxiosResponse, AxiosError } from 'axios';\nimport {State as UserState} from '../reducers/user';\nimport {clearChannelsData} from './channelsActions';\nimport {addError, addInfo} from './notificationsActions';\n\nexport const SET_AUTHORIZED = 'SET_AUTHORIZED';\nexport const SET_USER = 'SET_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nexport const setAuthorized = (authorized: boolean) => {\n    return  {\n        type: SET_AUTHORIZED,\n        data: authorized\n    };\n}\n\nexport const setUser = (user: UserState) => {\n    return {\n        type: SET_USER,\n        data: user\n    };\n}\n\nexport const logoutUser = () => {\n    return {\n        type: LOGOUT_USER\n    };\n}\n\nexport const logout = () => {\n    return (dispatch: any) => {\n        dispatch(logoutUser());\n        return dispatch(clearChannelsData());\n    }\n    \n}\n\n/* Async Actions */\nexport const updateName = (name: string, onSuccess?: Function) => {\n    return (dispatch: any) => {\n        return axios.post('/api/v1/user/update/name', {\n            name: name\n        }).then((res: AxiosResponse) => {\n            dispatch(addInfo('Name updated'));\n            if (onSuccess) onSuccess();\n        }).catch((err: AxiosError) => {\n            if (err.response && err.response.data.error)\n                return dispatch(addError(err.response.data.error));\n            console.log('Something went wrong updating user name', err);\n            dispatch(addError('Something went wrong while trying to update your name.'));\n        });\n    };\n}\n\nexport const updateEmail = (email: string, onSuccess?: Function) => {\n    return (dispatch: any) => {\n        return axios.post('/api/v1/user/update/email', {\n            email: email\n        }).then((res: AxiosResponse) => {\n            dispatch(addInfo('Email updated'));\n            if (onSuccess) onSuccess();\n        }).catch((err: AxiosError) => {\n            if (err.response && err.response.data.error)\n                return dispatch(addError(err.response.data.error));\n            console.log('Something went wrong updating user email', err);\n            dispatch(addError('Something went wrong while trying to update your email.'));\n        });\n    };\n}\n\nexport const updatePassword = (oldPass: string, newPass: string, onSuccess?: Function) => {\n    return (dispatch: any) => {\n        return axios.post('/api/v1/user/update/password', {\n            oldPass: oldPass,\n            newPass: newPass\n        }).then((res: AxiosResponse) => {\n            dispatch(addInfo('Password updated'));\n            if (onSuccess) onSuccess();\n        }).catch((err: AxiosError) => {\n            if (err.response && err.response.data.error)\n                return dispatch(addError(err.response.data.error));\n            console.log('Something went wrong updating user password', err);\n            dispatch(addError('Something went wrong while trying to update your password.'));\n        });\n    };\n}","import {ADD_CHANNELS,\n        SET_CHANNEL_FETCHING_NEW_MESSAGES,\n        SET_CHANNEL_HAS_MORE_MESSAGES,\n        ADD_RECEIVED_CHANNEL_MESSAGE,\n        ADD_RETRIEVED_CHANNEL_MESSAGES,\n        INCREMENT_CHANNEL_RETRIEVE_MESSAGES_OFFSET,\n        CLEAR_CHANNELS_DATA}\n    from '../actions/channelsActions';\n\nexport interface Message {\n    userEmail: string,\n    created: string,\n    _id: string,\n    text: string\n}\n\nexport interface Channel {\n    name: string,\n    messages: Message[],\n    retrieveMessagesOffset: number,\n    hasMoreMessages: boolean\n    fetchingNewMessages: boolean\n}\n\nexport interface State extends Array<Channel> {\n\n}\n\ninterface Action {\n    type: string,\n    data: any\n}\n\nlet initialState: State = [];\n\nexport const channelExists = (channels: Channel[] | State, channelName: string): any =>  {\n    let channel = channels.find( (c: Channel) => {\n        return c.name === channelName;\n    });\n    if (!channel) return false;\n    return channel;\n}\n\nexport default function (state: State = initialState, action: Action) {\n    switch(action.type) {\n        case ADD_CHANNELS:\n            return action.data.channels;\n        case INCREMENT_CHANNEL_RETRIEVE_MESSAGES_OFFSET: {\n            let channel: Channel = channelExists(state, action.data.channel);\n            let increment: number = action.data.increment;\n            if (!channel) {\n                console.log('Unknown channel while incrementing messages offset', action);\n                return state;\n            }\n            let newChannels: Channel[] = state.map( (c: Channel) => {\n                if(c.name === channel.name) {\n                    c.retrieveMessagesOffset += increment;\n                }\n                return c;\n            });\n            return newChannels;\n        }\n        case SET_CHANNEL_FETCHING_NEW_MESSAGES:\n            let channel: Channel = channelExists(state, action.data.channelName);\n            if (!channel) {\n                console.log('Unknown channel while fetching new messages', action);\n                return state;\n            }\n            let newChannels: Channel[] = state.map( (c: Channel) => {\n                if (c.name === action.data.channelName) {\n                    c.fetchingNewMessages = action.data.isFetching;\n                }\n                return c;\n            });\n            return newChannels;\n        case SET_CHANNEL_HAS_MORE_MESSAGES: {\n            let channel: Channel = channelExists(state, action.data.channelName);\n            let hasMore: boolean = action.data.hasMore;\n            if (!channel) {\n                console.log('Unknown channel while setting hasMore messages', action);\n                return state;\n            }\n            let newChannels: Channel[] = state.map( (c: Channel) => {\n                if (c.name === action.data.channelName)\n                    c.hasMoreMessages = hasMore;\n                return c;\n            });\n            return newChannels;\n        }\n        case ADD_RETRIEVED_CHANNEL_MESSAGES: {\n            let retrievedMessages: Message[] = action.data.messages;\n            let channelName: string = action.data.channelName;\n            let channel: Channel = channelExists(state, channelName);\n            if(!channel) {\n                console.log('Unknown channel while adding retrieved channel messages', action);\n                return state;\n            }\n            let newChannels: Channel[] = state.map( (c: Channel) => {\n                if (c.name === channelName)\n                    c.messages = retrievedMessages.concat(c.messages);//c.messages.concat(messages);\n                return c;\n            });\n            return newChannels;\n        }\n        case ADD_RECEIVED_CHANNEL_MESSAGE: {\n            let receivedMessage = action.data.message;\n            let channelName = action.data.channelName;\n            let channel: Channel = channelExists(state, channelName);\n            if (!channel) {\n                console.log('Unknown channel while adding received message', state, action);\n                return state;\n            }\n            let newChannels: Channel[] = state.map((c: Channel) => {\n                if(c.name === channelName) \n                    c.messages = c.messages.concat([receivedMessage]);\n                return c;\n            })\n            return newChannels;\n        }\n        case CLEAR_CHANNELS_DATA:\n            return [];\n        default:\n            return state;\n    }\n}","import {AnyAction} from 'redux';\nimport {UPDATE_CHAT_USERS, ADD_CHAT_USER, REMOVE_CHAT_USER}\n    from '../actions/chatUsersActions';\n\nexport interface State {\n    [email: string]: {\n        role: string,\n        name: string,\n    }\n}\n\nexport interface ChatUser {\n    email: string,\n    role: string,\n    name: string,\n}\n\nlet initialState: State = {\n    \n}\n\nexport default function(state: State = initialState, action: AnyAction) {\n    switch(action.type) {\n        case UPDATE_CHAT_USERS:\n            return action.data.users;\n        case ADD_CHAT_USER:\n            return Object.assign({}, state, {\n                [action.data.user.email]: {\n                    role: action.data.user.role,\n                    name: action.data.user.name,\n                }\n            });\n        case REMOVE_CHAT_USER:\n            let clone: State = Object.assign({}, state);\n            delete clone[action.data.email]\n        default:\n            return state;\n    }\n}","import {ADD_ERROR, REMOVE_ERROR, CLEAR_ERRORS, ADD_INFO, REMOVE_INFO, CLEAR_INFOS}\n    from '../actions/notificationsActions';\n\nexport interface State {\n    errors: string[],\n    infos: string[],\n}\ninterface Action {\n    type: string,\n    data: any\n}\n\nlet initialState: State = {\n    errors: [],\n    infos: []\n}\n\nexport default function(state: State = initialState, action: Action) {\n    switch(action.type) {\n        case ADD_ERROR:\n            return Object.assign({}, state, {errors: state.errors.concat([action.data])});\n        case REMOVE_ERROR:\n            let newErrorsArray = state.errors.slice();\n            newErrorsArray.splice(action.data, 1);\n            return Object.assign({}, state, {errors: newErrorsArray});\n        case CLEAR_ERRORS:\n            return Object.assign({}, state,  {errors: []});\n        case ADD_INFO:\n            return Object.assign({}, state, {infos: state.infos.concat([action.data])});\n        case REMOVE_INFO:\n            let newInfosArray = state.infos.slice();\n            newInfosArray.splice(action.data, 1);\n            return Object.assign({}, state, { infos: newInfosArray });\n        case CLEAR_INFOS:\n            return Object.assign({}, state, {infos: []});\n        default:\n            return state;\n    }\n}","import { Action } from \"redux\";\nimport { TOGGLE_SIDEBAR_OPEN } from '../actions/sidebarActions';\n\nexport interface State {\n    open: boolean\n}\n\nlet initialState: State = {\n    open: true\n}\n\nexport default function(state: State = initialState, action: Action) {\n    switch (action.type) {\n        case TOGGLE_SIDEBAR_OPEN:\n            return Object.assign({}, state, {open: !state.open});\n        default:\n            return state;\n    }\n}","import { AnyAction } from \"redux\";\nimport * as io from 'socket.io-client';\n\nimport { INIT_WEBSOCKET,\n         SET_SOCKET_CONNECTED,\n         SET_SOCKET_CONNECTED_USERS }\n    from '../actions/socketActions';\n\nexport interface State {\n    io: SocketIOClient.Socket | null,\n    connected: boolean,\n    connectedUserEmails: string[]\n}\n\nlet initialState: State = {\n    io: null,\n    connected: false,\n    connectedUserEmails: []\n}\n\nexport default function(state: State = initialState, action: AnyAction) {\n    switch(action.type) {\n        case INIT_WEBSOCKET:\n            return Object.assign({}, state, {io: action.data.io});\n        case SET_SOCKET_CONNECTED:\n            return Object.assign({}, state, {connected: action.data.connected});\n        case SET_SOCKET_CONNECTED_USERS:\n            return Object.assign({}, state, {connectedUserEmails: action.data.userEmails })\n        default:\n            return state;\n    }\n}","import {SET_AUTHORIZED, SET_USER, LOGOUT_USER} from '../actions/userActions';\n\nexport interface State {\n    authorized?: boolean,\n    email?: string | boolean,\n    name?: string | boolean,\n    role?: string | boolean,\n}\n\ninterface Action {\n    type: string,\n    data: any\n}\n\nlet initialState : State = {\n    authorized: false,\n    email: false,\n    name: false,\n    role: false,\n}\n\n\nexport default function(state: State = initialState, action: Action) {\n    switch (action.type) {\n        case SET_AUTHORIZED:\n            if (typeof action.data !== 'boolean') {\n                console.error('Data must be boolean for SET_AUTHORIZED action');\n                return state;\n            }\n            if (action.data === false)\n                return Object.assign({}, state, {authorized: false, email: false});\n            return Object.assign({}, state, {authorized: action.data});\n        case SET_USER:\n            return Object.assign({}, state, action.data);\n        case LOGOUT_USER:\n            return {\n                authorized: false,\n                name: false,\n                email: false,\n                role: false\n            }\n        default:\n            return state;\n    }\n}","import {createStore, combineReducers, applyMiddleware, Reducer, StoreEnhancer} from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport {createLogger} from 'redux-logger';\n\nimport userReducer, {State as UserState} from './reducers/user';\nimport channelsReducer, {State as ChannelsState} from './reducers/channels';\nimport notificationsReducer, {State as NotificationsState} from './reducers/notifications';\nimport sidebarReducer, {State as SidebarState} from './reducers/sidebar';\nimport socketReducer, {State as SocketState} from './reducers/socket';\nimport chatUsersReducer, {State as ChatUsersState} from './reducers/chatUsers';\n\nexport interface State {\n    user: UserState,\n    channels: ChannelsState,\n    notifications: NotificationsState,\n    sidebar: SidebarState,\n    socket: SocketState,\n    chatUsers: ChatUsersState,\n}\n\nconst rootReducer: Reducer = combineReducers({\n    user: userReducer,\n    channels: channelsReducer,\n    notifications: notificationsReducer,\n    sidebar: sidebarReducer,\n    socket: socketReducer,\n    chatUsers: chatUsersReducer,\n});\n\nconst middleware: StoreEnhancer =\n    process.env.PRODUCTION || process.env.DISABLE_REDUX_LOGGING ?\n    applyMiddleware(reduxThunk) : applyMiddleware(reduxThunk, createLogger());\n\nexport default createStore(rootReducer, middleware);","before('all tests', function() {\n    // setup DB\n});\nbeforeEach('reset DB', function() {\n\n});\n\nafter('all tests', function() {\n    // teardown DB\n})\n\nrequire('./testStore');\nrequire('./testAsyncActions');\n","import 'mocha';\nimport * as _ from 'lodash';\nimport { Store } from 'redux';\nimport store, { State } from '../src/store';\n\nfunction getStoreCopy(): Store<State> {\n    return _.cloneDeep(store);\n}\n\ndescribe('Async Actions', function() {\n    let store: Store<State>;\n    beforeEach(function() {\n        store = getStoreCopy();\n    });\n    describe('User async actions', function() {\n        it('should update name');\n        it('should update email');\n        it('should update password');\n    });\n    describe('Channels async actions', function () {\n        it('should fetch channels');\n        it('should retrieve channel messages');\n        it('should delete channel');\n        it('should create new channel');\n    });\n    describe('Socket async actions', function () {\n        it('should initialize websocket connection');\n    });\n    describe('Chat Users async actions', function () {\n        it('should fetch all users');\n        it('should create a new user');\n        it('should edit the user');\n        it('should delete the user');\n    });\n})","import { assert } from 'chai';\nimport * as _ from 'lodash';\nimport 'mocha';\nimport store, {State} from '../src/store';\nimport { Store } from 'redux';\nimport { setAuthorized, setUser, logoutUser } from '../src/actions/userActions';\nimport { addChannels, setChannelFetchingNewMessages } from '../src/actions/channelsActions';\n\nfunction getStoreCopy(): Store<State> {\n    return _.cloneDeep(store);\n}\n\ndescribe('Store and Synchronous Actions', function() {\n    describe('User State', function () {\n        let store: Store<State>;\n        let user: (() => State['user']);\n        beforeEach(function () {\n            store = getStoreCopy();\n            user = () => store.getState().user;\n        });\n        it('should not be authorized', function () {\n            assert.isFalse(user().authorized);\n            assert.isFalse(user().email);\n            assert.isFalse(user().name);\n            assert.isFalse(user().role);\n        });\n        it('should be authorized after setAuthorized action', function() {\n            assert.isFalse(user().authorized);\n            store.dispatch(setAuthorized(true));\n            assert.isTrue(user().authorized);\n            store.dispatch(setAuthorized(false));\n            assert.isFalse(user().authorized);\n        });\n        it('should have user data after setting the user', function() {\n            assert.isFalse(user().authorized);\n            assert.isFalse(user().email);\n            assert.isFalse(user().name);\n            assert.isFalse(user().role);\n            store.dispatch(setUser({\n                authorized: true,\n                email: 'test@test.com',\n                name: 'Jane Doe',\n                role: 'admin'\n            }));\n            assert.isTrue(user().authorized);\n            assert.strictEqual(user().email, 'test@test.com');\n            assert.strictEqual(user().name, 'Jane Doe');\n            assert.strictEqual(user().role, 'admin');\n            store.dispatch(setUser({\n                authorized: false,\n                email: false,\n                name: false,\n                role: false\n            }));\n            assert.isFalse(user().authorized);\n            assert.isFalse(user().email);\n            assert.isFalse(user().name);\n            assert.isFalse(user().role);\n        });\n        it('should not have user data after logging out', function() {\n            store.dispatch(setUser({\n                authorized: true,\n                email: 'test@test.com',\n                name: 'Jane Doe',\n                role: 'admin'\n            }));\n            store.dispatch(logoutUser());\n            store.dispatch(setUser({\n                authorized: false,\n                email: false,\n                name: false,\n                role: false\n            }));\n        })\n    });\n    describe('Channels State', function () {\n        let store: Store<State>;\n        let channels: (() => State['channels']);\n        beforeEach(function () {\n            store = getStoreCopy();\n            channels = () => store.getState().channels;\n        });\n        it('should add channels from an array of channel names', function() {\n            store.dispatch(addChannels(['general', 'random', 'something else']));\n            let c0: State['channels'][0] = channels()[0];\n            let c1: State['channels'][0] = channels()[1];\n            let c2: State['channels'][0] = channels()[2];\n            assert.deepStrictEqual(c0, {\n                name: 'general',\n                messages: [],\n                retrieveMessagesOffset: 0,\n                hasMoreMessages: true,\n                fetchingNewMessages: false,\n            });\n            assert.deepStrictEqual(c1, {\n                name: 'random',\n                messages: [],\n                retrieveMessagesOffset: 0,\n                hasMoreMessages: true,\n                fetchingNewMessages: false,\n            });\n            assert.deepStrictEqual(c2, {\n                name: 'something else',\n                messages: [],\n                retrieveMessagesOffset: 0,\n                hasMoreMessages: true,\n                fetchingNewMessages: false,\n            });\n        });\n        it('should update fetchingNewMessages after calling setChannelFetchingNewMessages action', function() {\n            store.dispatch(addChannels(['general', 'random', 'something else']));\n            channels().forEach((c: State['channels'][0]) => {\n                assert.isFalse(c.fetchingNewMessages);\n                store.dispatch(setChannelFetchingNewMessages(c.name, true));\n            });\n            channels().forEach((c: State['channels'][0]) => {\n                assert.isTrue(c.fetchingNewMessages);\n                store.dispatch(setChannelFetchingNewMessages(c.name, false));\n            });\n            channels().forEach((c: State['channels'][0]) => {\n                assert.isFalse(c.fetchingNewMessages);\n            });\n        });\n        it('should increment the channel offset for retrieving new messages', function() {\n            \n        });\n        it('should update the hasMoreMessages property on a channel');\n        it('should add a received message to the appropriate channel');\n        it('should add retreived messages to the appropriate channel');\n        it('should clear all channel data');\n    });\n    describe('Notifications State', function () {\n        it('should add errors');\n        it('should remove errors given an index');\n        it('should clear errors');\n        it('should add info');\n        it('should remove info given an index');\n        it('should clear infos');\n    });\n    describe('Sidebar State', function () {\n        it('should toggle open state');\n    });\n    describe('Socket State', function () {\n        it('should set the socket given an opened SocketIOClient Socket');\n        it('should update the connected state');\n        it('should update the connected users');\n    });\n    describe('Chat Users State', function () {\n        it('should update users');\n        it('should add a user');\n        it('should remove a user');\n    });\n});\n","module.exports = require(\"axios\");","module.exports = require(\"chai\");","module.exports = require(\"lodash\");","module.exports = require(\"mocha\");","module.exports = require(\"redux\");","module.exports = require(\"redux-logger\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"socket.io-client\");"],"sourceRoot":""}