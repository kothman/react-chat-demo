{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./env.js","webpack:///./src/server/controllers/authController.ts","webpack:///./src/server/controllers/channelController.ts","webpack:///./src/server/controllers/messageController.ts","webpack:///./src/server/controllers/userController.ts","webpack:///./src/server/middleware/authorized.ts","webpack:///./src/server/models/Channel.ts","webpack:///./src/server/models/Message.ts","webpack:///./src/server/models/User.ts","webpack:///./src/server/routes.ts","webpack:///./src/server/server.ts","webpack:///./src/server/socket.io/index.ts","webpack:///./src/web/actions/channelsActions.ts","webpack:///./src/web/actions/chatUsersActions.ts","webpack:///./src/web/actions/notificationsActions.ts","webpack:///./src/web/actions/sidebarActions.ts","webpack:///./src/web/actions/socketActions.ts","webpack:///./src/web/actions/userActions.ts","webpack:///./src/web/reducers/channels.ts","webpack:///./src/web/reducers/chatUsers.ts","webpack:///./src/web/reducers/notifications.ts","webpack:///./src/web/reducers/sidebar.ts","webpack:///./src/web/reducers/socket.ts","webpack:///./src/web/reducers/user.ts","webpack:///./src/web/store.ts","webpack:///./tests/index.ts","webpack:///./tests/server/testAuthController.ts","webpack:///./tests/web/testAsyncActions.ts","webpack:///./tests/web/testStore.ts","webpack:///external \"axios\"","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"chai\"","webpack:///external \"compression\"","webpack:///external \"connect-mongo\"","webpack:///external \"cookie-parser\"","webpack:///external \"csurf\"","webpack:///external \"express\"","webpack:///external \"express-session\"","webpack:///external \"helmet\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"lodash\"","webpack:///external \"mocha\"","webpack:///external \"mongoose\"","webpack:///external \"mustache-express\"","webpack:///external \"path\"","webpack:///external \"redux\"","webpack:///external \"redux-logger\"","webpack:///external \"redux-thunk\"","webpack:///external \"socket.io\"","webpack:///external \"socket.io-client\"","webpack:///external \"socketio-jwt\"","webpack:///external \"supertest\"","webpack:///external \"validator\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACdA,oEAA6C;AAC7C,iEAAoC;AAEpC,sFAA6C;AAC7C,IAAM,GAAG,GAAG,mBAAO,CAAC,8BAAc,CAAC,CAAC;AAEpC,qBAAe;IACX,KAAK,EAAE,UAAC,GAAY,EAAE,GAAa;QAC/B,IAAI,mBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,IAAI,mBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE;YACnE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;SACvF;QACD,IAAI,CAAC,mBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC1B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;SAC7E;QACD,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,IAAmB;YACpE,IAAI,CAAC,IAAI;gBACL,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAC9E,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACxB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;iBACjB,IAAI,CAAC;gBACF,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;aAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IACD,QAAQ,EAAE,UAAC,GAAY,EAAE,GAAa;QAClC,IAAI,mBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,IAAI,mBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE;YACnE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC;SACjF;QACD,IAAI,CAAC,mBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC1B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC,CAAC;SACvE;QACD,OAAO,iBAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,cAAc,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,KAAa;YAC/E,IAAI,KAAK,KAAK,CAAC;gBACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,sBAAsB,EAAC,CAAC,CAAC;YACjE,IAAI,YAAY,GAAG,mBAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE/C,iBAAI,CAAC,cAAc,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,KAAa;gBAC5C,IAAI,IAAI,GAAG,MAAM,CAAC;gBAClB,IAAI,KAAK,KAAK,CAAC;oBACX,IAAI,GAAG,OAAO,CAAC;gBACnB,IAAI,IAAI,GAAG,IAAI,iBAAI,CAAC;oBAChB,IAAI,EAAE,EAAE;oBACR,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;oBACrB,QAAQ,EAAE,YAAY;oBACtB,IAAI,EAAE,IAAI;oBACV,aAAa,EAAE,KAAK;iBACvB,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,CAAQ;oBACtB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;gBACjD,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAU;oBAChB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,kDAAkD,EAAC,CAAC,CAAC;gBAC7F,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IAEP,CAAC;IACD,MAAM,EAAE,UAAC,GAAY,EAAE,GAAa;QAChC,GAAG,CAAC,MAAM,EAAE,CAAC;QACb,OAAO,GAAG,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAC,CAAC,CAAC;IAC5D,CAAC;IACD,WAAW,EAAE,UAAC,GAAY,EAAE,GAAa;IACzC,CAAC;CACJ;;;;;;;;;;;;;;;AChED,+FAAoD;AAEpD,qBAAe;IACX,QAAQ,EAAE,UAAC,GAAY,EAAE,GAAa;QAElC,OAAO,oBAAO,CAAC,cAAc,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,KAAa;YACtD,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBAChC,IAAI,KAAK,KAAK,CAAC,EAAE;oBACb,OAAO,OAAO,EAAE,CAAC;iBACpB;gBACD,oBAAO,CAAC,MAAM,CAAC,CAAC,EAAC,IAAI,EAAE,SAAS,EAAC,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBACvD,OAAO,OAAO,EAAE,CAAC;gBACrB,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAU;oBAChB,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;gBACvB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,CAAC,IAAI,CAAC;gBACV,oBAAO,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,QAAoB;oBAC5C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;gBACtD,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAU;oBAChB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,qDAAqD,EAAE,CAAC,CAAC;gBAClG,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAU;gBAChB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,8DAA8D,EAAC,CAAC,CAAC;YACzG,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAU;YAChB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,8CAA8C,EAAC,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;IACP,CAAC;IACD,QAAM,EAAE,UAAC,GAAY,EAAE,GAAa;IAEpC,CAAC;IACD,MAAM,EAAE,UAAC,GAAY,EAAE,GAAa;IAEpC,CAAC;CACJ;;;;;;;;;;;;;;;ACtCD,+FAAoD;AACpD,qBAAe;IACX,QAAQ,EAAE,UAAC,GAAY,EAAE,GAAa;QAClC,OAAO,oBAAO,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,EAAC,CAAC;aAC7C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aACjC,IAAI,CAAC,EAAC,GAAG,EAAE,CAAC,CAAC,EAAC,CAAC;aACf,KAAK,CAAC,EAAE,CAAC;aACT,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,QAAoB;YAC9B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACvB,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,UAAC,CAAW;oBAChC,OAAO;wBACH,IAAI,EAAE,CAAC,CAAC,IAAI;wBACZ,OAAO,EAAE,CAAC,CAAC,SAAS;wBACpB,SAAS,EAAE,CAAC,CAAC,SAAS;wBACtB,OAAO,EAAE,CAAC,CAAC,OAAO;wBAClB,GAAG,EAAE,CAAC,CAAC,GAAG;qBACb,CAAC;gBACL,CAAC,CAAC,CAAC,OAAO,EAAE;aACf,CAAC;QACX,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAU;YAChB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,+CAA+C,EAAE,CAAC,CAAC;QAC5F,CAAC,CAAC;IACN,CAAC;CACJ;;;;;;;;;;;;;;;ACxBD,oEAA2C;AAE3C,sFAAyD;AACzD,iEAA+C;AAE/C,qBAAe;IACX,IAAI,EAAE,UAAC,GAAY,EAAE,GAAa;QAC9B,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IACD,KAAK,EAAE,UAAC,GAAY,EAAE,GAAa;QAC/B,OAAO,iBAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,KAAc;YACrC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAU;YAChB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,6CAA6C,EAAC,CAAC,CAAC;QACxF,CAAC,CAAC;IACN,CAAC;IACD,WAAW,EAAE,UAAC,GAAY,EAAE,GAAa;QACrC,IAAG,CAAC,mBAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;YACxB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,CAAC,CAAC;QAExE,OAAO,iBAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,IAAW;YAC7D,IAAI,IAAI,KAAK,IAAI,EAAE;gBACf,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBACxB,IAAI,EAAE;wBACF,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,GAAG,EAAE,IAAI,CAAC,GAAG;wBACb,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;qBAExB;iBACJ,CAAC,CAAC;aACN;YACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,+BAA+B,EAAC,CAAC,CAAC;QAE1E,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAU;YAChB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,8CAA8C,EAAC,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;IACP,CAAC;IACD,WAAW,EAAE,UAAC,GAAY,EAAE,GAAa;QACrC,IAAG,CAAC,mBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;YACvB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC,CAAC;QAChE,OAAO,iBAAI,CAAC,cAAc,CAAC,EAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,KAAa;YAC1E,IAAI,KAAK,KAAK,CAAC;gBACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,8BAA8B,EAAE,CAAC,CAAC;YAC3E,OAAO,iBAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,IAAW;gBAC5D,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC5B,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,EAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;gBACxE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAU;gBAChB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,+CAA+C,EAAE,CAAC,CAAC;YAC5F,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IACD,UAAU,EAAE,UAAC,GAAY,EAAE,GAAa;QACpC,OAAO,iBAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;aAClC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,IAAW;YACrB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1B,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACxE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAU;YAChB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,gDAAgD,EAAC,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC;IACP,CAAC;IACD,cAAc,EAAE,UAAC,GAAY,EAAE,GAAa;QACxC,IAAI,mBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,mBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;YACtD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,0CAA0C,EAAE,CAAC,CAAC;QACvF,OAAO,iBAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,IAAW;YAC5D,IAAI,CAAC,sBAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC;gBAC7C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,+BAA+B,EAAC,CAAC,CAAC;YAC1E,IAAI,CAAC,QAAQ,GAAG,mBAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3C,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QACjD,CAAC,CAAC;IACN,CAAC;IACD,aAAa,EAAE,UAAC,GAAY,EAAE,GAAa;QACvC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,iBAAiB,EAAC,CAAC,CAAC;IAC5D,CAAC;CACJ;;;;;;;;;;;;;;;AClFD,6EAAsC;AAGtC,IAAM,GAAG,GAAG,mBAAO,CAAC,8BAAc,CAAC,CAAC;AACpC,mBAAwB,GAAY,EAAE,GAAa,EAAE,IAAc;IAE/D,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;QACrD,GAAG,CAAC,SAAS,CAAC,gBAAgB,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KACtD;IACD,IAAI,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;IAC/D,IAAI,CAAC,KAAK;QACN,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;IAE7D,qBAAM,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,EAAE,UAAC,GAAU,EAAE,OAAc;QACjD,IAAI,GAAG;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAClE,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC;QACnB,OAAO,IAAI,EAAE,CAAC;IAClB,CAAC,CAAC,CAAC;AACP,CAAC;AAdD,+BAcC;;;;;;;;;;;;;;;AClBD,iEAAwD;AAQxD,IAAM,aAAa,GAAW,IAAI,iBAAM,CAAC;IACrC,IAAI,EAAE;QACF,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,SAAS,EAAE,IAAI;KAClB;CACJ,EAAE;IACC,UAAU,EAAE,IAAI;CACnB,CAAC,CAAC;AAEH,IAAM,OAAO,GAAoB,gBAAK,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;AACjE,qBAAe,OAAO,CAAC;;;;;;;;;;;;;;;ACnBvB,iEAAwD;AAUxD,IAAM,aAAa,GAAW,IAAI,iBAAM,CAAC;IACrC,OAAO,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KAEjB;IACD,IAAI,EAAE;QACF,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACjB;IACD,SAAS,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,SAAS,EAAE,IAAI;KAElB;CACJ,EAAE;IACC,UAAU,EAAE,IAAI;CACnB,CAAC,CAAC;AAEH,IAAM,OAAO,GAAoB,gBAAK,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;AACjE,qBAAe,OAAO,CAAC;;;;;;;;;;;;;;;AC/BvB,iEAA8E;AAW7E,CAAC;AAMF,IAAM,UAAU,GAAW,IAAI,iBAAM,CAAC;IAClC,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE;QACH,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,IAAI;KAClB;IACD,QAAQ,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACjB;IACD,IAAI,EAAE;QACF,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,SAAS,EAAE,IAAI;QACf,MAAI,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;KAC1B;CACJ,EAAE;IACC,UAAU,EAAE,IAAI;CACnB,CAAC,CAAC;AAEH,UAAU,CAAC,OAAO,CAAC,WAAW,GAAG,UAAU,KAAa;IACpD,OAAO,IAAI,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;AACxC,CAAC;AAED,IAAM,IAAI,GAAe,gBAAK,CAAoB,MAAM,EAAE,UAAU,CAAC,CAAC;AACtE,qBAAe,IAAI,CAAC;;;;;;;;;;;;;;;AC3CpB,mDAA6B;AAE7B,+GAAiD;AACjD,6HAA0D;AAC1D,6HAA0D;AAC1D,sIAAgE;AAChE,sIAAgE;AAEhE,mBAAwB,GAAQ;IAG5B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,GAAY,EAAE,GAAa;QAC9C,OAAO,GAAG,CAAC,MAAM,CACb,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,8BAA8B,CAAC,EACvD,EAAE,SAAS,EAAE,GAAG,CAAC,SAAS,EAAE,EAAE,CACjC,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,UAAU,GAAQ,EAAE,GAAQ;QAC3C,OAAO,GAAG,CAAC,MAAM,CACb,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,wCAAwC,CAAC,CACpE,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,UAAU,GAAQ,EAAE,GAAQ;QAChD,OAAO,GAAG,CAAC,MAAM,CACb,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,uCAAuC,CAAC,CACnE,CAAC;IACN,CAAC,CAAC,CAAC;IAIH,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,2BAAc,CAAC,KAAK,CAAC,CAAC;IAChD,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,2BAAc,CAAC,QAAQ,CAAC,CAAC;IACtD,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,2BAAc,CAAC,MAAM,CAAC,CAAC;IACjD,GAAG,CAAC,GAAG,CAAC,yBAAyB,EAAE,2BAAc,CAAC,WAAW,CAAC,CAAC;IAE/D,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAU,CAAC,CAAC;IACpC,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,2BAAc,CAAC,IAAI,CAAC,CAAC;IAC7C,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,2BAAc,CAAC,KAAK,CAAC;IAC9C,GAAG,CAAC,GAAG,CAAC,oBAAoB,EAAE,2BAAc,CAAC,WAAW,CAAC,CAAC;IAC1D,GAAG,CAAC,IAAI,CAAC,2BAA2B,EAAE,2BAAc,CAAC,WAAW,CAAC,CAAC;IAClE,GAAG,CAAC,IAAI,CAAC,0BAA0B,EAAE,2BAAc,CAAC,UAAU,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,8BAA8B,EAAE,2BAAc,CAAC,cAAc,CAAC,CAAC;IACxE,GAAG,CAAC,IAAI,CAAC,6BAA6B,EAAE,2BAAc,CAAC,aAAa,CAAC,CAAC;IAEtE,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,uBAAU,CAAC,CAAC;IACxC,GAAG,CAAC,GAAG,CAAC,mCAAmC,EAAE,8BAAiB,CAAC,QAAQ,CAAC,CAAC;IAEzE,GAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE,uBAAU,CAAC,CAAC;IACvC,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,8BAAiB,CAAC,QAAQ,CAAC,CAAC;IACxD,GAAG,CAAC,IAAI,CAAC,yBAAyB,EAAE,8BAAiB,CAAC,QAAM,EAAC,CAAC;IAC9D,GAAG,CAAC,IAAI,CAAC,yBAAyB,EAAE,8BAAiB,CAAC,MAAM,CAAC,CAAC;IAG9D,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,GAAY,EAAE,GAAa;QAC9C,OAAO,GAAG,CAAC,MAAM,CACb,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,8BAA8B,CAAC,EACvD,EAAE,SAAS,EAAE,GAAG,CAAC,SAAS,EAAE,EAAE,CACjC,CAAC;IACN,CAAC,CAAC,CAAC;AACP,CAAC;AArDD,+BAqDC;;;;;;;;;;;;;;;;AC3DD,mDAA6B;AAC7B,4DAAmC;AACnC,mDAA6B;AAE7B,+DAAqC;AACrC,qDAA8B;AAC9B,6EAA8C;AAC9C,4EAA2C;AAC3C,uEAA0C;AAC1C,6DAAmC;AACnC,yDAAiC;AAEjC,wEAA2C;AAC3C,6EAAoC;AACpC,IAAM,eAAe,GAAG,mBAAO,CAAC,0CAAkB,CAAC,CAAC;AACpD,IAAM,UAAU,GAAG,mBAAO,CAAC,oCAAe,CAAC,CAAC,OAAO,CAAC,CAAC;AAErD,6EAA8B;AAC9B,8FAA0C;AAE1C,qFAA4C;AAC5C,IAAM,GAAG,GAAG,mBAAO,CAAC,2BAAW,CAAC,CAAC;AAEjC,IAAM,GAAG,GAAQ,OAAO,EAAE,CAAC;AAmIlB,kBAAG;AAlIZ,IAAM,IAAI,GAAoB,GAAG,CAAC,IAAI,CAAC;AACvC,IAAI,MAAmB,CAAC;AACxB,IAAI,YAA6B,CAAC;AAgIpB,oCAAY;AA9H1B,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,eAAe,EAAE,CAAC,CAAC;AACtC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AAE/B,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;AAEvB,IAAM,iBAAiB,GAAG,OAAO,CAAC;IAC9B,MAAM,EAAE,GAAG,CAAC,MAAM;IAClB,MAAM,EAAE;QACJ,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;QAC3B,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,GAAG,CAAC,UAAU;QACtB,QAAQ,EAAE,IAAI;KACjB;IACD,iBAAiB,EAAE,IAAI;IACvB,MAAM,EAAE,KAAK;IACb,KAAK,EAAE,IAAI,UAAU,CAAC;QAClB,kBAAkB,EAAE,QAAQ,CAAC,UAAU;KAC1C,CAAC;CACL,CAAC,CAAC;AAEH,IAAM,cAAc,GAAG,IAAI,CAAC;IACxB,MAAM,EAAE;QACJ,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;QAC3B,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,GAAG,CAAC,UAAU;QACtB,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,OAAO;KACf;CACJ,CAAC;AAEF,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC,GAAG,CAAC,oBAAoB,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;AACrH,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,GAAG;IACxC,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,GAAG,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC;AACH,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE;IACjB,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,kEAAkE,CAAC,CAAC;QAChF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;AAElC,IAAG,GAAG,CAAC,WAAW,EAAE;IAChB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAC7B,GAAG,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI;QACnB,GAAG,CAAC,SAAS,GAAG,cAAc,OAAO,EAAE,EAAC,CAAC;QACzC,OAAO,IAAI,EAAE,CAAC;IAClB,CAAC,CAAC,CAAC;CACN;KAAM;IACH,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;CAC3B;AAED,IAAI,EAAE,GAAwB,QAAQ,CAAC,UAAU,CAAC;AAClD,GAAG,CAAC,GAAG,CAAC,UAAC,GAAY,EAAE,GAAa,EAAE,IAAc;IAChD,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;IACZ,OAAO,IAAI,EAAE,CAAC;AAClB,CAAC,CAAC;AACF,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAInD,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;AAElB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC,CAAC,CAAC;AAEvE,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,GAAY,EAAE,GAAa,EAAE,IAAc;IAEjE,OAAO,IAAI,EAAE,CAAC;AAClB,CAAC,CAAC,CAAC;AACH,GAAG,CAAC,GAAG,CAAC,UAAC,GAAY,EAAE,GAAa,EAAE,IAAc;IAChD,GAAG,CAAC,YAAY,GAAG,UAAC,KAAa,EACb,QAAgB,EAChB,IAA0D;QAC1E,iBAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,IAAW;YACrC,IAAI,IAAI,KAAK,IAAI;gBAAE,OAAO,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC;gBAAE,OAAO,IAAI,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACpG,IAAI,WAAW,GAAQ;gBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;aAClB;YACD,OAAO,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAU;YAChB,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,GAAG,CAAC,MAAM,GAAG;QACT,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;IAC7B,CAAC;IACD,GAAG,CAAC,aAAa,GAAG,UAAC,IAAW;QAC5B,IAAI,KAAK,GAAW,mBAAI,CAAC;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;SACpB,EAAE,GAAG,CAAC,MAAM,EAAE;YACX,SAAS,EAAE,KAAK;SACnB,CAAC,CAAC;QACH,GAAG,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1B,GAAG,CAAC,SAAS,CAAC,gBAAgB,EAAE,KAAK,CAAC;IAC1C,CAAC;IACD,IAAI,EAAE,CAAC;AACX,CAAC,CAAC,CAAC;AAEH,mBAAM,CAAC,GAAG,CAAC,CAAC;AACZ,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;AAChC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,GAAU;IAC1B,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnB,MAAM,CAAC,KAAK,EAAE,CAAC;AACnB,CAAC,CAAC;AAEF,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE;IACvB,mCAAY,GAAG,kBAAS,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IACrC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,WAAW,EAAE;QAChC,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QACjD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,uBAAqB,IAAI,MAAG,CAAC,CAAC;YAC1C,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;CACN;AAED,qBAAe,MAAM,CAAC;AACT,YAAI,GAAG,QAAQ,CAAC,UAAU,CAAC;;;;;;;;;;;;;;;;AC3JxC,iEAAsC;AAGtC,6EAAuD;AACvD,+FAAsD;AAEtD,IAAM,GAAG,GAAG,mBAAO,CAAC,8BAAc,CAAC,CAAC;AAMpC,IAAM,IAAI,GAAG,UAAC,MAAc,EAAE,EAAc;IACxC,IAAM,EAAE,GAAoB,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC7C,IAAI,mBAAmB,GAAa,EAAE,CAAC;IAGvC,EAAE,CAAC,EAAE,CAAC,YAAY,EAAE,wBAAY,CAAC;QACzB,MAAM,EAAE,GAAG,CAAC,MAAM;QAClB,OAAO,EAAE,KAAK;QACd,mBAAmB,EAAE,KAAK;KAC7B,CAAC,CAAC,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,MAAc;QAEnC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;QACpD,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,KAAK,EAAE,IAAI;YACrE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;QACzC,CAAC,CAAC,CAAC,CAAC;QAEJ,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE;YACpB,mBAAmB,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7E,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,KAAK,EAAE,IAAI;gBACrE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;YACzC,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,OAA0C;YAC5D,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,IAAI,CAAC,GAAa,IAAI,oBAAO,CAAC;gBAC1B,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,SAAS,EAAE,MAAM,CAAC,GAAG,CAAC,KAAK;aAC9B,CAAC,CAAC;YACH,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,CAAW;gBACtB,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE;oBACf,GAAG,EAAE,CAAC,CAAC,GAAG;oBACV,SAAS,EAAE,CAAC,CAAC,SAAS;oBACtB,IAAI,EAAE,CAAC,CAAC,IAAI;oBACZ,OAAO,EAAE,CAAC,CAAC,OAAO;oBAClB,OAAO,EAAE,CAAC,CAAC,SAAS;iBACvB,CAAC,CAAC;gBACH,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAU;gBAChB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACP,OAAO,EAAE,CAAC;AACd,CAAC;AAED,qBAAe,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DpB,iBAoJA;;AAnJA,wDAAyD;AAEzD,4HAAyD;AAE5C,oBAAY,GAAG,cAAc,CAAC;AAC9B,yCAAiC,GAAG,mCAAmC,CAAC;AACxE,qCAA6B,GAAG,8BAA8B,CAAC;AAC/D,oCAA4B,GAAG,8BAA8B,CAAC;AAC9D,sCAA8B,GAAG,gCAAgC,CAAC;AAClE,kDAA0C,GAAG,4CAA4C,CAAC;AAC1F,iCAAyB,GAAG,2BAA2B,CAAC;AACxD,2BAAmB,GAAG,qBAAqB,CAAC;AAE5C,mBAAW,GAAG,UAAC,YAAsB;IAC9C,IAAI,QAAQ,GAAU,EAAE,CAAC;IACzB,YAAY,CAAC,OAAO,CAAC,UAAC,IAAY;QAC9B,QAAQ,CAAC,IAAI,CAAC;YACV,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,EAAE;YACZ,sBAAsB,EAAE,CAAC;YACzB,eAAe,EAAE,IAAI;YACrB,mBAAmB,EAAE,KAAK;SAC7B,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,OAAO;QACH,IAAI,EAAE,oBAAY;QAClB,IAAI,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE;KAC/B,CAAC;AACN,CAAC;AAEY,8CAAsC,GAAG,UAAC,OAAe,EAAE,CAAS;IAC7E,OAAO;QACH,IAAI,EAAE,kDAA0C;QAChD,IAAI,EAAE;YACF,OAAO,EAAE,OAAO;YAChB,SAAS,EAAE,CAAC;SACf;KACJ,CAAC;AACN,CAAC;AAEY,qCAA6B,GAAG,UAAC,OAAe,EAAE,UAAmB;IAC9E,OAAO;QACH,IAAI,EAAE,yCAAiC;QACvC,IAAI,EAAE;YACF,WAAW,EAAE,OAAO;YACpB,UAAU,EAAE,UAAU;SACzB;KACJ,CAAC;AACN,CAAC;AAEY,iCAAyB,GAAG,UAAC,WAAmB,EAAE,OAAgB;IAC3E,OAAO;QACH,IAAI,EAAE,qCAA6B;QACnC,IAAI,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE;KACvD,CAAC;AACN,CAAC;AAEY,iCAAyB,GAAG,UAAC,WAAmB,EAAE,OAAgB;IAC3E,OAAO;QACH,IAAI,EAAE,oCAA4B;QAClC,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE;KACvD,CAAC;AACN,CAAC;AAEY,mCAA2B,GAAG,UAAC,WAAmB,EAAE,QAAmB;IAChF,OAAO;QACH,IAAI,EAAE,sCAA8B;QACpC,IAAI,EAAE,EAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAC;KACvD,CAAC;AACN,CAAC;AAEY,yBAAiB,GAAG;IAC7B,OAAO;QACH,IAAI,EAAE,2BAAmB;KAC5B;AACL,CAAC;AAIY,qBAAa,GAAG;IACzB,OAAO,UAAC,QAAa;QACjB,OAAO,kBAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;YACzD,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAE,UAAC,CAA8B;gBACjE,OAAO,CAAC,CAAC,IAAI,CAAC;YAClB,CAAC,CAAC,CAAC;YACH,OAAO,QAAQ,CAAC,mBAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,QAAQ,CAAC,+BAAQ,CAAC,yDAAyD,CAAC,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC;AAEY,+BAAuB,GAAG,UAAC,WAAmB;IACvD,OAAO,UAAO,QAAa,EAAE,QAAa;;;YAClC,OAAO,GAAY,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAE,UAAC,CAAU;gBACxD,OAAO,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC;YAClC,CAAC,CAAC;YACF,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,mBAAmB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;gBACrE,OAAO,CAAC,GAAG,CAAC,qGAAqG,EACrG,WAAW,EACX,QAAQ,EAAE,CAAC,CAAC;gBACxB,WAAO,OAAO,CAAC,OAAO,EAAE,EAAC;aAC5B;YACD,QAAQ,CAAC,qCAA6B,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YAC5D,WAAO,kBAAK,CAAC,GAAG,CAAC,mBAAmB,GAAG,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;oBAChH,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;wBAChC,QAAQ,CAAC,iCAAyB,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;wBACzD,OAAO,GAAG,CAAC;qBACd;oBACD,QAAQ,CAAC,8CAAsC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;oBAClE,QAAQ,CAAC,mCAA2B,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1E,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;oBACrB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;oBACrD,QAAQ,CAAC,+BAAQ,CAAC,qDAAqD,CAAC,CAAC,CAAC;gBAC9E,CAAC,CAAC,CAAC,IAAI,CAAC;oBACJ,OAAO,QAAQ,CAAC,qCAA6B,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;gBACxE,CAAC,CAAC,EAAC;;SACN;AACL,CAAC;AAEY,qBAAa,GAAG,UAAC,WAAmB;IAC7C,OAAO,UAAC,QAAa;QACjB,OAAO,kBAAK,CAAC,GAAG,CAAC,yBAAyB,GAAG,WAAW,CAAC;YACrD,IAAI,CAAC,UAAC,GAAkB;YACpB,QAAQ,CAAC,8BAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACrC,OAAO,QAAQ,CAAC,qBAAa,EAAE,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;YAC3C,OAAO,QAAQ,CAAC,+BAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACX,CAAC,CAAC;AACN,CAAC;AAEY,kBAAU,GAAG,UAAC,WAAmB;IAC1C,OAAO,UAAC,QAAa;QACjB,OAAO,kBAAK,CAAC,IAAI,CAAC,wBAAwB,EAAE;YACxC,WAAW,EAAE,WAAW;SAC3B,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;YACvB,QAAQ,CAAC,8BAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACrC,OAAO,QAAQ,CAAC,qBAAa,EAAE,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;YAC1C,OAAO,QAAQ,CAAC,+BAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACvD,CAAC,CAAC;IACN,CAAC,CAAC;AACN,CAAC;;;;;;;;;;;;;;;ACnJD,wDAAyD;AAIzD,4HAAkD;AAErC,yBAAiB,GAAG,mBAAmB,CAAC;AACxC,qBAAa,GAAG,UAAU,CAAC;AAC3B,wBAAgB,GAAG,aAAa,CAAC;AAEjC,mBAAW,GAAG,UAAS,KAAY;IAC5C,OAAO;QACH,IAAI,EAAE,yBAAiB;QACvB,IAAI,EAAE;YACF,KAAK,EAAE,KAAK;SACf;KACJ;AACL,CAAC;AAEY,eAAO,GAAG,UAAS,IAAc;IAC1C,OAAO;QACH,IAAI,EAAE,qBAAa;QACnB,IAAI,EAAE;YACF,IAAI,EAAE,IAAI;SACb;KACJ;AACL,CAAC;AAEY,kBAAU,GAAG,UAAS,KAAa;IAC5C,OAAO;QACH,IAAI,EAAE,wBAAgB;QACtB,IAAI,EAAE;YACF,KAAK,EAAE,KAAK;SACf;KACJ;AACL,CAAC;AAGY,qBAAa,GAAG;IACzB,OAAO,UAAC,QAAkB;QACtB,kBAAK,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;YAC/C,IAAI,KAAK,GAAU,EAAE,CAAC;YACtB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAW;gBAC/B,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG;oBACb,IAAI,EAAE,CAAC,CAAC,IAAI;oBACZ,IAAI,EAAE,CAAC,CAAC,IAAI;iBACf,CAAC;YACN,CAAC,CAAC,CAAC;YACH,QAAQ,CAAC,mBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7B,OAAO,GAAG,CAAC;QACf,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,QAAQ,CAAC,+BAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC;AAEY,qBAAa,GAAG,UAAC,IAAc;AAE5C,CAAC;AAEY,gBAAQ,GAAG,UAAC,KAAa,EAAE,IAAc;AAEtD,CAAC;AAEY,kBAAU,GAAG,UAAC,KAAa;AAExC,CAAC;;;;;;;;;;;;;;;ACpEY,iBAAS,GAAG,WAAW,CAAC;AACxB,oBAAY,GAAG,cAAc,CAAC;AAC9B,oBAAY,GAAG,cAAc,CAAC;AAC9B,gBAAQ,GAAG,UAAU,CAAC;AACtB,mBAAW,GAAG,aAAa,CAAC;AAC5B,mBAAW,GAAG,aAAa,CAAC;AAE5B,gBAAQ,GAAG,UAAC,KAAa;IAClC,OAAO;QACH,IAAI,EAAE,iBAAS;QACf,IAAI,EAAE,KAAK;KACd,CAAC;AACN,CAAC;AAEY,mBAAW,GAAG,UAAC,CAAS;IACjC,OAAO;QACH,IAAI,EAAE,oBAAY;QAClB,IAAI,EAAE,CAAC;KACV,CAAC;AACN,CAAC;AAEY,mBAAW,GAAG;IACvB,OAAO,EAAE,IAAI,EAAE,oBAAY,EAAE,CAAC;AAClC,CAAC;AAEY,eAAO,GAAG,UAAC,IAAY;IAChC,OAAO;QACH,IAAI,EAAE,gBAAQ;QACd,IAAI,EAAE,IAAI;KACb,CAAC;AACN,CAAC;AAEY,kBAAU,GAAG,UAAC,CAAS;IAChC,OAAO;QACH,IAAI,EAAE,mBAAW;QACjB,IAAI,EAAE,CAAC;KACV,CAAC;AACN,CAAC;AAEY,kBAAU,GAAG;IACtB,OAAO;QACH,IAAI,EAAE,mBAAW;KACpB,CAAC;AACN,CAAC;;;;;;;;;;;;;;;AC3CY,2BAAmB,GAAG,qBAAqB,CAAC;AAE5C,yBAAiB,GAAG;IAC7B,OAAO;QACH,IAAI,EAAE,2BAAmB;KAC5B;AACL,CAAC;;;;;;;;;;;;;;;ACND,yEAAuC;AAK1B,sBAAc,GAAG,gBAAgB,CAAC;AAClC,4BAAoB,GAAG,sBAAsB,CAAC;AAC9C,kCAA0B,GAAG,4BAA4B,CAAC;AAE1D,qBAAa,GAAG,UAAC,EAAyB;IACnD,OAAO;QACH,IAAI,EAAE,sBAAc;QACpB,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;KACnB,CAAC;AACN,CAAC;AAEY,0BAAkB,GAAG,UAAC,SAAkB;IACjD,OAAO;QACH,IAAI,EAAE,4BAAoB;QAC1B,IAAI,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE;KACjC;AACL,CAAC;AAEY,+BAAuB,GAAG,UAAC,UAAoB;IACxD,OAAO;QACH,IAAI,EAAE,kCAA0B;QAChC,IAAI,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE;KACnC;AACL,CAAC;AAEY,YAAI,GAAG;IAChB,OAAO,UAAC,QAAkB,EAAE,QAAkB;QAC1C,IAAI,MAAM,GAA0B,EAAE,EAAE,CAAC;QACzC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE;YACjB,MAAM;iBACD,IAAI,CAAC,cAAc,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;iBACtD,EAAE,CAAC,eAAe,EAAE;gBACjB,QAAQ,CAAC,0BAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,MAAM,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;gBAC9C,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,UAAC,UAAoB;oBAC9C,QAAQ,CAAC,+BAAuB,CAAC,UAAU,CAAC,CAAC,CAAC;gBAClD,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;iBACD,EAAE,CAAC,cAAc,EAAE,UAAU,GAAQ;gBAClC,QAAQ,CAAC,0BAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBACzD,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAC7B,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE;YACpB,QAAQ,CAAC,0BAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,0DAA0D,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC,qBAAa,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3C,CAAC;AACL,CAAC;;;;;;;;;;;;;;;ACzDD,wDAAyD;AAEzD,6GAAoD;AACpD,4HAAyD;AAE5C,sBAAc,GAAG,gBAAgB,CAAC;AAClC,gBAAQ,GAAG,UAAU,CAAC;AACtB,mBAAW,GAAG,aAAa,CAAC;AAC5B,eAAO,GAAG,SAAS,CAAC;AAEpB,qBAAa,GAAG,UAAC,UAAmB;IAC7C,OAAQ;QACJ,IAAI,EAAE,sBAAc;QACpB,IAAI,EAAE,UAAU;KACnB,CAAC;AACN,CAAC;AAEY,eAAO,GAAG,UAAC,IAAe;IACnC,OAAO;QACH,IAAI,EAAE,gBAAQ;QACd,IAAI,EAAE,IAAI;KACb,CAAC;AACN,CAAC;AAEY,kBAAU,GAAG;IACtB,OAAO;QACH,IAAI,EAAE,mBAAW;KACpB,CAAC;AACN,CAAC;AAEY,cAAM,GAAG,UAAC,KAAa;IAChC,OAAO;QACH,IAAI,EAAE,eAAO;QACb,IAAI,EAAE,KAAK;KACd,CAAC;AACN,CAAC;AAEY,cAAM,GAAG;IAClB,OAAO,UAAC,QAAa;QACjB,QAAQ,CAAC,kBAAU,EAAE,CAAC,CAAC;QACvB,OAAO,QAAQ,CAAC,mCAAiB,EAAE,CAAC,CAAC;IACzC,CAAC;AAEL,CAAC;AAGY,kBAAU,GAAG,UAAC,IAAY,EAAE,SAAoB;IACzD,OAAO,UAAC,QAAa;QACjB,OAAO,kBAAK,CAAC,IAAI,CAAC,0BAA0B,EAAE;YAC1C,IAAI,EAAE,IAAI;SACb,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;YACvB,QAAQ,CAAC,8BAAO,CAAC,cAAc,CAAC,CAAC,CAAC;YAClC,IAAI,SAAS;gBAAE,SAAS,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,IAAI,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;gBACvC,OAAO,QAAQ,CAAC,+BAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,OAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,GAAG,CAAC,CAAC;YAC5D,QAAQ,CAAC,+BAAQ,CAAC,wDAAwD,CAAC,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAEY,mBAAW,GAAG,UAAC,KAAa,EAAE,SAAoB;IAC3D,OAAO,UAAC,QAAa;QACjB,OAAO,kBAAK,CAAC,IAAI,CAAC,2BAA2B,EAAE;YAC3C,KAAK,EAAE,KAAK;SACf,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;YACvB,QAAQ,CAAC,8BAAO,CAAC,eAAe,CAAC,CAAC,CAAC;YACnC,IAAI,SAAS;gBAAE,SAAS,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,IAAI,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;gBACvC,OAAO,QAAQ,CAAC,+BAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAE,GAAG,CAAC,CAAC;YAC7D,QAAQ,CAAC,+BAAQ,CAAC,yDAAyD,CAAC,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAEY,sBAAc,GAAG,UAAC,OAAe,EAAE,OAAe,EAAE,SAAoB;IACjF,OAAO,UAAC,QAAa;QACjB,OAAO,kBAAK,CAAC,IAAI,CAAC,8BAA8B,EAAE;YAC9C,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;SACnB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAkB;YACvB,QAAQ,CAAC,8BAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACtC,IAAI,SAAS;gBAAE,SAAS,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAe;YACrB,IAAI,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK;gBACvC,OAAO,QAAQ,CAAC,+BAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,OAAO,CAAC,GAAG,CAAC,6CAA6C,EAAE,GAAG,CAAC,CAAC;YAChE,QAAQ,CAAC,+BAAQ,CAAC,4DAA4D,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;;;;;;;;;;;;;;;AC7FD,sHAOsC;AA0BtC,IAAI,YAAY,GAAU,EAAE,CAAC;AAEhB,qBAAa,GAAG,UAAC,QAA2B,EAAE,WAAmB;IAC1E,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAE,UAAC,CAAU;QACpC,OAAO,CAAC,CAAC,IAAI,KAAK,WAAW,CAAC;IAClC,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,OAAO;QAAE,OAAO,KAAK,CAAC;IAC3B,OAAO,OAAO,CAAC;AACnB,CAAC;AAED,mBAAyB,KAA2B,EAAE,MAAc;IAA3C,4CAA2B;IAChD,QAAO,MAAM,CAAC,IAAI,EAAE;QAChB,KAAK,8BAAY;YACb,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QAChC,KAAK,4DAA0C,CAAC,CAAC;YAC7C,IAAI,SAAO,GAAY,qBAAa,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjE,IAAI,WAAS,GAAW,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;YAC9C,IAAI,CAAC,SAAO,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,oDAAoD,EAAE,MAAM,CAAC,CAAC;gBAC1E,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,aAAW,GAAc,KAAK,CAAC,GAAG,CAAE,UAAC,CAAU;gBAC/C,IAAG,CAAC,CAAC,IAAI,KAAK,SAAO,CAAC,IAAI,EAAE;oBACxB,CAAC,CAAC,sBAAsB,IAAI,WAAS,CAAC;iBACzC;gBACD,OAAO,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;YACH,OAAO,aAAW,CAAC;SACtB;QACD,KAAK,mDAAiC;YAClC,IAAI,OAAO,GAAY,qBAAa,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACrE,IAAI,CAAC,OAAO,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,6CAA6C,EAAE,MAAM,CAAC,CAAC;gBACnE,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,WAAW,GAAc,KAAK,CAAC,GAAG,CAAE,UAAC,CAAU;gBAC/C,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE;oBACpC,CAAC,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;iBAClD;gBACD,OAAO,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;YACH,OAAO,WAAW,CAAC;QACvB,KAAK,+CAA6B,CAAC,CAAC;YAChC,IAAI,SAAO,GAAY,qBAAa,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACrE,IAAI,SAAO,GAAY,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;YAC3C,IAAI,CAAC,SAAO,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,gDAAgD,EAAE,MAAM,CAAC,CAAC;gBACtE,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,aAAW,GAAc,KAAK,CAAC,GAAG,CAAE,UAAC,CAAU;gBAC/C,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,WAAW;oBAClC,CAAC,CAAC,eAAe,GAAG,SAAO,CAAC;gBAChC,OAAO,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;YACH,OAAO,aAAW,CAAC;SACtB;QACD,KAAK,gDAA8B,CAAC,CAAC;YACjC,IAAI,mBAAiB,GAAc,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACxD,IAAI,aAAW,GAAW,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;YAClD,IAAI,SAAO,GAAY,qBAAa,CAAC,KAAK,EAAE,aAAW,CAAC,CAAC;YACzD,IAAG,CAAC,SAAO,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,yDAAyD,EAAE,MAAM,CAAC,CAAC;gBAC/E,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,aAAW,GAAc,KAAK,CAAC,GAAG,CAAE,UAAC,CAAU;gBAC/C,IAAI,CAAC,CAAC,IAAI,KAAK,aAAW;oBACtB,CAAC,CAAC,QAAQ,GAAG,mBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACtD,OAAO,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;YACH,OAAO,aAAW,CAAC;SACtB;QACD,KAAK,8CAA4B,CAAC,CAAC;YAC/B,IAAI,iBAAe,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;YAC1C,IAAI,aAAW,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;YAC1C,IAAI,SAAO,GAAY,qBAAa,CAAC,KAAK,EAAE,aAAW,CAAC,CAAC;YACzD,IAAI,CAAC,SAAO,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,+CAA+C,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;gBAC5E,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,aAAW,GAAc,KAAK,CAAC,GAAG,CAAC,UAAC,CAAU;gBAC9C,IAAG,CAAC,CAAC,IAAI,KAAK,aAAW;oBACrB,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,iBAAe,CAAC,CAAC,CAAC;gBACtD,OAAO,CAAC,CAAC;YACb,CAAC,CAAC;YACF,OAAO,aAAW,CAAC;SACtB;QACD,KAAK,qCAAmB;YACpB,OAAO,EAAE,CAAC;QACd;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC;AAjFD,+BAiFC;;;;;;;;;;;;;;;AC3HD,yHACuC;AAevC,IAAI,YAAY,GAAU,EAEzB;AAED,mBAAwB,KAA2B,EAAE,MAAiB;IAA9C,4CAA2B;;IAC/C,QAAO,MAAM,CAAC,IAAI,EAAE;QAChB,KAAK,oCAAiB;YAClB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QAC7B,KAAK,gCAAa;YACd,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK;gBAC1B,GAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAG;oBACtB,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;oBAC3B,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;iBAC9B;oBACH,CAAC;QACP,KAAK,mCAAgB;YACjB,IAAI,KAAK,GAAU,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YAC5C,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACnC;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC;AAjBD,+BAiBC;;;;;;;;;;;;;;;ACtCD,qIAC2C;AAW3C,IAAI,YAAY,GAAU;IACtB,MAAM,EAAE,EAAE;IACV,KAAK,EAAE,EAAE;CACZ;AAED,mBAAwB,KAA2B,EAAE,MAAc;IAA3C,4CAA2B;IAC/C,QAAO,MAAM,CAAC,IAAI,EAAE;QAChB,KAAK,gCAAS;YACV,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC;QAClF,KAAK,mCAAY;YACb,IAAI,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAC1C,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACtC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,MAAM,EAAE,cAAc,EAAC,CAAC,CAAC;QAC9D,KAAK,mCAAY;YACb,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAG,EAAC,MAAM,EAAE,EAAE,EAAC,CAAC,CAAC;QACnD,KAAK,+BAAQ;YACT,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC;QAChF,KAAK,kCAAW;YACZ,IAAI,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACxC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACrC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC;QAC9D,KAAK,kCAAW;YACZ,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAC,CAAC,CAAC;QACjD;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC;AArBD,+BAqBC;;;;;;;;;;;;;;;ACrCD,mHAAgE;AAMhE,IAAI,YAAY,GAAU;IACtB,IAAI,EAAE,IAAI;CACb;AAED,mBAAwB,KAA2B,EAAE,MAAc;IAA3C,4CAA2B;IAC/C,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,oCAAmB;YACpB,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,EAAC,CAAC,CAAC;QACzD;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC;AAPD,+BAOC;;;;;;;;;;;;;;;ACfD,gHAGoC;AAQpC,IAAI,YAAY,GAAU;IACtB,EAAE,EAAE,IAAI;IACR,SAAS,EAAE,KAAK;IAChB,mBAAmB,EAAE,EAAE;CAC1B;AAED,mBAAwB,KAA2B,EAAE,MAAiB;IAA9C,4CAA2B;IAC/C,QAAO,MAAM,CAAC,IAAI,EAAE;QAChB,KAAK,8BAAc;YACf,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,CAAC;QAC1D,KAAK,oCAAoB;YACrB,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC;QACxE,KAAK,0CAA0B;YAC3B,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,mBAAmB,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QACnF;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC;AAXD,+BAWC;;;;;;;;;;;;;;;AC/BD,0GAAsF;AAetF,IAAI,YAAY,GAAW;IACvB,UAAU,EAAE,KAAK;IACjB,KAAK,EAAE,KAAK;IACZ,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,KAAK;IACX,GAAG,EAAE,KAAK;CACb;AAGD,mBAAwB,KAA2B,EAAE,MAAc;IAA3C,4CAA2B;IAC/C,QAAQ,MAAM,CAAC,IAAI,EAAE;QACjB,KAAK,4BAAc;YACf,IAAI,OAAO,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE;gBAClC,OAAO,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;gBAChE,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK;gBACrB,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;YACvE,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,MAAM,CAAC,IAAI,EAAC,CAAC,CAAC;QAC/D,KAAK,sBAAQ;YACT,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QACjD,KAAK,yBAAW;YACZ,OAAO;gBACH,UAAU,EAAE,KAAK;gBACjB,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,KAAK;aACd;QACL,KAAK,qBAAO;YACR,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAC,CAAC,CAAC;QAC1D;YACI,OAAO,KAAK,CAAC;KACpB;AACL,CAAC;AAxBD,+BAwBC;;;;;;;;;;;;;;;AChDD,wDAA4F;AAC5F,0EAAqC;AACrC,6EAA0C;AAE1C,sFAAgE;AAChE,kGAA4E;AAC5E,iHAA2F;AAC3F,+FAAyE;AACzE,4FAAsE;AACtE,qGAA+E;AAE/E,IAAM,GAAG,GAAG,mBAAO,CAAC,2BAAW,CAAC,CAAC;AAWjC,IAAM,WAAW,GAAY,uBAAe,CAAC;IACzC,IAAI,EAAE,iBAAW;IACjB,QAAQ,EAAE,qBAAe;IACzB,aAAa,EAAE,0BAAoB;IACnC,OAAO,EAAE,oBAAc;IACvB,MAAM,EAAE,mBAAa;IACrB,SAAS,EAAE,sBAAgB;CAC9B,CAAC,CAAC;AAEH,IAAM,UAAU,GACZ,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAC3C,uBAAe,CAAC,wBAAU,CAAC,CAAC,CAAC,CAAC,uBAAe,CAAC,wBAAU,EAAE,2BAAY,EAAE,CAAC,CAAC;AAE9E,qBAAe,mBAAW,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;;;;;;;;;;;;;;;ACnCpD,yFAAiD;AAiDxC,cAjDM,YAAG,CAiDN;AAhDZ,iGAA6C;AAE7C,IAAM,kBAAkB,GAAG;IACvB,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QAChC,iBAAI,CAAC,UAAU,CAAC,EAAE,EAAE,UAAC,GAAQ;YACzB,IAAI,GAAG;gBAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;YAC5B,OAAO,OAAO,EAAE,CAAC;QACrB,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,OAAK,EAAC,UAAC,GAAQ;QAC3B,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;AACP,CAAC;AAoCa,gDAAkB;AAjChC,MAAM,CAAC,WAAW,EAAE,UAAS,IAAI;IAE7B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC7B,aAAI,CAAC,EAAE,CAAC,WAAW,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AACH,UAAU,CAAC,UAAU,EAAE,UAAS,IAAI;IAEhC,kBAAkB,EAAE,CAAC,IAAI,CAAC,cAAM,WAAI,EAAE,EAAN,CAAM,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,KAAK,CAAC,WAAW,EAAE,UAAS,IAAI;IAE5B,kBAAkB,EAAE,CAAC,IAAI,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,aAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,EAAE;IACV,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAKF,mBAAO,CAAC,iDAAiB,CAAC,CAAC;AAC3B,mBAAO,CAAC,+DAAwB,CAAC,CAAC;AAGlC,mBAAO,CAAC,yEAA6B,CAAC,CAAC;AACvC,mBAAO,CAAC,yEAA6B,CAAC,CAAC;AACvC,mBAAO,CAAC,+EAAgC,CAAC,CAAC;AAC1C,mBAAO,CAAC,+EAAgC,CAAC,CAAC;;;;;;;;;;;;;;;AC/C1C,gEAAqC;AACrC,iEAAoC;AACpC,6DAA8C;AAC9C,oGAA2D;AAC3D,qDAA8B;AAE9B,QAAQ,CAAC,iBAAiB,EAAE;IACxB,QAAQ,CAAC,OAAO,EAAE;QACd,UAAU,CAAC,UAAU,IAAI;YACrB,sBAAkB,EAAE,CAAC,IAAI,CAAC;gBACtB,IAAI,IAAI,GAAU,IAAI,iBAAI,CAAC;oBACvB,IAAI,EAAE,QAAQ;oBACd,KAAK,EAAE,eAAe;oBACtB,QAAQ,EAAE,mBAAQ,CAAC,MAAM,CAAC;oBAC1B,IAAI,EAAE,MAAM;iBACf,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,IAAW,IAAK,WAAI,EAAE,EAAN,CAAM,CAAC,CAAC,OAAK,EAAC,UAAC,GAAQ;oBACrD,MAAM,GAAG,CAAC;gBACd,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,uBAAuB,EAAE,UAAS,IAAI;YACrC,OAAO,CAAC,OAAG,CAAC;iBACP,IAAI,CAAC,eAAe,CAAC;iBACrB,IAAI,CAAC;gBACF,KAAK,EAAE,eAAe;gBACtB,QAAQ,EAAE,MAAM;aACnB,CAAC;iBACD,MAAM,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,UAAC,GAAQ;gBACV,IAAI,GAAG;oBACH,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,0CAA0C,EAAE,UAAS,IAAI;YACxD,OAAO,CAAC,OAAG,CAAC;iBACP,IAAI,CAAC,eAAe,CAAC;iBACrB,IAAI,CAAC;gBACF,KAAK,EAAE,eAAe;gBACtB,QAAQ,EAAE,MAAM;aACnB,CAAC;iBACD,MAAM,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAqB;gBACjC,IAAI,GAAG;oBACH,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,IAAI,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrC,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;gBAChD,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBACtC,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBACxC,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,oDAAoD,EAAE,UAAS,IAAI;YAClE,OAAO,CAAC,OAAG,CAAC;iBACP,IAAI,CAAC,eAAe,CAAC;iBACrB,IAAI,CAAC;gBACF,KAAK,EAAE,6BAA6B;gBACpC,QAAQ,EAAE,MAAM;aACnB,CAAC;iBACD,MAAM,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAqB;gBACjC,IAAI,GAAG;oBACH,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,IAAI,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrC,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,2BAA2B,CAAC,CAAC;gBAC5D,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,gEAAgE,EAAE,UAAS,IAAI;YAC9E,OAAO,CAAC,OAAG,CAAC;iBACP,IAAI,CAAC,eAAe,CAAC;iBACrB,IAAI,CAAC;gBACF,KAAK,EAAE,eAAe;gBACtB,QAAQ,EAAE,uBAAuB;aACpC,CAAC;iBACD,MAAM,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAqB;gBACjC,IAAI,GAAG;oBACH,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,IAAI,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrC,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,2BAA2B,CAAC,CAAC;gBAC5D,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,4DAA4D,EAAE,UAAS,IAAI;YAC1E,OAAO,CAAC,OAAG,CAAC;iBACP,IAAI,CAAC,eAAe,CAAC;iBACrB,IAAI,CAAC;gBACF,QAAQ,EAAE,MAAM;aACnB,CAAC;iBACD,MAAM,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAqB;gBACjC,IAAI,GAAG;oBACH,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,IAAI,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrC,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,qCAAqC,CAAC,CAAC;gBACtE,OAAO,CAAC,OAAG,CAAC;qBACP,IAAI,CAAC,eAAe,CAAC;qBACrB,IAAI,CAAC,EAAC,KAAK,EAAE,eAAe,EAAC,CAAC;qBAC9B,MAAM,CAAC,GAAG,CAAC;qBACX,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAqB;oBACjC,IAAI,GAAG;wBACH,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;oBACrB,IAAI,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACrC,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,qCAAqC,CAAC,CAAC;oBACtE,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC;YACV,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,kDAAkD,EAAE,UAAS,IAAI;YAChE,OAAO,CAAC,OAAG,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC;iBAC7B,IAAI,CAAC,EAAC,KAAK,EAAE,mBAAmB,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;iBACpD,MAAM,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAqB;gBACjC,IAAI,GAAG;oBACH,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,IAAI,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrC,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,2BAA2B,CAAC,CAAC;gBAC5D,IAAI,EAAE,CAAC;YACX,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,UAAU,EAAE;QACjB,UAAU,CAAC,UAAU,IAAI;YACrB,sBAAkB,EAAE,CAAC,IAAI,CAAC,cAAM,WAAI,EAAE,EAAN,CAAM,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,wBAAwB,EAAE,UAAS,IAAI;YACtC,OAAO,CAAC,OAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;iBAChC,IAAI,CAAC,EAAC,KAAK,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;iBAChD,MAAM,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAqB;gBACjC,IAAG,GAAG;oBAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBACzB,iBAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,IAAW;oBACtD,IAAI,CAAC,IAAI,EAAE;wBACP,aAAM,CAAC,IAAI,EAAE,CAAC;wBACd,OAAO,IAAI,EAAE,CAAC;qBACjB;oBACD,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAQ;oBACd,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,CAAC,CAAC;YACN,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,+CAA+C,EAAE,UAAU,IAAI;YAC9D,OAAO,CAAC,OAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;iBAChC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;iBAClD,MAAM,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAqB;gBACjC,IAAI,GAAG;oBAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC1B,iBAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,IAAW;oBACtD,IAAI,CAAC,IAAI,EAAE;wBACP,aAAM,CAAC,IAAI,EAAE,CAAC;qBACjB;oBACD,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;oBACvC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAQ;oBACd,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,CAAC,CAAC;YACN,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,6CAA6C,EAAE,UAAS,IAAI;YAC3D,IAAI,CAAC,GAAG,IAAI,iBAAI,CAAC;gBACb,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,gBAAgB;gBACvB,QAAQ,EAAE,UAAU;gBACpB,IAAI,EAAE,OAAO;aAChB,CAAC;YACF,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;gBACV,OAAO,CAAC,OAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;qBAChC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;qBAClD,MAAM,CAAC,GAAG,CAAC;qBACX,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAqB;oBACjC,IAAI,GAAG;wBAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC1B,iBAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,IAAW;wBACtD,IAAI,CAAC,IAAI,EAAE;4BACP,aAAM,CAAC,IAAI,EAAE,CAAC;yBACjB;wBACD,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;wBACtC,IAAI,EAAE,CAAC;oBACX,CAAC,CAAC,CAAC,OAAK,EAAC,UAAC,GAAQ;wBACd,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;oBACrB,CAAC,CAAC;gBACN,CAAC,CAAC,CAAC;YACX,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,0DAA0D,EAAE,UAAS,IAAI;YACxE,OAAO,CAAC,OAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;iBAChC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC;iBAChC,MAAM,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAqB;gBACjC,IAAI,GAAG;oBAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC1B,IAAI,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrC,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,qCAAqC,CAAC,CAAC;gBACtE,OAAO,CAAC,OAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;qBAChC,IAAI,CAAC,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC;qBACvB,MAAM,CAAC,GAAG,CAAC;qBACX,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAqB;oBACjC,IAAG,GAAG;wBAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;oBACzB,IAAI,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACrC,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,qCAAqC,CAAC,CAAC;oBACtE,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,6CAA6C,EAAE,UAAS,IAAI;YAC3D,OAAO,CAAC,OAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;iBAChC,IAAI,CAAC,EAAC,KAAK,EAAE,0BAA0B,EAAE,QAAQ,EAAE,MAAM,EAAC,CAAC;iBAC3D,MAAM,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAqB;gBACjC,IAAI,GAAG;oBAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC1B,IAAI,IAAI,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACrC,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,2BAA2B,CAAC,CAAC;gBAC5D,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,QAAQ,EAAE;QACf,UAAU,CAAC,UAAU,IAAI;YACrB,sBAAkB,EAAE,CAAC,IAAI,CAAC,cAAM,WAAI,EAAE,EAAN,CAAM,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,yBAAyB,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,cAAc,EAAE;QACrB,UAAU,CAAC,UAAU,IAAI;YACrB,sBAAkB,EAAE,CAAC,IAAI,CAAC,cAAM,WAAI,EAAE,EAAN,CAAM,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,4DAA4D,CAAC,CAAC;QACjE,EAAE,CAAC,gEAAgE,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtOH,0CAAe;AACf,oDAA4B;AAE5B,mFAAmD;AAEnD,SAAS,YAAY;IACjB,OAAO,CAAC,CAAC,SAAS,CAAC,kBAAK,CAAC,CAAC;AAC9B,CAAC;AAED,QAAQ,CAAC,eAAe,EAAE;IACtB,IAAI,KAAmB,CAAC;IACxB,UAAU,CAAC;QACP,KAAK,GAAG,YAAY,EAAE,CAAC;IAC3B,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,oBAAoB,EAAE;QAC3B,EAAE,CAAC,oBAAoB,CAAC,CAAC;QACzB,EAAE,CAAC,qBAAqB,CAAC,CAAC;QAC1B,EAAE,CAAC,wBAAwB,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,wBAAwB,EAAE;QAC/B,EAAE,CAAC,uBAAuB,CAAC,CAAC;QAC5B,EAAE,CAAC,kCAAkC,CAAC,CAAC;QACvC,EAAE,CAAC,uBAAuB,CAAC,CAAC;QAC5B,EAAE,CAAC,2BAA2B,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,sBAAsB,EAAE;QAC7B,EAAE,CAAC,wCAAwC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,0BAA0B,EAAE;QACjC,EAAE,CAAC,wBAAwB,CAAC,CAAC;QAC7B,EAAE,CAAC,0BAA0B,CAAC,CAAC;QAC/B,EAAE,CAAC,sBAAsB,CAAC,CAAC;QAC3B,EAAE,CAAC,wBAAwB,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;;;;;;;;;;;;;;;AClCF,qDAA8B;AAC9B,oDAA4B;AAC5B,0CAAe;AACf,mFAAiD;AAEjD,qHAAuF;AACvF,iIAAmG;AAEnG,SAAS,YAAY;IACjB,OAAO,CAAC,CAAC,SAAS,CAAC,kBAAK,CAAC,CAAC;AAC9B,CAAC;AAED,QAAQ,CAAC,+BAA+B,EAAE;IACtC,QAAQ,CAAC,YAAY,EAAE;QACnB,IAAI,KAAmB,CAAC;QACxB,IAAI,IAA2B,CAAC;QAChC,UAAU,CAAC;YACP,KAAK,GAAG,YAAY,EAAE,CAAC;YACvB,IAAI,GAAG,cAAM,YAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,EAArB,CAAqB,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,0BAA0B,EAAE;YAC3B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YAClC,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC;YAC7B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;YAC5B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iDAAiD,EAAE;YAClD,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YAClC,KAAK,CAAC,QAAQ,CAAC,2BAAa,CAAC,IAAI,CAAC,CAAC,CAAC;YACpC,aAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YACjC,KAAK,CAAC,QAAQ,CAAC,2BAAa,CAAC,KAAK,CAAC,CAAC,CAAC;YACrC,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,8CAA8C,EAAE;YAC/C,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YAClC,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC;YAC7B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;YAC5B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;YAC5B,KAAK,CAAC,QAAQ,CAAC,qBAAO,CAAC;gBACnB,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,eAAe;gBACtB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,OAAO;aAChB,CAAC,CAAC,CAAC;YACJ,aAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YACjC,aAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;YAClD,aAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;YAC5C,aAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACzC,KAAK,CAAC,QAAQ,CAAC,qBAAO,CAAC;gBACnB,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,KAAK;aACd,CAAC,CAAC,CAAC;YACJ,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC;YAClC,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC;YAC7B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;YAC5B,aAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,6CAA6C,EAAE;YAC9C,KAAK,CAAC,QAAQ,CAAC,qBAAO,CAAC;gBACnB,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,eAAe;gBACtB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,OAAO;aAChB,CAAC,CAAC,CAAC;YACJ,KAAK,CAAC,QAAQ,CAAC,wBAAU,EAAE,CAAC,CAAC;YAC7B,KAAK,CAAC,QAAQ,CAAC,qBAAO,CAAC;gBACnB,UAAU,EAAE,KAAK;gBACjB,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,KAAK;aACd,CAAC,CAAC,CAAC;QACR,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,gBAAgB,EAAE;QACvB,IAAI,KAAmB,CAAC;QACxB,IAAI,QAAmC,CAAC;QACxC,UAAU,CAAC;YACP,KAAK,GAAG,YAAY,EAAE,CAAC;YACvB,QAAQ,GAAG,cAAM,YAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAzB,CAAyB,CAAC;QAC/C,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,oDAAoD,EAAE;YACrD,KAAK,CAAC,QAAQ,CAAC,6BAAW,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACrE,IAAI,EAAE,GAAyB,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,EAAE,GAAyB,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7C,IAAI,EAAE,GAAyB,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7C,aAAM,CAAC,eAAe,CAAC,EAAE,EAAE;gBACvB,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,EAAE;gBACZ,sBAAsB,EAAE,CAAC;gBACzB,eAAe,EAAE,IAAI;gBACrB,mBAAmB,EAAE,KAAK;aAC7B,CAAC,CAAC;YACH,aAAM,CAAC,eAAe,CAAC,EAAE,EAAE;gBACvB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,EAAE;gBACZ,sBAAsB,EAAE,CAAC;gBACzB,eAAe,EAAE,IAAI;gBACrB,mBAAmB,EAAE,KAAK;aAC7B,CAAC,CAAC;YACH,aAAM,CAAC,eAAe,CAAC,EAAE,EAAE;gBACvB,IAAI,EAAE,gBAAgB;gBACtB,QAAQ,EAAE,EAAE;gBACZ,sBAAsB,EAAE,CAAC;gBACzB,eAAe,EAAE,IAAI;gBACrB,mBAAmB,EAAE,KAAK;aAC7B,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,sFAAsF,EAAE;YACvF,KAAK,CAAC,QAAQ,CAAC,6BAAW,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACrE,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAC,CAAuB;gBACvC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;gBACtC,KAAK,CAAC,QAAQ,CAAC,+CAA6B,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;YACH,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAC,CAAuB;gBACvC,aAAM,CAAC,MAAM,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;gBACrC,KAAK,CAAC,QAAQ,CAAC,+CAA6B,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;YACH,QAAQ,EAAE,CAAC,OAAO,CAAC,UAAC,CAAuB;gBACvC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iEAAiE,EAAE;QAEtE,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,yDAAyD,CAAC,CAAC;QAC9D,EAAE,CAAC,0DAA0D,CAAC,CAAC;QAC/D,EAAE,CAAC,0DAA0D,CAAC,CAAC;QAC/D,EAAE,CAAC,+BAA+B,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,qBAAqB,EAAE;QAC5B,EAAE,CAAC,mBAAmB,CAAC,CAAC;QACxB,EAAE,CAAC,qCAAqC,CAAC,CAAC;QAC1C,EAAE,CAAC,qBAAqB,CAAC,CAAC;QAC1B,EAAE,CAAC,iBAAiB,CAAC,CAAC;QACtB,EAAE,CAAC,mCAAmC,CAAC,CAAC;QACxC,EAAE,CAAC,oBAAoB,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,eAAe,EAAE;QACtB,EAAE,CAAC,0BAA0B,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,cAAc,EAAE;QACrB,EAAE,CAAC,6DAA6D,CAAC,CAAC;QAClE,EAAE,CAAC,mCAAmC,CAAC,CAAC;QACxC,EAAE,CAAC,mCAAmC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,kBAAkB,EAAE;QACzB,EAAE,CAAC,qBAAqB,CAAC,CAAC;QAC1B,EAAE,CAAC,mBAAmB,CAAC,CAAC;QACxB,EAAE,CAAC,sBAAsB,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;;;;;;;;;;;;ACxJH,kC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,sC;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,sC;;;;;;;;;;;ACAA,sC","file":"all-tests.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./tests/index.ts\");\n","module.exports = {\n    // https://docs.mongodb.com/manual/reference/connection-string/\n    mongodbConnectionUri: process.env.MONGODB_URI,\n    mongodbTestConnectionUri: 'mongodb://localhost:27017/openChatTest',\n    port: process.env.PORT || 5000,\n    production: process.env.NODE_ENV === 'production' || false,\n    useTestDb: process.env.USE_TEST_DB || false,\n    secret: process.env.SECRET || 'secret',\n    disableCsrf: process.env.DISABLE_CSRF || false,\n    disableReduxLogging: process.env.DISABLE_REDUX_LOGGING || false,\n    disableAutoStart: process.env.DISABLE_AUTO_START || false,\n    mailgunApiKey: process.env.MAILGUN_API_KEY,\n    mailgunDomain: process.env.MAILGUN_DOMAIN,\n    baseUrl: process.env.BASE_URL ? process.env.BASE_URL : 'http://localhost:5000'\n}\n","import { isEmail, isEmpty } from 'validator';\nimport { hashSync } from 'bcryptjs';\nimport {Request, Response} from '../../types/express';\nimport User, { IUser } from '../models/User';\nconst env = require('../../../env');\n\nexport default {\n    login: (req: Request, res: Response) => {\n        if (isEmpty(req.body.email || '') || isEmpty(req.body.password || '')) {\n            return res.status(400).json({ error: 'Please supply an email and password' }).end();\n        }\n        if (!isEmail(req.body.email)) {\n            return res.status(400).json({ error: 'Not a valid email address' }).end();\n        }\n        req.authenticate(req.body.email, req.body.password, (user: any | boolean) => {\n            if (!user)\n                return res.status(401).json({ error: 'Invalid email or password' }).end();\n            req.issueNewToken(user);\n            return res.status(200)\n                .json({\n                    success: true,\n                    email: user.email,\n                    role: user.role,\n                    name: user.name}).end();\n        });\n    },\n    register: (req: Request, res: Response) => {\n        if (isEmpty(req.body.email || '') || isEmpty(req.body.password || '')) {\n            return res.status(400).json({ error: 'Please supply an email and password' });\n        }\n        if (!isEmail(req.body.email)) {\n            return res.status(400).json({ error: 'Not a valid email address' });\n        }\n        return User.findByEmail(req.body.email).countDocuments().exec().then((count: number) => {\n            if (count !== 0)\n                return res.status(400).json({error: 'Email address in use'});\n            let passwordHash = hashSync(req.body.password);\n            // If this is the first user being created, asign role of admin\n            User.countDocuments().exec().then((count: number) => {\n                let role = 'user';\n                if (count === 0)\n                    role = 'admin';\n                let user = new User({\n                    name: '',\n                    email: req.body.email,\n                    password: passwordHash,\n                    role: role,\n                    emailVerified: false,\n                });\n                user.save().then((u: IUser) => {\n                    return res.status(200).json({success: true});\n                }).catch((err: Error) => {\n                    console.error(err);\n                    return res.status(500).json({error: 'Something went wrong trying to create a new user'});\n                });\n            })\n        });\n\n    },\n    logout: (req: Request, res: Response) => {\n        req.logout();\n        return res.json({success: true, message: 'logged out'});\n    },\n    verifyEmail: (req: Request, res: Response) => {\n    }\n}","import {Request, Response} from '../../types/express';\nimport Channel, {IChannel} from '../models/Channel';\n\nexport default {\n    channels: (req: Request, res: Response) => {\n        // If no channels exist, create a 'general' and 'random' channel\n        return Channel.countDocuments().exec().then((count: number) => {\n            let p = new Promise((resolve, reject) => {\n                if (count !== 0) {\n                    return resolve();\n                }\n                Channel.create([{name: 'general'}, {name: 'random'}]).then(() => {\n                    return resolve();\n                }).catch((err: Error) => {\n                    return reject(err);\n                });\n            });\n            return p.then(() => {\n                Channel.find().exec().then((channels: IChannel[]) => {\n                    return res.status(200).json({channels: channels});\n                }).catch((err: Error) => {\n                    console.log(err);\n                    return res.status(500).json({ error: 'Something went wrong while trying to fetch channels' });\n                });\n            }).catch((err: Error) => {\n                console.error(err);\n                return res.status(500).json({error: 'Something went wrong while trying to create default channels'});\n            });\n        }).catch((err: Error) => {\n            console.error(err);\n            return res.status(500).json({error: 'Something went wrong while counting channels'});\n        });\n    },\n    delete: (req: Request, res: Response) => {\n        \n    },\n    create: (req: Request, res: Response) => {\n\n    }\n}","import {Request, Response} from '../../types/express';\nimport Message, {IMessage} from '../models/Message';\nexport default {\n    messages: (req: Request, res: Response) => {\n        return Message.find({channel: req.params.channel})\n            .skip(parseInt(req.params.offest))\n            .sort({_id: -1})\n            .limit(20)\n            .exec().then((messages: IMessage[]) => {\n                return res.status(200).json({\n                     messages: messages.map((m: IMessage) => {\n                        return {\n                            text: m.text,\n                            created: m.createdAt,\n                            userEmail: m.userEmail,\n                            channel: m.channel,\n                            _id: m._id\n                        };\n                     }).reverse()\n                 })\n        }).catch((err: Error) => {\n            return res.status(400).json({ error: 'something went wrong trying to fetch messages' });\n        })\n    }\n}","import {isEmail, isEmpty} from 'validator';\nimport { Request, Response } from '../../types/express';\nimport User, { IUser, IUserModel } from '../models/User';\nimport {compareSync, hashSync} from 'bcryptjs';\n\nexport default {\n    user: (req: Request, res: Response) => {\n        res.send(req.user);\n    },\n    users: (req: Request, res: Response) => {\n        return User.find({}).then((users: IUser[]) => {\n            return res.status(200).json({success: true, users: users});\n        }).catch((err: Error) => {\n            console.error(err);\n            return res.status(200).json({error: 'Something went wrong while retrieving users'});\n        })\n    },\n    userByEmail: (req: Request, res: Response) => {\n        if(!isEmail(req.params.user))\n            return res.status(400).json({error: 'Please supply a valid email'});\n\n        return User.findByEmail(req.params.user).exec().then((user: IUser) => {\n            if (user !== null) {\n                return res.status(200).json({\n                    user: {\n                        email: user.email,\n                        _id: user._id,\n                        name: user.name || '',\n\n                    }\n                });\n            }\n            return res.status(400).json({error: 'No user found with that email'});\n            \n        }).catch((err: Error) => {\n            console.error(err);\n            return res.status(500).json({error: 'Something went wrong trying to find the user'});\n        });\n    },\n    updateEmail: (req: Request, res: Response) => {\n        if(!isEmail(req.body.email))\n            return res.status(400).json({ error: 'Not a valid email' });\n        return User.countDocuments({email: req.body.email}).exec().then((count: number) => {\n            if (count !== 0)\n                return res.status(400).json({ error: 'Email address already in use' });\n            return User.findByEmail(req.user.email).exec().then((user: IUser) => {\n                user.email = req.body.email;\n                user.save();\n                req.issueNewToken(Object.assign({}, req.user, {email: req.body.email}));\n                return res.status(200).json({ success: true });\n            }).catch((err: Error) => {\n                console.error(err);\n                return res.status(500).json({ error: 'Something went wrong trying to fetch the user' });\n            });\n        });\n    },\n    updateName: (req: Request, res: Response) => {\n        return User.findByEmail(req.user.email)\n            .exec().then((user: IUser) => {\n                user.name = req.body.name;\n                user.save();\n                req.issueNewToken(Object.assign({}, req.user, { name: req.body.name }));\n                return res.status(200).json({success: true});\n            }).catch((err: Error) => {\n                console.error(err);\n                return res.status(500).json({error: 'Something went wrong trying to update the user'});\n        });\n    },\n    updatePassword: (req: Request, res: Response) => {\n        if (isEmpty(req.body.newPass) || isEmpty(req.body.oldPass))\n            return res.status(400).json({ error: 'Must supply the current and new password' });\n        return User.findByEmail(req.user.email).exec().then((user: IUser) => {\n            if (!compareSync(req.body.oldPass, user.password))\n                return res.status(400).json({error: 'Current password is incorrect'});\n            user.password = hashSync(req.body.newPass);\n            user.save();\n            return res.status(200).json({success: true});\n        })\n    },\n    resetPassword: (req: Request, res: Response) => {\n        return res.status(500).json({error: 'Not implemented'});\n    },\n}","import { verify } from 'jsonwebtoken';\nimport { Token } from '../../types/jwt';\nimport { Request, Response } from '../../types/express';\nconst env = require('../../../env');\nexport default function(req: Request, res: Response, next: Function) {\n    // see if we need to load token from session\n    if (req.session.token && !req.headers['x-access-token']) {\n        res.setHeader('x-access-token', req.session.token);\n    }\n    var token = req.headers['x-access-token'] || req.session.token;\n    if (!token)\n        return res.status(401).json({ error: 'Not authorized' });\n\n    verify(token, env.secret, (err: Error, decoded: Token) => {\n        if (err) return res.status(401).send({ error: 'Not authorized' });\n        req.user = decoded;\n        return next();\n    });    \n}","import {Schema, Document, Model, model} from 'mongoose';\n\nexport interface IChannel extends Document {\n    name: string,\n    createdAt: Date,\n    updatedAt: Date,\n}\n\nconst channelSchema: Schema = new Schema({\n    name: {\n        type: String,\n        required: true,\n        lowercase: true,\n    },\n}, {\n    timestamps: true\n});\n\nconst Channel: Model<IChannel> = model('Channel', channelSchema);\nexport default Channel;","import {Schema, model, Document, Model} from 'mongoose';\n\nexport interface IMessage extends Document {\n    channel: string,\n    text: string,\n    userEmail: string,\n    createdAt: Date,\n    updatedAt: Date,\n}\n\nconst messageSchema: Schema = new Schema({\n    channel: {\n        type: String,\n        required: true,\n        // should validate to make sure channel already exists\n    },\n    text: {\n        type: String,\n        required: true,\n    },\n    userEmail: {\n        type: String,\n        required: true,\n        lowercase: true,\n        // should validate to confirm that user exists\n    }\n}, {\n    timestamps: true\n});\n\nconst Message: Model<IMessage> = model('Message', messageSchema);\nexport default Message;","import {Schema, Document, model, Model, Error, DocumentQuery} from 'mongoose';\nimport {toLower} from 'lodash';\n\nexport interface IUser extends Document {\n    name?: string,\n    email: string,\n    createdAt: Date,\n    updatedAt: Date,\n    password: string,\n    role: 'admin' | 'user',\n\n};\n\nexport interface IUserModel extends Model<IUser> {\n    findByEmail: (email: string) => DocumentQuery<IUser, IUser>\n}\n\nconst userSchema: Schema = new Schema({\n    name: String,\n    email: {\n        required: true,\n        type: String,\n        lowercase: true\n    },\n    password: {\n        type: String,\n        required: true\n    },\n    role: {\n        type: String,\n        required: true,\n        lowercase: true,\n        enum: ['admin', 'user']\n    },\n}, {\n    timestamps: true\n});\n\nuserSchema.statics.findByEmail = function (email: string): DocumentQuery<IUser, IUser> {\n    return this.findOne({email: email});\n}\n\nconst User: IUserModel = model<IUser, IUserModel>('User', userSchema);\nexport default User;","import * as path from 'path';\nimport { App, Request, Response } from '../types/express';\nimport authorized from './middleware/authorized';\nimport authController from './controllers/authController';\nimport userController from './controllers/userController';\nimport messageController from './controllers/messageController';\nimport channelController from './controllers/channelController';\n\nexport default function(app: App) {\n\n    /* Static Routes */\n    app.get('/', function (req: Request, res: Response) {\n        return res.render(\n            path.resolve(__dirname, '../../dist/public/index.html'),\n            { csrfToken: req.csrfToken() }\n        );\n    });\n    /* Widget rendered inside iframe via widget-embed script */\n    app.get('/widget', function (req: any, res: any) {\n        return res.render(\n            path.resolve(__dirname, '../../../dist/public/widget/index.html')\n        );\n    });\n    /* Page demoing embedded widget */\n    app.get('/widget/demo', function (req: any, res: any) {\n        return res.render(\n            path.resolve(__dirname, '../../../dist/public/widget/demo.html')\n        );\n    });\n    \n    /* API Routes */\n    \n    app.post('/api/v1/login', authController.login);\n    app.post('/api/v1/register', authController.register);\n    app.get('/api/v1/logout', authController.logout);\n    app.get('/api/v1/verifyEmail/:id', authController.verifyEmail);\n\n    app.use('/api/v1/user', authorized);\n    app.get('/api/v1/user', userController.user);\n    app.get('/api/v1/users', userController.users)\n    app.get('/api/v1/user/:user', userController.userByEmail);\n    app.post('/api/v1/user/update/email', userController.updateEmail);\n    app.post('/api/v1/user/update/name', userController.updateName);\n    app.post('/api/v1/user/update/password', userController.updatePassword);\n    app.post('/api/v1/user/reset_password', userController.resetPassword);\n\n    app.get('/api/v1/message*', authorized);\n    app.get('/api/v1/messages/:channel/:offset', messageController.messages);\n\n    app.use('/api/v1/channel', authorized);\n    app.get('/api/v1/channels', channelController.channels);\n    app.post('/api/v1/channels/delete', channelController.delete);\n    app.post('/api/v1/channels/create', channelController.create);\n\n    /* Display index.html if unknown path, and let React-Router handle the 404 */\n    app.get('*', function (req: Request, res: Response) {\n        return res.render(\n            path.resolve(__dirname, '../../dist/public/index.html'),\n            { csrfToken: req.csrfToken() }\n        );\n    });\n}","//import Models from './models/index.ts';\n\nimport * as http from 'http';\nimport * as express from 'express';\nimport * as path from 'path';\nimport * as socketio from 'socket.io';\nimport * as mongoose from 'mongoose';\nimport * as csrf from 'csurf';\nimport * as cookieParser from 'cookie-parser';\nimport * as session from 'express-session';\nimport * as bodyParser from 'body-parser';\nimport * as bcrypt from 'bcryptjs';\nimport * as helmet from 'helmet';\nimport * as morgan from 'morgan';\nimport * as compression from 'compression';\nimport { sign } from 'jsonwebtoken';\nconst mustacheExpress = require('mustache-express');\nconst MongoStore = require('connect-mongo')(session);\n\nimport Routes from './routes';\nimport websocket from './socket.io/index';\nimport { App, Request, Response } from '../types/express';\nimport User, { IUser } from './models/User';\nconst env = require('../../env');\n\nconst app: App = express();\nconst port: string | number = env.port;\nlet server: http.Server;\nlet socketServer: socketio.Server;\n\napp.engine('html', mustacheExpress());\napp.set('view engine', 'html');\n//app.use(morgan('combined'));\napp.use(compression());\n\nconst sessionMiddleware = session({\n    secret: env.secret,\n    cookie: {\n        maxAge: 24 * 60 * 60 * 1000, // 24 hours\n        sameSite: true,\n        secure: env.production,\n        httpOnly: true\n    },\n    saveUninitialized: true,\n    resave: false,\n    store: new MongoStore({\n        mongooseConnection: mongoose.connection\n    })\n});\n\nconst csrfMiddleware = csrf({\n    cookie: {\n        maxAge: 24 * 60 * 60 * 1000, // 24 hours\n        sameSite: true,\n        secure: env.production,\n        httpOnly: true,\n        key: '_csrf'\n    }\n})\n\nmongoose.connect(env.useTestDb ? env.mongodbTestConnectionUri : env.mongodbConnectionUri, { useNewUrlParser: true });\nmongoose.connection.on('error', function(err) {\n    console.error('Mongoose connection error', err);\n});\nprocess.on('SIGINT', function () {\n    mongoose.connection.close(function () {\n        console.log('Mongoose default connection disconnected through app termination');\n        process.exit(0);\n    });\n}); \n\napp.use(sessionMiddleware);\napp.use(cookieParser(env.secret));\n\nif(env.disableCsrf) {\n    console.log('CSRF disabled');\n    app.use((req, res, next) => { \n        req.csrfToken = function () { return '' }\n        return next();\n    });\n} else {\n    app.use(csrfMiddleware);\n}\n// add DB to every express request\nlet db: mongoose.Connection = mongoose.connection;\napp.use((req: Request, res: Response, next: Function) => {\n    req.db = db;\n    return next();\n})\napp.use(bodyParser.json()); // support json encoded bodies\napp.use(bodyParser.urlencoded({ extended: true }));\n//app.use(cors());\n\n\napp.use(helmet());\n/* Serve static files from dist/public */\napp.use(express.static(path.resolve(__dirname, '../../dist/public/')));\n\napp.use('/api', function (req: Request, res: Response, next: Function) {\n    //res.setHeader('new-csrf-token', req.csrfToken())\n    return next();\n});\napp.use((req: Request, res: Response, next: Function) => {\n    req.authenticate = (email: string,\n                        password: string,\n                        done: (user: boolean | IUser, err: (null | Error)) => void) => {\n        User.findByEmail(email).then((user: IUser) => {\n            if (user === null) return done(false, null);\n            if (!bcrypt.compareSync(password, user.password)) return done(false, new Error('Invalid password'));\n            let userDetails: any = {\n                email: user.email,\n                name: user.name,\n                role: user.role,\n            }\n            return done(userDetails, null);\n        }).catch((err: Error) => {\n            done(false, err);\n        });\n    }\n    req.logout = () => {\n        req.session.token = null;\n    }\n    req.issueNewToken = (user: IUser) => {\n        let token: string = sign({\n            name: user.name,\n            role: user.role,\n            email: user.email\n        }, env.secret, {\n            expiresIn: 86400 // expires in 24 hours\n        });\n        req.session.token = token;\n        res.setHeader('x-access-token', token)\n    }\n    next();\n});\n\nRoutes(app);\nserver = http.createServer(app);\nserver.on('error', (err: Error) => {\n    console.error(err);\n    server.close();\n})\n\nif (!env.disableAutoStart) {\n    socketServer = websocket(server, db);\n    mongoose.connection.on('connected', function () {\n        console.log('Connected to MongoDB via Mongoose');\n        server.listen(port, () => {\n            console.log(`Listening on port ${port}!`);\n            app.emit('server started');\n        });\n    });\n}\n\nexport default server;\nexport const conn = mongoose.connection;\nexport { app, socketServer };","import * as socketio from 'socket.io';\nimport { Server } from 'http';\nimport { Connection } from 'mongoose';\nimport {authorize as authorizeJwt} from 'socketio-jwt';\nimport Message, { IMessage } from '../models/Message';\nimport { Token } from '../../types/jwt';\nconst env = require('../../../env');\n\ninterface Socket extends socketio.Socket {\n    jwt: Token\n} \n\nconst init = (server: Server, db: Connection): socketio.Server => {\n    const io: socketio.Server = socketio(server);\n    let connectedUserEmails: string[] = [];\n\n    // set authorization for socket.io\n    io.on('connection', authorizeJwt({\n            secret: env.secret,\n            timeout: 15000, // 15 seconds to send the authentication message\n            decodedPropertyName: 'jwt'\n        })).on('authenticated', (socket: Socket) => {\n\n            connectedUserEmails.push(socket.jwt.email);\n            console.log('Connected users', connectedUserEmails);\n            io.emit('connected users', connectedUserEmails.filter((value, index, self) => {\n                return self.indexOf(value) === index;\n            }));\n\n            socket.on('disconnect', () => {\n                connectedUserEmails.splice(connectedUserEmails.indexOf(socket.jwt.email), 1);\n                io.emit('connected users', connectedUserEmails.filter((value, index, self) => {\n                    return self.indexOf(value) === index;\n                }));\n            });\n\n            socket.on('message', (message: { text: string, channel: string }) => {\n                console.log(message);\n                let m: IMessage = new Message({\n                    channel: message.channel,\n                    text: message.text,\n                    userEmail: socket.jwt.email\n                });\n                m.save().then((m: IMessage) => {\n                    io.emit('message', {\n                        _id: m._id,\n                        userEmail: m.userEmail,\n                        text: m.text,\n                        channel: m.channel,\n                        created: m.createdAt\n                    });\n                    socket.emit('message received');\n                }).catch((err: Error) => {\n                    console.error(err);\n                    socket.emit('message receive error', err);\n                });\n            });\n        });\n    return io;\n}\n\nexport default init;","import {State, Channel, Message} from '../reducers/channels';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\n\nimport {addError, addInfo} from './notificationsActions';\n\nexport const ADD_CHANNELS = 'ADD_CHANNELS';\nexport const SET_CHANNEL_FETCHING_NEW_MESSAGES = 'SET_CHANNEL_FETCHING_NEW_MESSAGES';\nexport const SET_CHANNEL_HAS_MORE_MESSAGES = 'SET_CHANNEL_HAS_MORE_MESSAGE';\nexport const ADD_RECEIVED_CHANNEL_MESSAGE = 'ADD_RECEIVED_CHANNEL_MESSAGE';\nexport const ADD_RETRIEVED_CHANNEL_MESSAGES = 'ADD_RETRIEVED_CHANNEL_MESSAGES';\nexport const INCREMENT_CHANNEL_RETRIEVE_MESSAGES_OFFSET = 'INCREMENT_CHANNEL_RETRIEVE_MESSAGES_OFFSET';\nexport const RETRIEVE_CHANNEL_MESSAGES = 'RETRIEVE_CHANNEL_MESSAGES';\nexport const CLEAR_CHANNELS_DATA = 'CLEAR_CHANNELS_DATA';\n\nexport const addChannels = (channelNames: string[]) => {\n    let channels: State = [];\n    channelNames.forEach((name: string) => {\n        channels.push({\n            name: name,\n            messages: [],\n            retrieveMessagesOffset: 0,\n            hasMoreMessages: true,\n            fetchingNewMessages: false\n        });\n    });\n    return {\n        type: ADD_CHANNELS,\n        data: { channels: channels }\n    };\n}\n\nexport const incrementChannelRetrieveMessagesOffset = (channel: string, n: number) => {\n    return {\n        type: INCREMENT_CHANNEL_RETRIEVE_MESSAGES_OFFSET,\n        data: {\n            channel: channel,\n            increment: n\n        }\n    };\n}\n\nexport const setChannelFetchingNewMessages = (channel: string, isFetching: boolean) => {\n    return {\n        type: SET_CHANNEL_FETCHING_NEW_MESSAGES,\n        data: {\n            channelName: channel,\n            isFetching: isFetching\n        }\n    };\n}\n\nexport const setChannelHasMoreMessages = (channelName: string, hasMore: boolean) => {\n    return {\n        type: SET_CHANNEL_HAS_MORE_MESSAGES,\n        data: { channelName: channelName, hasMore: hasMore }\n    };\n}\n\nexport const addReceivedChannelMessage = (channelName: string, message: Message) => {\n    return {\n        type: ADD_RECEIVED_CHANNEL_MESSAGE,\n        data: { message: message, channelName: channelName }\n    };\n}\n\nexport const addRetrievedChannelMessages = (channelName: string, messages: Message[]) => {\n    return {\n        type: ADD_RETRIEVED_CHANNEL_MESSAGES,\n        data: {channelName: channelName, messages: messages}\n    };\n}\n\nexport const clearChannelsData = () => {\n    return {\n        type: CLEAR_CHANNELS_DATA\n    }\n}\n\n/* Async Actions */\n\nexport const fetchChannels = () => {\n    return (dispatch: any)  => {\n        return axios.get('/api/v1/channels').then((res: AxiosResponse) => {\n            let channels = res.data.channels.map( (c: {name: string, _id: string}) => {\n                return c.name;\n            });\n            return dispatch(addChannels(channels));\n        }).catch((err: AxiosError) => {\n            console.log(err);\n            return dispatch(addError('Something went wrong while trying to fetch the channels'));\n        });\n    }\n}\n\nexport const retrieveChannelMessages = (channelName: string) => {\n    return async (dispatch: any, getState: any) => {\n        let channel: Channel = getState().channels.find( (c: Channel) => {\n            return c.name === channelName;\n        })\n        if (!channel || channel.fetchingNewMessages || !channel.hasMoreMessages) {\n            console.log('Retrieve Channel Messages dispatched with incorrect channel name or while already fetching messages',\n                        channelName,\n                        getState());\n            return Promise.resolve();\n        }\n        dispatch(setChannelFetchingNewMessages(channel.name, true));\n        return axios.get('/api/v1/messages/' + channel.name + '/' + channel.retrieveMessagesOffset).then((res: AxiosResponse) => {\n            if (res.data.messages.length === 0) {\n                dispatch(setChannelHasMoreMessages(channel.name, false));\n                return res;\n            }\n            dispatch(incrementChannelRetrieveMessagesOffset(channelName, 20));\n            dispatch(addRetrievedChannelMessages(channel.name, res.data.messages))\n        }).catch((err: AxiosError) => {\n            console.log('Error fetching messages', channel, err);\n            dispatch(addError('Something went wrong while trying to fetch messages'));\n        }).then(() => {\n            return dispatch(setChannelFetchingNewMessages(channel.name, false));\n        });\n    }\n}\n\nexport const deleteChannel = (channelName: string) => {\n    return (dispatch: any) => {\n        return axios.get('/api/v1/channel/delete/' + channelName).\n            then((res: AxiosResponse) => {\n                dispatch(addInfo('Channel deleted'));\n                return dispatch(fetchChannels());\n            }).catch((err: AxiosError) => {\n                console.log('Error deleting channel', err);\n                return dispatch(addError(err.response.data.error));\n            });\n    };\n}\n\nexport const addChannel = (channelName: string) => {\n    return (dispatch: any) => {\n        return axios.post('/api/v1/channel/create', {\n            channelName: channelName\n        }).then((res: AxiosResponse) => {\n            dispatch(addInfo('Channel created'));\n            return dispatch(fetchChannels());\n        }).catch((err: AxiosError) => {\n            console.log('Error creating chanel', err);\n            return dispatch(addError(err.response.data.error));\n        })\n    };\n}\n","import axios, { AxiosError, AxiosResponse } from 'axios';\n\nimport {State, ChatUser} from '../reducers/chatUsers';\nimport { Dispatch } from 'redux';\nimport { addError } from './notificationsActions';\n\nexport const UPDATE_CHAT_USERS = 'UPDATE_CHAT_USERS';\nexport const ADD_CHAT_USER = 'ADD_USER';\nexport const REMOVE_CHAT_USER = 'REMOVE_USER';\n\nexport const updateUsers = function(users: State) {\n    return {\n        type: UPDATE_CHAT_USERS,\n        data: {\n            users: users\n        }\n    }\n}\n\nexport const addUser = function(user: ChatUser) {\n    return {\n        type: ADD_CHAT_USER,\n        data: {\n            user: user\n        }\n    }\n}\n\nexport const removeUser = function(email: string) {\n    return {\n        type: REMOVE_CHAT_USER,\n        data: {\n            email: email\n        }\n    }\n}\n\n/* Async Functions */\nexport const fetchAllUsers = () => {\n    return (dispatch: Dispatch) => {\n        axios.get('/api/v1/users').then((res: AxiosResponse) => {\n            let users: State = {};\n            res.data.users.forEach((u: ChatUser) => {\n                users[u.email] = {\n                    role: u.role,\n                    name: u.name\n                };\n            });\n            dispatch(updateUsers(users));\n            return res;\n        }).catch((err: AxiosError) => {\n            dispatch(addError('Fetching all users failed'));\n            console.log(err);\n            return err;\n        });\n    }\n}\n\nexport const createNewUser = (user: ChatUser) => {\n\n}\n\nexport const editUser = (email: string, user: ChatUser) => {\n\n}\n\nexport const deleteUser = (email: string) => {\n\n}","export const ADD_ERROR = 'ADD_ERROR';\nexport const REMOVE_ERROR = 'REMOVE_ERROR';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const ADD_INFO = 'ADD_INFO';\nexport const REMOVE_INFO = 'REMOVE_INFO';\nexport const CLEAR_INFOS = 'CLEAR_INFOS';\n\nexport const addError = (error: string) => {\n    return {\n        type: ADD_ERROR,\n        data: error\n    };\n}\n\nexport const removeError = (i: number) => {\n    return {\n        type: REMOVE_ERROR,\n        data: i\n    };\n}\n\nexport const clearErrors = () => {\n    return { type: CLEAR_ERRORS };\n}\n\nexport const addInfo = (info: string) => {\n    return {\n        type: ADD_INFO,\n        data: info\n    };\n}\n\nexport const removeInfo = (i: number) => {\n    return {\n        type: REMOVE_INFO,\n        data: i\n    };\n}\n\nexport const clearInfos = () => {\n    return {\n        type: CLEAR_INFOS\n    };\n}\n","export const TOGGLE_SIDEBAR_OPEN = 'TOGGLE_SIDEBAR_OPEN';\n\nexport const toggleSidebarOpen = () => {\n    return {\n        type: TOGGLE_SIDEBAR_OPEN\n    }\n}","import * as io from 'socket.io-client';\nimport { Dispatch } from 'redux';\n\nimport {State} from '../store';\n\nexport const INIT_WEBSOCKET = 'INIT_WEBSOCKET';\nexport const SET_SOCKET_CONNECTED = 'SET_SOCKET_CONNECTED';\nexport const SET_SOCKET_CONNECTED_USERS = 'SET_SOCKET_CONNECTED_USERS';\n\nexport const initWebsocket = (io: SocketIOClient.Socket) => {\n    return {\n        type: INIT_WEBSOCKET,\n        data: { io: io }\n    };\n}\n\nexport const setSocketConnected = (connected: boolean) => {\n    return {\n        type: SET_SOCKET_CONNECTED,\n        data: { connected: connected }\n    }\n}\n\nexport const setSocketConnectedUsers = (userEmails: string[]) => {\n    return {\n        type: SET_SOCKET_CONNECTED_USERS,\n        data: { userEmails: userEmails }\n    }\n}\n\nexport const init = () => {\n    return (dispatch: Dispatch, getState: Function) => {\n        let socket: SocketIOClient.Socket = io();\n        socket.on('connect', () => {\n            socket\n                .emit('authenticate', { token: getState().user.token }) //send the jwt\n                .on('authenticated', function () {\n                    dispatch(setSocketConnected(true));\n                    console.log('authorized [' + socket.id + ']');\n                    socket.on('connected users', (userEmails: string[]) => {\n                        dispatch(setSocketConnectedUsers(userEmails));\n                    });\n                })\n                .on('unauthorized', function (msg: any) {\n                    dispatch(setSocketConnected(false));\n                    console.log(\"unauthorized: \" + JSON.stringify(msg.data));\n                    socket.off('connected uses');\n                    throw new Error(msg.data.type);\n                })\n        });\n        socket.on('disconnect', () => {\n            dispatch(setSocketConnected(false));\n            console.log('Disconnected from websocket server, attempting reconnect');\n        });\n\n        return dispatch(initWebsocket(socket));\n    }\n}","import axios, { AxiosResponse, AxiosError } from 'axios';\nimport {State as UserState} from '../reducers/user';\nimport {clearChannelsData} from './channelsActions';\nimport {addError, addInfo} from './notificationsActions';\n\nexport const SET_AUTHORIZED = 'SET_AUTHORIZED';\nexport const SET_USER = 'SET_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const SET_JWT = 'SET_JWT';\n\nexport const setAuthorized = (authorized: boolean) => {\n    return  {\n        type: SET_AUTHORIZED,\n        data: authorized\n    };\n}\n\nexport const setUser = (user: UserState) => {\n    return {\n        type: SET_USER,\n        data: user\n    };\n}\n\nexport const logoutUser = () => {\n    return {\n        type: LOGOUT_USER\n    };\n}\n\nexport const setJwt = (token: string) => {\n    return {\n        type: SET_JWT,\n        data: token\n    };\n}\n\nexport const logout = () => {\n    return (dispatch: any) => {\n        dispatch(logoutUser());\n        return dispatch(clearChannelsData());\n    }\n    \n}\n\n/* Async Actions */\nexport const updateName = (name: string, onSuccess?: Function) => {\n    return (dispatch: any) => {\n        return axios.post('/api/v1/user/update/name', {\n            name: name\n        }).then((res: AxiosResponse) => {\n            dispatch(addInfo('Name updated'));\n            if (onSuccess) onSuccess();\n        }).catch((err: AxiosError) => {\n            if (err.response && err.response.data.error)\n                return dispatch(addError(err.response.data.error));\n            console.log('Something went wrong updating user name', err);\n            dispatch(addError('Something went wrong while trying to update your name.'));\n        });\n    };\n}\n\nexport const updateEmail = (email: string, onSuccess?: Function) => {\n    return (dispatch: any) => {\n        return axios.post('/api/v1/user/update/email', {\n            email: email\n        }).then((res: AxiosResponse) => {\n            dispatch(addInfo('Email updated'));\n            if (onSuccess) onSuccess();\n        }).catch((err: AxiosError) => {\n            if (err.response && err.response.data.error)\n                return dispatch(addError(err.response.data.error));\n            console.log('Something went wrong updating user email', err);\n            dispatch(addError('Something went wrong while trying to update your email.'));\n        });\n    };\n}\n\nexport const updatePassword = (oldPass: string, newPass: string, onSuccess?: Function) => {\n    return (dispatch: any) => {\n        return axios.post('/api/v1/user/update/password', {\n            oldPass: oldPass,\n            newPass: newPass\n        }).then((res: AxiosResponse) => {\n            dispatch(addInfo('Password updated'));\n            if (onSuccess) onSuccess();\n        }).catch((err: AxiosError) => {\n            if (err.response && err.response.data.error)\n                return dispatch(addError(err.response.data.error));\n            console.log('Something went wrong updating user password', err);\n            dispatch(addError('Something went wrong while trying to update your password.'));\n        });\n    };\n}","import {ADD_CHANNELS,\n        SET_CHANNEL_FETCHING_NEW_MESSAGES,\n        SET_CHANNEL_HAS_MORE_MESSAGES,\n        ADD_RECEIVED_CHANNEL_MESSAGE,\n        ADD_RETRIEVED_CHANNEL_MESSAGES,\n        INCREMENT_CHANNEL_RETRIEVE_MESSAGES_OFFSET,\n        CLEAR_CHANNELS_DATA}\n    from '../actions/channelsActions';\n\nexport interface Message {\n    userEmail: string,\n    created: string,\n    _id: string,\n    text: string\n}\n\nexport interface Channel {\n    name: string,\n    messages: Message[],\n    retrieveMessagesOffset: number,\n    hasMoreMessages: boolean\n    fetchingNewMessages: boolean\n}\n\nexport interface State extends Array<Channel> {\n\n}\n\ninterface Action {\n    type: string,\n    data: any\n}\n\nlet initialState: State = [];\n\nexport const channelExists = (channels: Channel[] | State, channelName: string): any =>  {\n    let channel = channels.find( (c: Channel) => {\n        return c.name === channelName;\n    });\n    if (!channel) return false;\n    return channel;\n}\n\nexport default function (state: State = initialState, action: Action) {\n    switch(action.type) {\n        case ADD_CHANNELS:\n            return action.data.channels;\n        case INCREMENT_CHANNEL_RETRIEVE_MESSAGES_OFFSET: {\n            let channel: Channel = channelExists(state, action.data.channel);\n            let increment: number = action.data.increment;\n            if (!channel) {\n                console.log('Unknown channel while incrementing messages offset', action);\n                return state;\n            }\n            let newChannels: Channel[] = state.map( (c: Channel) => {\n                if(c.name === channel.name) {\n                    c.retrieveMessagesOffset += increment;\n                }\n                return c;\n            });\n            return newChannels;\n        }\n        case SET_CHANNEL_FETCHING_NEW_MESSAGES:\n            let channel: Channel = channelExists(state, action.data.channelName);\n            if (!channel) {\n                console.log('Unknown channel while fetching new messages', action);\n                return state;\n            }\n            let newChannels: Channel[] = state.map( (c: Channel) => {\n                if (c.name === action.data.channelName) {\n                    c.fetchingNewMessages = action.data.isFetching;\n                }\n                return c;\n            });\n            return newChannels;\n        case SET_CHANNEL_HAS_MORE_MESSAGES: {\n            let channel: Channel = channelExists(state, action.data.channelName);\n            let hasMore: boolean = action.data.hasMore;\n            if (!channel) {\n                console.log('Unknown channel while setting hasMore messages', action);\n                return state;\n            }\n            let newChannels: Channel[] = state.map( (c: Channel) => {\n                if (c.name === action.data.channelName)\n                    c.hasMoreMessages = hasMore;\n                return c;\n            });\n            return newChannels;\n        }\n        case ADD_RETRIEVED_CHANNEL_MESSAGES: {\n            let retrievedMessages: Message[] = action.data.messages;\n            let channelName: string = action.data.channelName;\n            let channel: Channel = channelExists(state, channelName);\n            if(!channel) {\n                console.log('Unknown channel while adding retrieved channel messages', action);\n                return state;\n            }\n            let newChannels: Channel[] = state.map( (c: Channel) => {\n                if (c.name === channelName)\n                    c.messages = retrievedMessages.concat(c.messages);//c.messages.concat(messages);\n                return c;\n            });\n            return newChannels;\n        }\n        case ADD_RECEIVED_CHANNEL_MESSAGE: {\n            let receivedMessage = action.data.message;\n            let channelName = action.data.channelName;\n            let channel: Channel = channelExists(state, channelName);\n            if (!channel) {\n                console.log('Unknown channel while adding received message', state, action);\n                return state;\n            }\n            let newChannels: Channel[] = state.map((c: Channel) => {\n                if(c.name === channelName) \n                    c.messages = c.messages.concat([receivedMessage]);\n                return c;\n            })\n            return newChannels;\n        }\n        case CLEAR_CHANNELS_DATA:\n            return [];\n        default:\n            return state;\n    }\n}","import {AnyAction} from 'redux';\nimport {UPDATE_CHAT_USERS, ADD_CHAT_USER, REMOVE_CHAT_USER}\n    from '../actions/chatUsersActions';\n\nexport interface State {\n    [email: string]: {\n        role: string,\n        name: string,\n    }\n}\n\nexport interface ChatUser {\n    email: string,\n    role: string,\n    name: string,\n}\n\nlet initialState: State = {\n    \n}\n\nexport default function(state: State = initialState, action: AnyAction) {\n    switch(action.type) {\n        case UPDATE_CHAT_USERS:\n            return action.data.users;\n        case ADD_CHAT_USER:\n            return Object.assign({}, state, {\n                [action.data.user.email]: {\n                    role: action.data.user.role,\n                    name: action.data.user.name,\n                }\n            });\n        case REMOVE_CHAT_USER:\n            let clone: State = Object.assign({}, state);\n            delete clone[action.data.email]\n        default:\n            return state;\n    }\n}","import {ADD_ERROR, REMOVE_ERROR, CLEAR_ERRORS, ADD_INFO, REMOVE_INFO, CLEAR_INFOS}\n    from '../actions/notificationsActions';\n\nexport interface State {\n    errors: string[],\n    infos: string[],\n}\ninterface Action {\n    type: string,\n    data: any\n}\n\nlet initialState: State = {\n    errors: [],\n    infos: []\n}\n\nexport default function(state: State = initialState, action: Action) {\n    switch(action.type) {\n        case ADD_ERROR:\n            return Object.assign({}, state, {errors: state.errors.concat([action.data])});\n        case REMOVE_ERROR:\n            let newErrorsArray = state.errors.slice();\n            newErrorsArray.splice(action.data, 1);\n            return Object.assign({}, state, {errors: newErrorsArray});\n        case CLEAR_ERRORS:\n            return Object.assign({}, state,  {errors: []});\n        case ADD_INFO:\n            return Object.assign({}, state, {infos: state.infos.concat([action.data])});\n        case REMOVE_INFO:\n            let newInfosArray = state.infos.slice();\n            newInfosArray.splice(action.data, 1);\n            return Object.assign({}, state, { infos: newInfosArray });\n        case CLEAR_INFOS:\n            return Object.assign({}, state, {infos: []});\n        default:\n            return state;\n    }\n}","import { Action } from \"redux\";\nimport { TOGGLE_SIDEBAR_OPEN } from '../actions/sidebarActions';\n\nexport interface State {\n    open: boolean\n}\n\nlet initialState: State = {\n    open: true\n}\n\nexport default function(state: State = initialState, action: Action) {\n    switch (action.type) {\n        case TOGGLE_SIDEBAR_OPEN:\n            return Object.assign({}, state, {open: !state.open});\n        default:\n            return state;\n    }\n}","import { AnyAction } from \"redux\";\nimport * as io from 'socket.io-client';\n\nimport { INIT_WEBSOCKET,\n         SET_SOCKET_CONNECTED,\n         SET_SOCKET_CONNECTED_USERS }\n    from '../actions/socketActions';\n\nexport interface State {\n    io: SocketIOClient.Socket | null,\n    connected: boolean,\n    connectedUserEmails: string[]\n}\n\nlet initialState: State = {\n    io: null,\n    connected: false,\n    connectedUserEmails: []\n}\n\nexport default function(state: State = initialState, action: AnyAction) {\n    switch(action.type) {\n        case INIT_WEBSOCKET:\n            return Object.assign({}, state, {io: action.data.io});\n        case SET_SOCKET_CONNECTED:\n            return Object.assign({}, state, {connected: action.data.connected});\n        case SET_SOCKET_CONNECTED_USERS:\n            return Object.assign({}, state, {connectedUserEmails: action.data.userEmails })\n        default:\n            return state;\n    }\n}","import {SET_AUTHORIZED, SET_USER, LOGOUT_USER, SET_JWT} from '../actions/userActions';\n\nexport interface State {\n    authorized?: boolean,\n    email?: string | boolean,\n    name?: string | boolean,\n    role?: string | boolean,\n    jwt?: string | boolean,\n}\n\ninterface Action {\n    type: string,\n    data: any\n}\n\nlet initialState : State = {\n    authorized: false,\n    email: false,\n    name: false,\n    role: false,\n    jwt: false,\n}\n\n\nexport default function(state: State = initialState, action: Action) {\n    switch (action.type) {\n        case SET_AUTHORIZED:\n            if (typeof action.data !== 'boolean') {\n                console.error('Data must be boolean for SET_AUTHORIZED action');\n                return state;\n            }\n            if (action.data === false)\n                return Object.assign({}, state, {authorized: false, email: false});\n            return Object.assign({}, state, {authorized: action.data});\n        case SET_USER:\n            return Object.assign({}, state, action.data);\n        case LOGOUT_USER:\n            return {\n                authorized: false,\n                name: false,\n                email: false,\n                role: false\n            }\n        case SET_JWT:\n            return Object.assign({}, state, {token: action.data});\n        default:\n            return state;\n    }\n}","import {createStore, combineReducers, applyMiddleware, Reducer, StoreEnhancer} from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport {createLogger} from 'redux-logger';\n\nimport userReducer, {State as UserState} from './reducers/user';\nimport channelsReducer, {State as ChannelsState} from './reducers/channels';\nimport notificationsReducer, {State as NotificationsState} from './reducers/notifications';\nimport sidebarReducer, {State as SidebarState} from './reducers/sidebar';\nimport socketReducer, {State as SocketState} from './reducers/socket';\nimport chatUsersReducer, {State as ChatUsersState} from './reducers/chatUsers';\n\nconst env = require('../../env');\n\nexport interface State {\n    user: UserState,\n    channels: ChannelsState,\n    notifications: NotificationsState,\n    sidebar: SidebarState,\n    socket: SocketState,\n    chatUsers: ChatUsersState,\n}\n\nconst rootReducer: Reducer = combineReducers({\n    user: userReducer,\n    channels: channelsReducer,\n    notifications: notificationsReducer,\n    sidebar: sidebarReducer,\n    socket: socketReducer,\n    chatUsers: chatUsersReducer,\n});\n\nconst middleware: StoreEnhancer =\n    env.production || env.disableReduxLogging ?\n    applyMiddleware(reduxThunk) : applyMiddleware(reduxThunk, createLogger());\n\nexport default createStore(rootReducer, middleware);","import { conn, app } from '../src/server/server';\nimport User from '../src/server/models/User';\n\nconst dropAllCollections = () => {\n    let p = new Promise((resolve, reject) => {\n        User.deleteMany({}, (err: any) => {\n            if (err) return reject(err);\n            return resolve();\n        })\n    })\n    return p.then().catch((err: any) => {\n        console.error(err);\n    });\n}\n\n\nbefore('all tests', function(done) {\n    // wait for connection to begin tests\n    console.log(process.version);\n    conn.on('connected', () => {\n        console.log('server started');\n        done();\n    });\n});\nbeforeEach('reset DB', function(done) {\n    // start with a fresh database\n    dropAllCollections().then(() => done());\n});\nafter('all tests', function(done) {\n    // teardown DB\n    dropAllCollections().then(() => {\n        console.log('Closing connections');\n        conn.close();\n        done()\n    });\n})\n\n\n\n/* Web */\nrequire('./web/testStore');\nrequire('./web/testAsyncActions');\n\n/* Server */\nrequire('./server/testAuthController');\nrequire('./server/testUserController');\nrequire('./server/testMessageController');\nrequire('./server/testChannelController');\n\nexport { app, dropAllCollections };\n","import * as request from 'supertest';\nimport { hashSync } from 'bcryptjs';\nimport { app, dropAllCollections } from '../';\nimport User, { IUser } from '../../src/server/models/User';\nimport { assert } from 'chai';\n\ndescribe('Auth Controller', function() {\n    describe('login', function() {\n        beforeEach(function (done) {\n            dropAllCollections().then(() => {\n                let user: IUser = new User({\n                    name: 'Adrian',\n                    email: 'test@test.com',\n                    password: hashSync('test'),\n                    role: 'user',\n                });\n                user.save().then((user: IUser) => done()).catch((err: any) => {\n                    throw err;\n                });\n            });\n        });\n        it('should login the user', function(done) {\n            request(app)\n                .post('/api/v1/login')\n                .send({\n                    email: 'test@test.com',\n                    password: 'test'\n                })\n                .expect(200)\n                .end((err: any) => {\n                    if (err)\n                        return done(err);\n                    done();\n                });\n        });\n        it('should return the logged-in user details', function(done) {\n            request(app)\n                .post('/api/v1/login')\n                .send({\n                    email: 'test@test.com',\n                    password: 'test'\n                })\n                .expect(200)\n                .end((err: any, res: request.Response) => {\n                    if (err)\n                        return done(err);\n                    let json: any = JSON.parse(res.text);\n                    assert.strictEqual(json.email, 'test@test.com');\n                    assert.strictEqual(json.role, 'user');\n                    assert.strictEqual(json.name, 'Adrian');\n                    done();\n                });\n        });\n        it('should return an error if the email does not exist', function(done) {\n            request(app)\n                .post('/api/v1/login')\n                .send({\n                    email: 'test.does.not.exit@test.com',\n                    password: 'test'\n                })\n                .expect(401)\n                .end((err: any, res: request.Response) => {\n                    if (err)\n                        return done(err);\n                    let json: any = JSON.parse(res.text);\n                    assert.strictEqual(json.error, 'Invalid email or password');\n                    done();\n                });\n        });\n        it('should return an error if the password does not match the hash', function(done) {\n            request(app)\n                .post('/api/v1/login')\n                .send({\n                    email: 'test@test.com',\n                    password: 'test-invalid-password'\n                })\n                .expect(401)\n                .end((err: any, res: request.Response) => {\n                    if (err)\n                        return done(err);\n                    let json: any = JSON.parse(res.text);\n                    assert.strictEqual(json.error, 'Invalid email or password');\n                    done();\n                });\n        });\n        it('should return an error if the email or password is missing', function(done) {\n            request(app)\n                .post('/api/v1/login')\n                .send({\n                    password: 'test'\n                })\n                .expect(400)\n                .end((err: any, res: request.Response) => {\n                    if (err)\n                        return done(err);\n                    let json: any = JSON.parse(res.text);\n                    assert.strictEqual(json.error, 'Please supply an email and password');\n                    request(app)\n                        .post('/api/v1/login')\n                        .send({email: 'test@test.com'})\n                        .expect(400)\n                        .end((err: any, res: request.Response) => {\n                            if (err)\n                                return done(err);\n                            let json: any = JSON.parse(res.text);\n                            assert.strictEqual(json.error, 'Please supply an email and password');\n                            done();\n                        })\n                });\n        });\n        it('should return an error if the email is not valid', function(done) {\n            request(app).post('/api/v1/login')\n                .send({email: 'not an email@asdf', password: '1234'})\n                .expect(400)\n                .end((err: any, res: request.Response) => {\n                    if (err)\n                        return done(err);\n                    let json: any = JSON.parse(res.text);\n                    assert.strictEqual(json.error, 'Not a valid email address');\n                    done();\n                })\n        });\n    });\n    describe('register', function() {\n        beforeEach(function (done) {\n            dropAllCollections().then(() => done());\n        });\n        it('should register a user', function(done) {\n            request(app).post('/api/v1/register')\n                .send({email: 'test@test.com', password: 'test'})\n                .expect(200)\n                .end((err: any, res: request.Response) => {\n                    if(err) return done(err);\n                    User.findByEmail('test@test.com').exec().then((user: IUser) => {\n                        if (!user) {\n                            assert.fail();\n                            return done();\n                        }\n                        done();\n                    }).catch((err: any) => {\n                        return done(err);\n                    })\n                });\n        });\n        it('should create an admin user if no users exist', function (done) {\n            request(app).post('/api/v1/register')\n                .send({ email: 'test@test.com', password: 'test' })\n                .expect(200)\n                .end((err: any, res: request.Response) => {\n                    if (err) return done(err);\n                    User.findByEmail('test@test.com').exec().then((user: IUser) => {\n                        if (!user) {\n                            assert.fail();\n                        }\n                        assert.strictEqual(user.role, 'admin');\n                        done();\n                    }).catch((err: any) => {\n                        return done(err);\n                    })\n                });\n        });\n        it('should create a regular user if users exist', function(done) {\n            let u = new User({\n                name: 'test',\n                email: 'admin@test.com',\n                password: 'password',\n                role: 'admin'\n            })\n            u.save().then(() => {\n                request(app).post('/api/v1/register')\n                    .send({ email: 'test@test.com', password: 'test' })\n                    .expect(200)\n                    .end((err: any, res: request.Response) => {\n                        if (err) return done(err);\n                        User.findByEmail('test@test.com').exec().then((user: IUser) => {\n                            if (!user) {\n                                assert.fail();\n                            }\n                            assert.strictEqual(user.role, 'user');\n                            done();\n                        }).catch((err: any) => {\n                            return done(err);\n                        })\n                    });\n            })\n        });\n        it('should return an error if email or password not provided', function(done) {\n            request(app).post('/api/v1/register')\n                .send({ email: 'test@test.com' })\n                .expect(400)\n                .end((err: any, res: request.Response) => {\n                    if (err) return done(err);\n                    let json: any = JSON.parse(res.text);\n                    assert.strictEqual(json.error, 'Please supply an email and password');\n                    request(app).post('/api/v1/register')\n                        .send({password: '123'})\n                        .expect(400)\n                        .end((err: any, res: request.Response) => {\n                            if(err) return done(err);\n                            let json: any = JSON.parse(res.text);\n                            assert.strictEqual(json.error, 'Please supply an email and password');\n                            done();\n                        });\n                });\n        });\n        it('should return an error if not a valid email', function(done) {\n            request(app).post('/api/v1/register')\n                .send({email: 'not an email @ asdlfkj;l', password: '1234'})\n                .expect(400)\n                .end((err: any, res: request.Response) => {\n                    if (err) return done(err);\n                    let json: any = JSON.parse(res.text);\n                    assert.strictEqual(json.error, 'Not a valid email address');\n                    done();\n                });\n        });\n    });\n    describe('logout', function() {\n        beforeEach(function (done) {\n            dropAllCollections().then(() => done());\n        });\n        it('should log out the user');\n    });\n    describe('verify email', function() {\n        beforeEach(function (done) {\n            dropAllCollections().then(() => done());\n        });\n        it('should verify an email given the correct verification link');\n        it('should not verify an email with an incorrect verification link');\n    });\n});","import 'mocha';\nimport * as _ from 'lodash';\nimport { Store } from 'redux';\nimport store, { State } from '../../src/web/store';\n\nfunction getStoreCopy(): Store<State> {\n    return _.cloneDeep(store);\n}\n\ndescribe('Async Actions', function() {\n    let store: Store<State>;\n    beforeEach(function() {\n        store = getStoreCopy();\n    });\n    describe('User async actions', function() {\n        it('should update name');\n        it('should update email');\n        it('should update password');\n    });\n    describe('Channels async actions', function () {\n        it('should fetch channels');\n        it('should retrieve channel messages');\n        it('should delete channel');\n        it('should create new channel');\n    });\n    describe('Socket async actions', function () {\n        it('should initialize websocket connection');\n    });\n    describe('Chat Users async actions', function () {\n        it('should fetch all users');\n        it('should create a new user');\n        it('should edit the user');\n        it('should delete the user');\n    });\n})","import { assert } from 'chai';\nimport * as _ from 'lodash';\nimport 'mocha';\nimport store, {State} from '../../src/web/store';\nimport { Store } from 'redux';\nimport { setAuthorized, setUser, logoutUser } from '../../src/web/actions/userActions';\nimport { addChannels, setChannelFetchingNewMessages } from '../../src/web/actions/channelsActions';\n\nfunction getStoreCopy(): Store<State> {\n    return _.cloneDeep(store);\n}\n\ndescribe('Store and Synchronous Actions', function() {\n    describe('User State', function () {\n        let store: Store<State>;\n        let user: (() => State['user']);\n        beforeEach(function () {\n            store = getStoreCopy();\n            user = () => store.getState().user;\n        });\n        it('should not be authorized', function () {\n            assert.isFalse(user().authorized);\n            assert.isFalse(user().email);\n            assert.isFalse(user().name);\n            assert.isFalse(user().role);\n        });\n        it('should be authorized after setAuthorized action', function() {\n            assert.isFalse(user().authorized);\n            store.dispatch(setAuthorized(true));\n            assert.isTrue(user().authorized);\n            store.dispatch(setAuthorized(false));\n            assert.isFalse(user().authorized);\n        });\n        it('should have user data after setting the user', function() {\n            assert.isFalse(user().authorized);\n            assert.isFalse(user().email);\n            assert.isFalse(user().name);\n            assert.isFalse(user().role);\n            store.dispatch(setUser({\n                authorized: true,\n                email: 'test@test.com',\n                name: 'Jane Doe',\n                role: 'admin'\n            }));\n            assert.isTrue(user().authorized);\n            assert.strictEqual(user().email, 'test@test.com');\n            assert.strictEqual(user().name, 'Jane Doe');\n            assert.strictEqual(user().role, 'admin');\n            store.dispatch(setUser({\n                authorized: false,\n                email: false,\n                name: false,\n                role: false\n            }));\n            assert.isFalse(user().authorized);\n            assert.isFalse(user().email);\n            assert.isFalse(user().name);\n            assert.isFalse(user().role);\n        });\n        it('should not have user data after logging out', function() {\n            store.dispatch(setUser({\n                authorized: true,\n                email: 'test@test.com',\n                name: 'Jane Doe',\n                role: 'admin'\n            }));\n            store.dispatch(logoutUser());\n            store.dispatch(setUser({\n                authorized: false,\n                email: false,\n                name: false,\n                role: false\n            }));\n        })\n    });\n    describe('Channels State', function () {\n        let store: Store<State>;\n        let channels: (() => State['channels']);\n        beforeEach(function () {\n            store = getStoreCopy();\n            channels = () => store.getState().channels;\n        });\n        it('should add channels from an array of channel names', function() {\n            store.dispatch(addChannels(['general', 'random', 'something else']));\n            let c0: State['channels'][0] = channels()[0];\n            let c1: State['channels'][0] = channels()[1];\n            let c2: State['channels'][0] = channels()[2];\n            assert.deepStrictEqual(c0, {\n                name: 'general',\n                messages: [],\n                retrieveMessagesOffset: 0,\n                hasMoreMessages: true,\n                fetchingNewMessages: false,\n            });\n            assert.deepStrictEqual(c1, {\n                name: 'random',\n                messages: [],\n                retrieveMessagesOffset: 0,\n                hasMoreMessages: true,\n                fetchingNewMessages: false,\n            });\n            assert.deepStrictEqual(c2, {\n                name: 'something else',\n                messages: [],\n                retrieveMessagesOffset: 0,\n                hasMoreMessages: true,\n                fetchingNewMessages: false,\n            });\n        });\n        it('should update fetchingNewMessages after calling setChannelFetchingNewMessages action', function() {\n            store.dispatch(addChannels(['general', 'random', 'something else']));\n            channels().forEach((c: State['channels'][0]) => {\n                assert.isFalse(c.fetchingNewMessages);\n                store.dispatch(setChannelFetchingNewMessages(c.name, true));\n            });\n            channels().forEach((c: State['channels'][0]) => {\n                assert.isTrue(c.fetchingNewMessages);\n                store.dispatch(setChannelFetchingNewMessages(c.name, false));\n            });\n            channels().forEach((c: State['channels'][0]) => {\n                assert.isFalse(c.fetchingNewMessages);\n            });\n        });\n        it('should increment the channel offset for retrieving new messages', function() {\n            \n        });\n        it('should update the hasMoreMessages property on a channel');\n        it('should add a received message to the appropriate channel');\n        it('should add retreived messages to the appropriate channel');\n        it('should clear all channel data');\n    });\n    describe('Notifications State', function () {\n        it('should add errors');\n        it('should remove errors given an index');\n        it('should clear errors');\n        it('should add info');\n        it('should remove info given an index');\n        it('should clear infos');\n    });\n    describe('Sidebar State', function () {\n        it('should toggle open state');\n    });\n    describe('Socket State', function () {\n        it('should set the socket given an opened SocketIOClient Socket');\n        it('should update the connected state');\n        it('should update the connected users');\n    });\n    describe('Chat Users State', function () {\n        it('should update users');\n        it('should add a user');\n        it('should remove a user');\n    });\n});\n","module.exports = require(\"axios\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"chai\");","module.exports = require(\"compression\");","module.exports = require(\"connect-mongo\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"csurf\");","module.exports = require(\"express\");","module.exports = require(\"express-session\");","module.exports = require(\"helmet\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"lodash\");","module.exports = require(\"mocha\");","module.exports = require(\"mongoose\");","module.exports = require(\"mustache-express\");","module.exports = require(\"path\");","module.exports = require(\"redux\");","module.exports = require(\"redux-logger\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"socket.io\");","module.exports = require(\"socket.io-client\");","module.exports = require(\"socketio-jwt\");","module.exports = require(\"supertest\");","module.exports = require(\"validator\");"],"sourceRoot":""}