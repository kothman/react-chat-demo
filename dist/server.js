!function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=9)}([function(e,t){e.exports=require("mongoose")},function(e,t,n){e.exports={mongodbConnectionUri:process.env.MONGODB_URI,mongodbTestConnectionUri:process.env.MONGODB_TEST_URI||"mongodb://localhost:27017/openChatTest",port:process.env.PORT||5e3,production:!0,useTestDb:process.env.USE_TEST_DB||!1,secret:process.env.SECRET||"secret",disableCsrf:process.env.DISABLE_CSRF||!1,disableReduxLogging:process.env.DISABLE_REDUX_LOGGING||!1,disableAutoStart:process.env.DISABLE_AUTO_START||!1,mailgunApiKey:process.env.MAILGUN_API_KEY,mailgunDomain:process.env.MAILGUN_DOMAIN,baseUrl:process.env.BASE_URL?process.env.BASE_URL:"http://localhost:5000"}},function(e,t){e.exports=require("bcryptjs")},function(e,t,n){"use strict";t.__esModule=!0;var r=n(0),s=new r.Schema({name:String,email:{required:!0,type:String,lowercase:!0},password:{type:String,required:!0},role:{type:String,required:!0,lowercase:!0,enum:["admin","user"]},deleted:{type:Boolean,default:!1},verified:{type:Boolean,default:!1}},{timestamps:!0});s.statics.findByEmail=function(e){return this.findOne({email:e})};var o=r.model("User",s);t.default=o},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t,n){"use strict";t.__esModule=!0;var r=n(5),s=n(1);t.default=function(e,t,n){var o=e.session.token||e.headers["x-access-token"];if(!o)return t.status(401).json({error:"Not authorized"});r.verify(o,s.secret,function(r,s){return r?t.status(401).send({error:"Not authorized"}):(e.user=s,n())})}},function(e,t){e.exports=require("validator")},function(e,t,n){"use strict";t.__esModule=!0;var r=n(0),s=new r.Schema({channel:{type:String,required:!0},text:{type:String,required:!0},userEmail:{type:String,required:!0,lowercase:!0}},{timestamps:!0}),o=r.model("Message",s);t.default=o},function(e,t,n){"use strict";(function(e){t.__esModule=!0;var r=n(10),s=n(11),o=n(4),u=n(0),a=n(12),i=n(13),l=n(14),c=n(15),d=n(2),f=n(16),m=n(17),p=n(5),g=n(18),y=n(19)(l),h=n(20),v=n(27),w=n(3),b=n(1),j=s();t.app=j;var x,S,E=b.port;t.socketServer=S,j.engine("html",g()),j.set("view engine","html"),j.use(m());var _=l({secret:b.secret,cookie:{maxAge:864e5,sameSite:!0,secure:b.production,httpOnly:!0},saveUninitialized:!0,resave:!1,store:new y({mongooseConnection:u.connection})}),U=a({cookie:{maxAge:864e5,sameSite:!0,secure:b.production,httpOnly:!0,key:"_csrf"}});u.connect(b.useTestDb?b.mongodbTestConnectionUri:b.mongodbConnectionUri,{useNewUrlParser:!0}),u.connection.on("error",function(e){console.error("Mongoose connection error",e)}),process.on("SIGINT",function(){u.connection.close(function(){console.log("Mongoose default connection disconnected through app termination"),x.close(function(){process.exit(0)})})}),j.use(_),j.use(i(b.secret)),b.disableCsrf?(console.log("CSRF disabled"),j.use(function(e,t,n){return e.csrfToken=function(){return""},n()})):j.use(U);var q=u.connection;j.use(function(e,t,n){return e.db=q,n()}),j.use(c.json()),j.use(c.urlencoded({extended:!0})),j.use(f()),j.use(s.static(o.resolve(e,"../../dist/public/"))),j.use("/api",function(e,t,n){return n()}),j.use(function(e,t,n){e.authenticate=function(e,t,n){w.default.findByEmail(e).then(function(e){if(null===e)return n(!1,null);if(!d.compareSync(t,e.password))return n(!1,new Error("Invalid password"));var r={email:e.email,name:e.name,role:e.role};return n(r,null)}).catch(function(e){n(!1,e)})},e.logout=function(){e.session.token=null},e.issueNewToken=function(n){var r=p.sign({name:n.name,role:n.role,email:n.email},b.secret,{expiresIn:86400});t.setHeader("x-access-token",r),e.session.token=r},n()}),h.default(j),(x=r.createServer(j)).on("error",function(e){console.error(e),x.close()}),b.disableAutoStart||(t.socketServer=S=v.default(x,q,_),u.connection.on("connected",function(){console.log("Connected to MongoDB via Mongoose"),x.listen(E,function(){console.log("Listening on port "+E+"!"),j.emit("server started")})})),t.default=x,t.conn=u.connection}).call(this,"src/server")},function(e,t){e.exports=require("http")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("csurf")},function(e,t){e.exports=require("cookie-parser")},function(e,t){e.exports=require("express-session")},function(e,t){e.exports=require("body-parser")},function(e,t){e.exports=require("helmet")},function(e,t){e.exports=require("compression")},function(e,t){e.exports=require("mustache-express")},function(e,t){e.exports=require("connect-mongo")},function(e,t,n){"use strict";(function(e){t.__esModule=!0;var r=n(4),s=n(6),o=n(21),u=n(22),a=n(23),i=n(24),l=n(25);t.default=function(t){t.get("/",function(t,n){return n.render(r.resolve(e,"../../dist/public/index.html"),{csrfToken:t.csrfToken()})}),t.get("/widget",function(t,n){return n.render(r.resolve(e,"../../../dist/public/widget/index.html"))}),t.get("/widget/demo",function(t,n){return n.render(r.resolve(e,"../../../dist/public/widget/demo.html"))}),t.post("/api/v1/login",u.default.login),t.post("/api/v1/register",u.default.register),t.get("/api/v1/logout",u.default.logout),t.get("/api/v1/verifyEmail/:id",u.default.verifyEmail),t.use("/api/v1/user*",s.default),t.get("/api/v1/user",a.default.user),t.get("/api/v1/users",a.default.users),t.get("/api/v1/user/:user",a.default.userByEmail),t.post("/api/v1/user/update/email",a.default.updateEmail),t.post("/api/v1/user/update/name",a.default.updateName),t.post("/api/v1/user/update/password",a.default.updatePassword),t.post("/api/v1/user/reset_password",a.default.resetPassword),t.post("/api/v1/user/create",o.default,a.default.createUser),t.put("/api/v1/user/update",o.default,a.default.editUser),t.delete("/api/v1/user/delete",o.default,a.default.deleteUser),t.put("/api/v1/user/restore",o.default,a.default.restoreUser),t.use("/api/v1/message*",s.default),t.get("/api/v1/messages/:channel/:offset",i.default.messages),t.use("/api/v1/channel",s.default),t.get("/api/v1/channels",l.default.channels),t.post("/api/v1/channels/delete",o.default,l.default.delete),t.post("/api/v1/channels/create",o.default,l.default.create),t.get("*",function(t,n){return n.render(r.resolve(e,"../../dist/public/index.html"),{csrfToken:t.csrfToken()})})}}).call(this,"src/server")},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t,n){return e.user&&"admin"===e.user.role?n():t.status(401).json({error:"Not authorized as admin"})}},function(e,t,n){"use strict";t.__esModule=!0;var r=n(7),s=n(2),o=n(3);n(1);t.default={login:function(e,t){return r.isEmpty(e.body.email||"")||r.isEmpty(e.body.password||"")?t.status(400).json({error:"Please supply an email and password"}).end():r.isEmail(e.body.email)?void e.authenticate(e.body.email,e.body.password,function(n){return n?(e.issueNewToken(n),t.status(200).json({success:!0,email:n.email,role:n.role,name:n.name}).end()):t.status(401).json({error:"Invalid email or password"}).end()}):t.status(400).json({error:"Not a valid email address"}).end()},register:function(e,t){return r.isEmpty(e.body.email||"")||r.isEmpty(e.body.password||"")?t.status(400).json({error:"Please supply an email and password"}):r.isEmail(e.body.email)?o.default.findByEmail(e.body.email).countDocuments().exec().then(function(n){if(0!==n)return t.status(400).json({error:"Email address in use"});var r=s.hashSync(e.body.password);o.default.countDocuments().exec().then(function(n){var s="user";0===n&&(s="admin"),new o.default({name:"",email:e.body.email,password:r,role:s,emailVerified:!1}).save().then(function(e){return t.status(200).json({success:!0})}).catch(function(e){return console.error(e),t.status(500).json({error:"Something went wrong trying to create a new user"})})})}):t.status(400).json({error:"Not a valid email address"})},logout:function(e,t){return e.logout(),t.json({success:!0,message:"logged out"})},verifyEmail:function(e,t){}}},function(e,t,n){"use strict";t.__esModule=!0;var r=n(7),s=n(3),o=n(2);t.default={user:function(e,t){t.send(e.user)},users:function(e,t){return s.default.find({}).select("name email role deleted").then(function(e){return t.status(200).json({success:!0,users:e})}).catch(function(e){return console.error(e),t.status(500).json({error:"Something went wrong while retrieving users"})})},userByEmail:function(e,t){return r.isEmail(e.params.user)?s.default.findByEmail(e.params.user).exec().then(function(e){return null!==e?t.status(200).json({user:{email:e.email,_id:e._id,name:e.name||"",role:e.role,created:e.createdAt}}):t.status(400).json({error:"No user found with that email"})}).catch(function(e){return console.error(e),t.status(500).json({error:"Something went wrong trying to find the user"})}):t.status(400).json({error:"Please supply a valid email"})},updateEmail:function(e,t){return r.isEmail(e.body.email)?s.default.countDocuments({email:e.body.email}).exec().then(function(n){return 0!==n?t.status(400).json({error:"Email address already in use"}):s.default.findByEmail(e.user.email).exec().then(function(n){return n.email=e.body.email,n.save(),e.issueNewToken(Object.assign({},e.user,{email:e.body.email})),t.status(200).json({success:!0})}).catch(function(e){return console.error(e),t.status(500).json({error:"Something went wrong trying to fetch the user"})})}):t.status(400).json({error:"Not a valid email"})},updateName:function(e,t){return s.default.findByEmail(e.user.email).exec().then(function(n){return n.name=e.body.name,n.save(),e.issueNewToken(Object.assign({},e.user,{name:e.body.name})),t.status(200).json({success:!0})}).catch(function(e){return console.error(e),t.status(500).json({error:"Something went wrong trying to update the user"})})},updatePassword:function(e,t){return r.isEmpty(e.body.newPass)||r.isEmpty(e.body.oldPass)?t.status(400).json({error:"Must supply the current and new password"}):s.default.findByEmail(e.user.email).exec().then(function(n){return o.compareSync(e.body.oldPass,n.password)?(n.password=o.hashSync(e.body.newPass),n.save(),t.status(200).json({success:!0})):t.status(400).json({error:"Current password is incorrect"})})},resetPassword:function(e,t){return t.status(500).json({error:"Not implemented"})},createUser:function(e,t){return r.isEmpty(e.body.email)||!r.isEmail(e.body.email)||r.isEmpty(e.body.role)||"user"!==e.body.role&&"admin"!==e.body.role?t.status(400).json({error:"Must supply valid email and role"}):s.default.findByEmail(e.body.email).countDocuments(function(n,r){return n?(console.error("Something went wrong trying to count users with email "+e.body.email,n),t.status(500).json({error:"Something went wrong"})):0!==r?t.status(400).json({error:"Email address in use"}):new s.default({email:e.body.email,name:e.body.name||"",role:e.body.role,password:"temp"}).save(function(e,n){return e?(console.error("Something went wrong trying to save user",e),t.status(500).json({error:"Something went wrong"})):t.status(200).json({success:!0})})})},editUser:function(e,t){return e.body.email&&r.isEmail(e.body.email)?e.body.user.email&&!r.isEmail(e.body.user.email)?t.status(400).json({error:"Please supply a valid email"}):e.body.user.role&&!r.isEmpty(e.body.user.role)&&"user"!==e.body.user.role&&"admin"!==e.body.user.role?t.status(400).json({error:"Invalid role"}):s.default.findByEmail(e.body.email).exec(function(n,r){return n?(console.log("Something went wrong",n),t.status(500).json({error:"Something went wrong"})):r?(e.body.user.email&&(r.email=e.body.user.email),e.body.user.name&&(r.name=e.body.user.name),e.body.user.role&&(r.role=e.body.user.role),r.save(function(e,n){return e?(console.log(e),t.status(500).json({error:"Something went wrong"})):t.status(200).json({success:!0})})):t.status(404).json({error:"User does not exist"})}):t.status(400).json({error:"Please supply a valid email"})},deleteUser:function(e,t){return e.body.email&&r.isEmail(e.body.email)?s.default.findByEmail(e.body.email).exec(function(n,r){return n?(console.log("Something went wrong",n),t.status(500).json({error:"Something went wrong"})):r?r.deleted?t.status(400).json({error:"User already deleted"}):e.user.email===e.body.email?t.status(400).json({error:"Cannot delete current user"}):(r.deleted=!0,r.save(function(e){return t.status(200).json({success:!0})})):t.status(404).json({error:"User does not exist"})}):t.status(400).json({error:'Invalid data for parameter "email"'})},restoreUser:function(e,t){return e.body.email&&r.isEmail(e.body.email)?s.default.findByEmail(e.body.email).exec(function(e,n){return e?(console.log("Something went wrong",e),t.status(500).json({error:"Something went wrong"})):n?n.deleted?(n.deleted=!1,n.save(function(e){return t.status(200).json({success:!0})})):t.status(400).json({error:"User already active"}):t.status(404).json({error:"User does not exist"})}):t.status(400).json({error:'Invalid data for parameter "email"'})}}},function(e,t,n){"use strict";t.__esModule=!0;var r=n(8);t.default={messages:function(e,t){return r.default.find({channel:e.params.channel}).skip(parseInt(e.params.offest)).sort({_id:-1}).limit(20).exec().then(function(e){return t.status(200).json({messages:e.map(function(e){return{text:e.text,created:e.createdAt,userEmail:e.userEmail,channel:e.channel,_id:e._id}}).reverse()})}).catch(function(e){return t.status(400).json({error:"something went wrong trying to fetch messages"})})}}},function(e,t,n){"use strict";t.__esModule=!0;var r=n(26);t.default={channels:function(e,t){return r.default.countDocuments().exec().then(function(e){return new Promise(function(t,n){if(0!==e)return t();r.default.create([{name:"general"},{name:"random"}]).then(function(){return t()}).catch(function(e){return n(e)})}).then(function(){r.default.find().exec().then(function(e){return t.status(200).json({channels:e})}).catch(function(e){return console.log(e),t.status(500).json({error:"Something went wrong while trying to fetch channels"})})}).catch(function(e){return console.error(e),t.status(500).json({error:"Something went wrong while trying to create default channels"})})}).catch(function(e){return console.error(e),t.status(500).json({error:"Something went wrong while counting channels"})})},delete:function(e,t){},create:function(e,t){}}},function(e,t,n){"use strict";t.__esModule=!0;var r=n(0),s=new r.Schema({name:{type:String,required:!0,lowercase:!0}},{timestamps:!0}),o=r.model("Channel",s);t.default=o},function(e,t,n){"use strict";t.__esModule=!0;var r=n(28),s=n(8),o=n(6);n(1);t.default=function(e,t,n){var u=r(e),a=[];return u.use(function(e,t){n(e.request,{},t)}),u.use(function(e,t){o.default(e.request,{},t)}),u.on("connection",function(e){a.push(e.request.user.email),console.log("Connected users",a),u.emit("connected users",a),e.on("disconnect",function(){a.splice(a.indexOf(e.request.user.email),1),u.emit("connected users",a)}),e.on("message",function(t){console.log(t),new s.default({channel:t.channel,text:t.text,userEmail:e.request.user.email}).save().then(function(t){u.emit("message",{_id:t._id,userEmail:t.userEmail,text:t.text,channel:t.channel,created:t.createdAt}),e.emit("message received")}).catch(function(t){console.error(t),e.emit("message receive error",t)})})}),u}},function(e,t){e.exports=require("socket.io")}]);
//# sourceMappingURL=server.js.map