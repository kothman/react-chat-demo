{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./env.js","webpack:///./src/server/middleware/authorized.ts","webpack:///./src/server/routes/api/channels.ts","webpack:///./src/server/routes/api/index.ts","webpack:///./src/server/routes/api/messages.ts","webpack:///./src/server/routes/api/users.ts","webpack:///./src/server/routes/index.ts","webpack:///./src/server/server.ts","webpack:///./src/server/socket.io/index.ts","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"connect-mongo\"","webpack:///external \"express\"","webpack:///external \"express-session\"","webpack:///external \"http\"","webpack:///external \"mongodb\"","webpack:///external \"path\"","webpack:///external \"socket.io\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA,C;;;;;;;;;;;;;;ACHA,mBAAwB,GAAQ,EAAE,GAAQ,EAAE,IAAc;IACtD,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE;QAClB,OAAO,IAAI,EAAE,CAAC;KACjB;IACD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;AAC7D,CAAC;AALD,+BAKC;;;;;;;;;;;;;;;ACLD,mHAA+D;AAE/D,mBAAyB,GAAQ;IAC7B,GAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,uBAAoB,CAAC,CAAC;IACnD,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAU,GAAQ,EAAE,GAAQ;QACpD,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,UAAC,GAAQ,EAAE,QAAa;YAC3D,IAAI,CAAC,QAAQ;gBACT,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;YAC9C,QAAQ,CAAC,OAAO,CAAC,UAAC,GAAQ,EAAE,UAAiB;gBACzC,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAXD,+BAWC;;;;;;;;;;;;;;;ACbD,IAAM,MAAM,GAAG,mBAAO,CAAC,0BAAU,CAAC,CAAC;AAInC,qFAAiC;AACjC,8FAAuC;AACvC,8FAAuC;AAEvC,mBAAwB,GAAQ;IAC5B,kBAAU,CAAC,GAAG,CAAC,CAAC;IAChB,qBAAa,CAAC,GAAG,CAAC,CAAC;IACnB,qBAAa,CAAC,GAAG,CAAC,CAAC;IACnB,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,UAAC,GAAQ,EAAE,GAAQ;QACzC,OAAO,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,IAAsB;YAC9E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,IAAI;gBACL,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,2BAA2B,EAAC,CAAC,CAAC;YACtE,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QACtE,CAAC,CAAC;IACN,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,UAAS,GAAQ,EAAE,GAAQ;QACpD,IAAI,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtD,IAAI,KAAK,GAAe,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACnD,KAAK,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,IAAI,CAAC,UAAC,IAAS;YAClD,IAAI,IAAI,KAAK,IAAI,EAAE;gBACf,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,8BAA8B,EAAC,CAAC,CAAC;aACxE;YACD,KAAK,CAAC,SAAS,CAAC,EAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAC,EAAE,UAAC,GAAG;gBACjE,IAAI,GAAG;oBAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,6DAA6D,EAAC,CAAC,CAAC;gBAC9G,OAAO,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,IAAsB;oBAC9E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAClB,IAAI,CAAC,IAAI;wBACL,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC,CAAC;oBACxE,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;gBACtE,CAAC,CAAC;YACN,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,UAAS,GAAQ,EAAE,GAAQ;QACjD,GAAG,CAAC,MAAM,EAAE,CAAC;QACb,OAAO,GAAG,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACP,CAAC;AAlCD,+BAkCC;;;;;;;;;;;;;;;AC1CD,mHAA+D;AAC/D,8DAAiC;AAEjC,mBAAyB,GAAQ;IAC7B,GAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,uBAAoB,CAAC,CAAC;IACnD,GAAG,CAAC,GAAG,CAAC,2BAA2B,EAAE,UAAU,GAAQ,EAAE,GAAQ;QAC7D,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAE,EAAE,EAAC,EAAE,UAAC,GAAQ,EAAE,QAAa;YACnG,IAAI,CAAC,QAAQ;gBACT,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC,CAAC;YAC5C,QAAQ,CAAC,OAAO,CAAC,UAAC,GAAQ,EAAE,QAAe;gBACvC,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,UAAC,CAAC;wBACnC,IAAI,KAAK,GAAa,IAAI,kBAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC7C,CAAC,CAAC,OAAO,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;wBACjC,OAAO,CAAC,CAAC;oBACb,CAAC,CAAC;iBACL,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAhBD,+BAgBC;;;;;;;;;;;;;;;ACnBD,mHAA+D;AAI/D,mBAAwB,GAAQ;IAC5B,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,uBAAoB,CAAC,CAAC;IAChD,GAAG,CAAC,GAAG,CAAC,cAAc,EAAE,UAAS,GAAQ,EAAE,GAAQ;QAC/C,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,GAAG,CAAC,oBAAoB,EAAE,UAAS,GAAQ,EAAE,GAAQ;QACrD,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,EAAC,EACvD,UAAC,GAAQ,EAAE,IAAS;YAChB,IAAI,GAAG;gBACH,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;YAC9C,OAAO,GAAG,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE;oBACnB,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC;oBAChB,IAAI,EAAE,EAAE;iBAEX,EAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC;AAlBD,+BAkBC;;;;;;;;;;;;;;;ACtBD,yFAAoC;AAEpC,mBAAwB,GAAQ;IAC5B,kBAAS,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC;AAFD,+BAEC;;;;;;;;;;;;;;;ACFD,mDAA6B;AAC7B,4DAAmC;AACnC,4EAA2C;AAC3C,mDAA6B;AAC7B,8DAAsD;AACtD,uEAA0C;AAC1C,6DAAmC;AACnC,IAAM,UAAU,GAAG,mBAAO,CAAC,oCAAe,CAAC,CAAC,OAAO,CAAC,CAAC;AAErD,wFAAoC;AACpC,8FAA0C;AAC1C,IAAM,GAAG,GAAG,mBAAO,CAAC,2BAAW,CAAC,CAAC;AAEjC,IAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AACtB,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AAEhD,qBAAW,CAAC,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,EAAC,eAAe,EAAE,IAAI,EAAC,EAAE,UAAS,GAAU,EAAE,MAAmB;IAC3G,IAAI,GAAG;QAAE,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnC,IAAI,EAAE,GAAO,MAAM,CAAC,EAAE,EAAE,CAAC;IAEzB,GAAG,CAAC,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAQ,EAAE,IAAc;QACvC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;QACZ,OAAO,IAAI,EAAE,CAAC;IAClB,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;IAC3B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAEnD,IAAM,iBAAiB,GAAG,OAAO,CAAC;QAC9B,MAAM,EAAE,aAAa;QACrB,iBAAiB,EAAE,IAAI;QACvB,MAAM,EAAE,KAAK;QACb,MAAM,EAAE;YACJ,MAAM,EAAE,KAAK;SAChB;QACD,KAAK,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC;KAC3D,CAAC,CAAC;IACH,GAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAE3B,GAAG,CAAC,GAAG,CAAC,UAAC,GAAQ,EAAE,GAAQ,EAAE,IAAc;QACvC,GAAG,CAAC,YAAY,GAAG,UAAC,QAAgB,EAAE,QAAgB,EAAE,IAAc;YAClE,IAAI,KAAK,GAAe,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAC/C,KAAK,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;gBACzC,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;oBAC/D,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;iBACtB;gBACD,IAAI,WAAW,GAAQ,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC;gBAC3C,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,WAAW,CAAC;gBAC/B,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC;QACD,GAAG,CAAC,MAAM,GAAG;YACT,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;YACxB,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC1B,CAAC;QACD,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,kBAAM,CAAC,GAAG,CAAC,CAAC;IAEZ,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC,CAAC,CAAC;IAEvE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,GAAQ,EAAE,GAAQ;QACrC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,8BAA8B,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IACtC,kBAAS,CAAC,MAAM,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAC;IACzC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;QAChB,OAAO,CAAC,GAAG,CAAC,uBAAqB,IAAI,MAAG,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;ACxEH,iEAAsC;AACtC,8DAAuC;AAavC,IAAM,IAAI,GAAG,UAAC,MAAc,EAAE,EAAM,EAAE,iBAAsB;IACxD,IAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC5B,IAAI,mBAAmB,GAAa,EAAE,CAAC;IAGvC,EAAE,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,IAAI;QAChB,iBAAiB,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,IAAI;QAChB,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO,IAAI,EAAE,CAAC;QACrD,IAAI,CAAC,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,MAAc;QAC/B,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5D,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;QACpD,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,KAAK,EAAE,IAAI;YACrE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;QACzC,CAAC,CAAC,CAAC,CAAC;QAEJ,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE;YACpB,mBAAmB,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9F,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,mBAAmB,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,KAAK,EAAE,IAAI;gBACrE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;YACzC,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,OAA0C;YAC5D,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,SAAS,CAC/B,EAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,EAC7F,UAAC,GAAG,EAAE,CAAC;gBACH,IAAI,CAAC,GAAG,EAAE;oBACN,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE;wBACf,GAAG,EAAE,CAAC,CAAC,UAAU;wBACjB,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK;wBAC5C,IAAI,EAAE,OAAO,CAAC,IAAI;wBAClB,OAAO,EAAE,OAAO,CAAC,OAAO;wBACxB,OAAO,EAAE,CAAC,IAAI,kBAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,EAAE;qBAAE,CAAC,CAAC;oBAC5D,OAAO,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;iBAC1C;gBAED,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAED,qBAAe,IAAI,CAAC;;;;;;;;;;;;AC9DpB,qC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,sC","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server/server.ts\");\n","module.exports = {\n    // https://docs.mongodb.com/manual/reference/connection-string/\n    mongodbConnectionUri: process.env.DATABASE_URL ? process.env.DATABASE_URL : 'mongodb://localhost:27017/reactChatDB'\n}","export default function(req: any, res: any, next: Function) {\n    if (req.session.user) {\n        return next();\n    }\n    return res.status(401).json({ error: 'Not authorized' });\n}","import authorizedMiddleware from '../../middleware/authorized';\n\nexport default function (app: any) {\n    app.get('/api/v1/channels?', authorizedMiddleware);\n    app.get('/api/v1/channels', function (req: any, res: any) {\n        req.db.collection('channels').find({}, (err: any, channels: any) => {\n            if (!channels)\n                return res.state(400).json({ json: err });\n            channels.toArray((err: any, channelArr: any[]) => {\n                return res.json({ channels: channelArr });\n            });\n        });\n    });\n}","const bcrypt = require('bcryptjs');\n\nimport { Collection } from 'mongodb';\nimport passport = require('passport');\nimport UserRoutes from './users';\nimport MessageRoutes from './messages';\nimport ChannelRoutes from './channels';\n\nexport default function(app: any) {\n    UserRoutes(app);\n    MessageRoutes(app);\n    ChannelRoutes(app);\n    app.post('/api/v1/login', (req: any, res: any) => {\n        return req.authenticate(req.body.email, req.body.password, (user: Object | boolean) => {\n            console.log(user);\n            if (!user)\n                return res.status(401).json({error: 'Invalid email or password'});\n            return res.json({ success: true, email: req.session.user.email });\n        })\n    });\n    app.post('/api/v1/register', function(req: any, res: any) {\n        let passwordHash = bcrypt.hashSync(req.body.password);\n        let users: Collection = req.db.collection('users');\n        users.findOne({email: req.body.email}).then((user: any) => {\n            if (user !== null) {\n                return res.status(401).json({error: 'Email address already in use'});\n            }\n            users.insertOne({email: req.body.email, password: passwordHash}, (err) => {\n                if (err) return res.status(500).json({ error: 'Something went wrong trying to log in after creating a user'});\n                return req.authenticate(req.body.email, req.body.password, (user: Object | boolean) => {\n                    console.log(user);\n                    if (!user)\n                        return res.status(401).json({ error: 'Invalid email or password' });\n                    return res.json({ success: true, email: req.session.user.email });\n                })\n            });\n        });\n    });\n    app.get('/api/v1/logout', function(req: any, res: any) {\n        req.logout();\n        return res.json({success: true, message: 'logged out'});\n    });\n}","import authorizedMiddleware from '../../middleware/authorized';\nimport {ObjectID} from 'mongodb'; \n\nexport default function (app: any) {\n    app.get('/api/v1/messages?', authorizedMiddleware);\n    app.get('/api/v1/messages/:channel', function (req: any, res: any) {\n        req.db.collection('messages').find({channel: req.params.channel}, {limit: 20}, (err: any, messages: any) => {\n            if (!messages)\n                return res.state(400).json({json: err});\n            messages.toArray((err: any, msgArray: any[]) => {\n                return res.json({ messages: msgArray.map((m) => {\n                        let objID: ObjectID = new ObjectID(m['_id']);\n                        m.created = objID.getTimestamp();\n                        return m;\n                    })\n                });\n            });\n        });\n    });\n}","import authorizedMiddleware from '../../middleware/authorized';\nimport api from '.';\nimport { Db } from 'mongodb';\n\nexport default function(app: any) {\n    app.get('/api/v1/users?', authorizedMiddleware);\n    app.get('/api/v1/user', function(req: any, res: any) {\n        res.send(req.session.user);\n    });\n    app.get('/api/v1/user/:user', function(req: any, res: any) {\n        req.db.collection('users').findOne({email: req.params.user},\n            (err: any, user: any) => {\n                if (err)\n                    return res.status(400).json({error: err});\n                return res.json({user: {\n                    email: user.email,\n                    _id: user['_id'],\n                    name: '',\n\n                }})\n            });\n    });\n}","import ApiRoutes from './api/index';\n\nexport default function(app: any) {\n    ApiRoutes(app);\n}","//import Models from './models/index.ts';\n\nimport * as http from 'http';\nimport * as express from 'express';\nimport * as session from 'express-session';\nimport * as path from 'path';\nimport { MongoClient, Db, Collection } from 'mongodb';\nimport * as bodyParser from 'body-parser';\nimport * as bcrypt from 'bcryptjs';\nconst MongoStore = require('connect-mongo')(session);\n\nimport Routes from './routes/index';\nimport websocket from './socket.io/index';\nconst env = require('../../env');\n\nconst app = express();\nconst port = process.env.production ? 80 : 3000;\n\nMongoClient.connect(env.mongodbConnectionUri, {useNewUrlParser: true}, function(err: Error, client: MongoClient) {\n    if (err) return console.error(err);\n    let db: Db = client.db();\n    // add DB to each req via middleware\n    app.use((req: any, res: any, next: Function) => {\n        req.db = db;\n        return next();\n    });\n    app.use(bodyParser.json()); // support json encoded bodies\n    app.use(bodyParser.urlencoded({ extended: true }));\n    //app.use(cors());\n    const sessionMiddleware = session({\n        secret: 'some secret',\n        saveUninitialized: true,\n        resave: false,\n        cookie: {\n            secure: false\n        },\n        store: new MongoStore({ db: db, collection: 'session' })\n    });\n    app.use(sessionMiddleware);\n    // Setup local strategy for passport authentication\n    app.use((req: any, res: any, next: Function) => {\n        req.authenticate = (username: string, password: string, done: Function) => {\n            let users: Collection = db.collection('users');\n            users.findOne({ email: username }).then((user) => {\n                if (user === null || !bcrypt.compareSync(password, user.password)) {\n                    return done(false);\n                }\n                let sessionUser: any = {email: user.email};\n                req.session.user = sessionUser;\n                return done(sessionUser);\n            });\n        }\n        req.logout = () => {\n            req.session.user = null;\n            req.session.destroy();\n        }\n        next();\n    });\n\n    Routes(app);\n    // Serve static files from dist/public\n    app.use(express.static(path.resolve(__dirname, '../../dist/public/')));\n    // Display index.html if unknown path, and let React-Router handle the 404\n    app.get('*', function (req: any, res: any) {\n        res.sendFile(path.resolve(__dirname, '../../dist/public/index.html'));\n    });\n\n    const server = http.createServer(app);\n    websocket(server, db, sessionMiddleware);\n    server.listen(port, () => {\n        console.log(`Listening on port ${port}!`);\n    });\n});\n","import * as socketio from 'socket.io';\nimport { Db, ObjectID } from 'mongodb';\nimport { Server } from 'http';\n\ninterface Socket extends socketio.Socket {\n    request: {\n        session: {\n            user: {\n                email: string\n            }\n        }\n    }\n} \n\nconst init = (server: Server, db: Db, sessionMiddleware: any) => {\n    const io = socketio(server);\n    let connectedUserEmails: string[] = [];\n\n    // https://stackoverflow.com/questions/25532692/how-to-share-sessions-with-socket-io-1-x-and-express-4-x/25618636#25618636\n    io.use((socket, next) => {\n        sessionMiddleware(socket.request, socket.request.res, next);\n    });\n    // Make sure email is set on the session\n    io.use((socket, next) => {\n        if (socket.request.session.user.email) return next();\n        next(new Error('Authentication error'));\n    });\n    io.on('connection', (socket: Socket) => {\n        connectedUserEmails.push(socket.request.session.user.email);\n        console.log('Connected users', connectedUserEmails);\n        io.emit('connected users', connectedUserEmails.filter((value, index, self) => {\n            return self.indexOf(value) === index;\n        }));\n\n        socket.on('disconnect', () => {\n            connectedUserEmails.splice(connectedUserEmails.indexOf(socket.request.session.user.email), 1);\n            io.emit('connected users', connectedUserEmails.filter((value, index, self) => {\n                return self.indexOf(value) === index;\n            }));\n        });\n\n        socket.on('message', (message: { text: string, channel: string }) => {\n            console.log(message);\n            db.collection('messages').insertOne(\n                {channel: message.channel, text: message.text, userEmail: socket.request.session.user.email },\n                (err, r) =>{\n                    if (!err) {\n                        io.emit('message', {\n                            _id: r.insertedId,\n                            userEmail: socket.request.session.user.email,\n                            text: message.text,\n                            channel: message.channel,\n                            created: (new ObjectID(r.insertedId)).getTimestamp() });\n                        return socket.emit('message received');\n                    }\n                        \n                    return console.error(err);\n                });\n        });\n    });\n}\n\nexport default init;","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"connect-mongo\");","module.exports = require(\"express\");","module.exports = require(\"express-session\");","module.exports = require(\"http\");","module.exports = require(\"mongodb\");","module.exports = require(\"path\");","module.exports = require(\"socket.io\");"],"sourceRoot":""}