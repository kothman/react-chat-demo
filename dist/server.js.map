{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./env.js","webpack:///./src/server/controllers/authController.ts","webpack:///./src/server/controllers/channelController.ts","webpack:///./src/server/controllers/messageController.ts","webpack:///./src/server/controllers/userController.ts","webpack:///./src/server/middleware/admin.ts","webpack:///./src/server/middleware/authorized.ts","webpack:///./src/server/models/Channel.ts","webpack:///./src/server/models/Message.ts","webpack:///./src/server/models/User.ts","webpack:///./src/server/routes.ts","webpack:///./src/server/server.ts","webpack:///./src/server/socket.io/index.ts","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"compression\"","webpack:///external \"connect-mongo\"","webpack:///external \"cookie-parser\"","webpack:///external \"csurf\"","webpack:///external \"express\"","webpack:///external \"express-session\"","webpack:///external \"helmet\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongoose\"","webpack:///external \"mustache-express\"","webpack:///external \"path\"","webpack:///external \"socket.io\"","webpack:///external \"socketio-jwt\"","webpack:///external \"validator\""],"names":[],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server/server.ts\");\n","module.exports = {\n    // https://docs.mongodb.com/manual/reference/connection-string/\n    mongodbConnectionUri: process.env.MONGODB_URI,\n    mongodbTestConnectionUri: 'mongodb://localhost:27017/openChatTest',\n    port: process.env.PORT || 5000,\n    production: process.env.NODE_ENV === 'production' || false,\n    useTestDb: process.env.USE_TEST_DB || false,\n    secret: process.env.SECRET || 'secret',\n    disableCsrf: process.env.DISABLE_CSRF || false,\n    disableReduxLogging: process.env.DISABLE_REDUX_LOGGING || false,\n    disableAutoStart: process.env.DISABLE_AUTO_START || false,\n    mailgunApiKey: process.env.MAILGUN_API_KEY,\n    mailgunDomain: process.env.MAILGUN_DOMAIN,\n    baseUrl: process.env.BASE_URL ? process.env.BASE_URL : 'http://localhost:5000'\n}\n","import { isEmail, isEmpty } from 'validator';\nimport { hashSync } from 'bcryptjs';\nimport {Request, Response} from '../../types/express';\nimport User, { IUser } from '../models/User';\nconst env = require('../../../env');\n\nexport default {\n    login: (req: Request, res: Response) => {\n        if (isEmpty(req.body.email || '') || isEmpty(req.body.password || '')) {\n            return res.status(400).json({ error: 'Please supply an email and password' }).end();\n        }\n        if (!isEmail(req.body.email)) {\n            return res.status(400).json({ error: 'Not a valid email address' }).end();\n        }\n        req.authenticate(req.body.email, req.body.password, (user: any | boolean) => {\n            if (!user)\n                return res.status(401).json({ error: 'Invalid email or password' }).end();\n            req.issueNewToken(user);\n            return res.status(200)\n                .json({\n                    success: true,\n                    email: user.email,\n                    role: user.role,\n                    name: user.name}).end();\n        });\n    },\n    register: (req: Request, res: Response) => {\n        if (isEmpty(req.body.email || '') || isEmpty(req.body.password || '')) {\n            return res.status(400).json({ error: 'Please supply an email and password' });\n        }\n        if (!isEmail(req.body.email)) {\n            return res.status(400).json({ error: 'Not a valid email address' });\n        }\n        return User.findByEmail(req.body.email).countDocuments().exec().then((count: number) => {\n            if (count !== 0)\n                return res.status(400).json({error: 'Email address in use'});\n            let passwordHash = hashSync(req.body.password);\n            // If this is the first user being created, asign role of admin\n            User.countDocuments().exec().then((count: number) => {\n                let role = 'user';\n                if (count === 0)\n                    role = 'admin';\n                let user = new User({\n                    name: '',\n                    email: req.body.email,\n                    password: passwordHash,\n                    role: role,\n                    emailVerified: false,\n                });\n                user.save().then((u: IUser) => {\n                    return res.status(200).json({success: true});\n                }).catch((err: Error) => {\n                    console.error(err);\n                    return res.status(500).json({error: 'Something went wrong trying to create a new user'});\n                });\n            })\n        });\n\n    },\n    logout: (req: Request, res: Response) => {\n        req.logout();\n        return res.json({success: true, message: 'logged out'});\n    },\n    verifyEmail: (req: Request, res: Response) => {\n    }\n}","import {Request, Response} from '../../types/express';\nimport Channel, {IChannel} from '../models/Channel';\n\nexport default {\n    channels: (req: Request, res: Response) => {\n        // If no channels exist, create a 'general' and 'random' channel\n        return Channel.countDocuments().exec().then((count: number) => {\n            let p = new Promise((resolve, reject) => {\n                if (count !== 0) {\n                    return resolve();\n                }\n                Channel.create([{name: 'general'}, {name: 'random'}]).then(() => {\n                    return resolve();\n                }).catch((err: Error) => {\n                    return reject(err);\n                });\n            });\n            return p.then(() => {\n                Channel.find().exec().then((channels: IChannel[]) => {\n                    return res.status(200).json({channels: channels});\n                }).catch((err: Error) => {\n                    console.log(err);\n                    return res.status(500).json({ error: 'Something went wrong while trying to fetch channels' });\n                });\n            }).catch((err: Error) => {\n                console.error(err);\n                return res.status(500).json({error: 'Something went wrong while trying to create default channels'});\n            });\n        }).catch((err: Error) => {\n            console.error(err);\n            return res.status(500).json({error: 'Something went wrong while counting channels'});\n        });\n    },\n    delete: (req: Request, res: Response) => {\n        \n    },\n    create: (req: Request, res: Response) => {\n\n    }\n}","import {Request, Response} from '../../types/express';\nimport Message, {IMessage} from '../models/Message';\nexport default {\n    messages: (req: Request, res: Response) => {\n        return Message.find({channel: req.params.channel})\n            .skip(parseInt(req.params.offest))\n            .sort({_id: -1})\n            .limit(20)\n            .exec().then((messages: IMessage[]) => {\n                return res.status(200).json({\n                     messages: messages.map((m: IMessage) => {\n                        return {\n                            text: m.text,\n                            created: m.createdAt,\n                            userEmail: m.userEmail,\n                            channel: m.channel,\n                            _id: m._id\n                        };\n                     }).reverse()\n                 })\n        }).catch((err: Error) => {\n            return res.status(400).json({ error: 'something went wrong trying to fetch messages' });\n        })\n    }\n}","import {isEmail, isEmpty} from 'validator';\nimport { Request, Response } from '../../types/express';\nimport User, { IUser, IUserModel } from '../models/User';\nimport {compareSync, hashSync} from 'bcryptjs';\n\nexport default {\n    user: (req: Request, res: Response) => {\n        res.send(req.user);\n    },\n    users: (req: Request, res: Response) => {\n        return User.find({}).select('name email role').then((users: IUser[]) => {\n            return res.status(200).json({success: true, users: users});\n        }).catch((err: Error) => {\n            console.error(err);\n            return res.status(500).json({error: 'Something went wrong while retrieving users'});\n        })\n    },\n    userByEmail: (req: Request, res: Response) => {\n        if(!isEmail(req.params.user))\n            return res.status(400).json({error: 'Please supply a valid email'});\n\n        return User.findByEmail(req.params.user).exec().then((user: IUser) => {\n            if (user !== null) {\n                return res.status(200).json({\n                    user: {\n                        email: user.email,\n                        _id: user._id,\n                        name: user.name || '',\n                        role: user.role,\n                        created: user.createdAt\n                    }\n                });\n            }\n            return res.status(400).json({error: 'No user found with that email'});\n            \n        }).catch((err: Error) => {\n            console.error(err);\n            return res.status(500).json({error: 'Something went wrong trying to find the user'});\n        });\n    },\n    updateEmail: (req: Request, res: Response) => {\n        if(!isEmail(req.body.email))\n            return res.status(400).json({ error: 'Not a valid email' });\n        return User.countDocuments({email: req.body.email}).exec().then((count: number) => {\n            if (count !== 0)\n                return res.status(400).json({ error: 'Email address already in use' });\n            return User.findByEmail(req.user.email).exec().then((user: IUser) => {\n                user.email = req.body.email;\n                user.save();\n                req.issueNewToken(Object.assign({}, req.user, {email: req.body.email}));\n                return res.status(200).json({ success: true });\n            }).catch((err: Error) => {\n                console.error(err);\n                return res.status(500).json({ error: 'Something went wrong trying to fetch the user' });\n            });\n        });\n    },\n    updateName: (req: Request, res: Response) => {\n        return User.findByEmail(req.user.email)\n            .exec().then((user: IUser) => {\n                user.name = req.body.name;\n                user.save();\n                req.issueNewToken(Object.assign({}, req.user, { name: req.body.name }));\n                return res.status(200).json({success: true});\n            }).catch((err: Error) => {\n                console.error(err);\n                return res.status(500).json({error: 'Something went wrong trying to update the user'});\n        });\n    },\n    updatePassword: (req: Request, res: Response) => {\n        if (isEmpty(req.body.newPass) || isEmpty(req.body.oldPass))\n            return res.status(400).json({ error: 'Must supply the current and new password' });\n        return User.findByEmail(req.user.email).exec().then((user: IUser) => {\n            if (!compareSync(req.body.oldPass, user.password))\n                return res.status(400).json({error: 'Current password is incorrect'});\n            user.password = hashSync(req.body.newPass);\n            user.save();\n            return res.status(200).json({success: true});\n        })\n    },\n    resetPassword: (req: Request, res: Response) => {\n        return res.status(500).json({error: 'Not implemented'});\n    },\n    /**\n     * POST /api/v1/user/create\n     * req.body.email: string\n     * req.body.name?: string,\n     * req.body.role: string\n     */\n    createUser: (req: Request, res: Response) => {\n        if(isEmpty(req.body.email) || !isEmail(req.body.email) ||\n           isEmpty(req.body.role) || (req.body.role !== 'user' && req.body.role !== 'admin'))\n            return res.status(400).json({ error: 'Must supply valid email and role'});\n        return User.findByEmail(req.body.email).countDocuments((err: any, c: number) => {\n            if (err) {\n                console.error('Something went wrong trying to count users with email ' + req.body.email, err);\n                return res.status(500).json({error: 'Something went wrong'});\n            }\n            if (c !== 0)\n                return res.status(400).json({error: 'Email address in use'});\n            let u = new User({\n                email: req.body.email,\n                name: req.body.name || '',\n                role: req.body.role,\n                // @todo send password reset link to new user\n                password: 'temp',\n            })\n            return u.save((err: any, u: IUser) => {\n                if (err) {\n                    console.error('Something went wrong trying to save user', err);\n                    return res.status(500).json({ error: 'Something went wrong' });\n                }\n                return res.status(200).json({success: true});\n            });\n\n        })\n    },\n    /**\n     * PUT /api/v1/user/update\n     * @param req.body.email: string\n     * @param req.body.user: {\n     *  email?: string,\n     *  name?: string,\n     *  role?: string,\n     * }\n     */\n    editUser: (req: Request, res: Response) => {\n        if (!req.body.email || !isEmail(req.body.email))\n            return res.status(400).json({error: 'Please supply a valid email'});\n        if (req.body.user.email && !isEmail(req.body.user.email))\n            return res.status(400).json({ error: 'Please supply a valid email' });\n        if (req.body.user.role && !isEmpty(req.body.user.role) && (req.body.user.role !== 'user' && req.body.user.role !== 'admin'))\n            return res.status(400).json({error: 'Invalid role'});\n        return User.findByEmail(req.body.email).exec((err: any, user: IUser) => {\n            if (err) {\n                console.log('Something went wrong', err);\n                return res.status(500).json({error: 'Something went wrong'});\n            }\n            if (!user) {\n                return res.status(404).json({error: 'User does not exist'});\n            }\n            if (req.body.user.email)\n                user.email = req.body.user.email;\n            if (req.body.user.name)\n                user.name = req.body.user.name;\n            if (req.body.user.role)\n                user.role = req.body.user.role;\n            return user.save((err: any, user: IUser) => {\n                if (err) {\n                    console.log(err);\n                    return res.status(500).json({error: 'Something went wrong'});\n                }\n                return res.status(200).json({success: true});\n            });\n        });\n    },\n    deleteUser: (req: Request, res: Response) => {\n\n    }\n}","export default function(req: any, res: any, next: Function) {\n    if (req.user && req.user.role === 'admin') {\n        return next();\n    }\n    return res.status(401).json({ error: 'Not authorized as admin' });\n}","import { verify } from 'jsonwebtoken';\nimport { Token } from '../../types/jwt';\nimport { Request, Response } from '../../types/express';\nconst env = require('../../../env');\nexport default function(req: Request, res: Response, next: Function) {\n    var token = req.session.token || req.headers['x-access-token'];\n    if (!token)\n        return res.status(401).json({ error: 'Not authorized' });\n\n    verify(token, env.secret, (err: Error, decoded: Token) => {\n        if (err) return res.status(401).send({ error: 'Not authorized' });\n        req.user = decoded;\n        return next();\n    });    \n}","import {Schema, Document, Model, model} from 'mongoose';\n\nexport interface IChannel extends Document {\n    name: string,\n    createdAt: Date,\n    updatedAt: Date,\n}\n\nconst channelSchema: Schema = new Schema({\n    name: {\n        type: String,\n        required: true,\n        lowercase: true,\n    },\n}, {\n    timestamps: true\n});\n\nconst Channel: Model<IChannel> = model('Channel', channelSchema);\nexport default Channel;","import {Schema, model, Document, Model} from 'mongoose';\n\nexport interface IMessage extends Document {\n    channel: string,\n    text: string,\n    userEmail: string,\n    createdAt: Date,\n    updatedAt: Date,\n}\n\nconst messageSchema: Schema = new Schema({\n    channel: {\n        type: String,\n        required: true,\n        // should validate to make sure channel already exists\n    },\n    text: {\n        type: String,\n        required: true,\n    },\n    userEmail: {\n        type: String,\n        required: true,\n        lowercase: true,\n        // should validate to confirm that user exists\n    }\n}, {\n    timestamps: true\n});\n\nconst Message: Model<IMessage> = model('Message', messageSchema);\nexport default Message;","import {Schema, Document, model, Model, Error, DocumentQuery} from 'mongoose';\nimport {toLower} from 'lodash';\n\nexport interface IUser extends Document {\n    name?: string,\n    email: string,\n    createdAt: Date,\n    updatedAt: Date,\n    password: string,\n    role: 'admin' | 'user',\n\n};\n\nexport interface IUserModel extends Model<IUser> {\n    findByEmail: (email: string) => DocumentQuery<IUser, IUser>\n}\n\nconst userSchema: Schema = new Schema({\n    name: String,\n    email: {\n        required: true,\n        type: String,\n        lowercase: true\n    },\n    password: {\n        type: String,\n        required: true\n    },\n    role: {\n        type: String,\n        required: true,\n        lowercase: true,\n        enum: ['admin', 'user']\n    },\n}, {\n    timestamps: true\n});\n\nuserSchema.statics.findByEmail = function (email: string): DocumentQuery<IUser, IUser> {\n    return this.findOne({email: email});\n}\n\nconst User: IUserModel = model<IUser, IUserModel>('User', userSchema);\nexport default User;","import * as path from 'path';\nimport { App, Request, Response } from '../types/express';\nimport authorized from './middleware/authorized';\nimport admin from './middleware/admin';\nimport authController from './controllers/authController';\nimport userController from './controllers/userController';\nimport messageController from './controllers/messageController';\nimport channelController from './controllers/channelController';\n\nexport default function(app: App) {\n\n    /* Static Routes */\n    app.get('/', function (req: Request, res: Response) {\n        return res.render(\n            path.resolve(__dirname, '../../dist/public/index.html'),\n            { csrfToken: req.csrfToken() }\n        );\n    });\n    /* Widget rendered inside iframe via widget-embed script */\n    app.get('/widget', function (req: any, res: any) {\n        return res.render(\n            path.resolve(__dirname, '../../../dist/public/widget/index.html')\n        );\n    });\n    /* Page demoing embedded widget */\n    app.get('/widget/demo', function (req: any, res: any) {\n        return res.render(\n            path.resolve(__dirname, '../../../dist/public/widget/demo.html')\n        );\n    });\n    \n    /* API Routes */\n    \n    app.post('/api/v1/login', authController.login);\n    app.post('/api/v1/register', authController.register);\n    app.get('/api/v1/logout', authController.logout);\n    app.get('/api/v1/verifyEmail/:id', authController.verifyEmail);\n\n    app.use('/api/v1/user*', authorized);\n    app.get('/api/v1/user', userController.user);\n    app.get('/api/v1/users', userController.users)\n    app.get('/api/v1/user/:user', userController.userByEmail);\n    app.post('/api/v1/user/update/email', userController.updateEmail);\n    app.post('/api/v1/user/update/name', userController.updateName);\n    app.post('/api/v1/user/update/password', userController.updatePassword);\n    app.post('/api/v1/user/reset_password', userController.resetPassword);\n    app.post('/api/v1/user/create', admin, userController.createUser);\n    app.put('/api/v1/user/update', admin, userController.editUser);\n    app.post('/api/v1/user/delete', admin, userController.deleteUser);\n\n    app.use('/api/v1/message*', authorized);\n    app.get('/api/v1/messages/:channel/:offset', messageController.messages);\n\n    app.use('/api/v1/channel', authorized);\n    app.get('/api/v1/channels', channelController.channels);\n    app.post('/api/v1/channels/delete', admin, channelController.delete);\n    app.post('/api/v1/channels/create', admin, channelController.create);\n\n    /* Display index.html if unknown path, and let React-Router handle the 404 */\n    app.get('*', function (req: Request, res: Response) {\n        return res.render(\n            path.resolve(__dirname, '../../dist/public/index.html'),\n            { csrfToken: req.csrfToken() }\n        );\n    });\n}","//import Models from './models/index.ts';\n\nimport * as http from 'http';\nimport * as express from 'express';\nimport * as path from 'path';\nimport * as socketio from 'socket.io';\nimport * as mongoose from 'mongoose';\nimport * as csrf from 'csurf';\nimport * as cookieParser from 'cookie-parser';\nimport * as session from 'express-session';\nimport * as bodyParser from 'body-parser';\nimport * as bcrypt from 'bcryptjs';\nimport * as helmet from 'helmet';\nimport * as morgan from 'morgan';\nimport * as compression from 'compression';\nimport { sign } from 'jsonwebtoken';\nconst mustacheExpress = require('mustache-express');\nconst MongoStore = require('connect-mongo')(session);\n\nimport Routes from './routes';\nimport websocket from './socket.io/index';\nimport { App, Request, Response } from '../types/express';\nimport User, { IUser } from './models/User';\nconst env = require('../../env');\n\nconst app: App = express();\nconst port: string | number = env.port;\nlet server: http.Server;\nlet socketServer: socketio.Server;\n\napp.engine('html', mustacheExpress());\napp.set('view engine', 'html');\n//app.use(morgan('combined'));\napp.use(compression());\n\nconst sessionMiddleware = session({\n    secret: env.secret,\n    cookie: {\n        maxAge: 24 * 60 * 60 * 1000, // 24 hours\n        sameSite: true,\n        secure: env.production,\n        httpOnly: true\n    },\n    saveUninitialized: true,\n    resave: false,\n    store: new MongoStore({\n        mongooseConnection: mongoose.connection\n    })\n});\n\nconst csrfMiddleware = csrf({\n    cookie: {\n        maxAge: 24 * 60 * 60 * 1000, // 24 hours\n        sameSite: true,\n        secure: env.production,\n        httpOnly: true,\n        key: '_csrf'\n    }\n})\n\nmongoose.connect(env.useTestDb ? env.mongodbTestConnectionUri : env.mongodbConnectionUri, { useNewUrlParser: true });\nmongoose.connection.on('error', function(err) {\n    console.error('Mongoose connection error', err);\n});\nprocess.on('SIGINT', function () {\n    mongoose.connection.close(function () {\n        console.log('Mongoose default connection disconnected through app termination');\n        process.exit(0);\n    });\n}); \n\napp.use(sessionMiddleware);\napp.use(cookieParser(env.secret));\n\nif(env.disableCsrf) {\n    console.log('CSRF disabled');\n    app.use((req, res, next) => { \n        req.csrfToken = function () { return '' }\n        return next();\n    });\n} else {\n    app.use(csrfMiddleware);\n}\n// add DB to every express request\nlet db: mongoose.Connection = mongoose.connection;\napp.use((req: Request, res: Response, next: Function) => {\n    req.db = db;\n    return next();\n})\napp.use(bodyParser.json()); // support json encoded bodies\napp.use(bodyParser.urlencoded({ extended: true }));\n//app.use(cors());\n\n\napp.use(helmet());\n/* Serve static files from dist/public */\napp.use(express.static(path.resolve(__dirname, '../../dist/public/')));\n\napp.use('/api', function (req: Request, res: Response, next: Function) {\n    //res.setHeader('new-csrf-token', req.csrfToken())\n    return next();\n});\napp.use((req: Request, res: Response, next: Function) => {\n    req.authenticate = (email: string,\n                        password: string,\n                        done: (user: boolean | IUser, err: (null | Error)) => void) => {\n        User.findByEmail(email).then((user: IUser) => {\n            if (user === null) return done(false, null);\n            if (!bcrypt.compareSync(password, user.password)) return done(false, new Error('Invalid password'));\n            let userDetails: any = {\n                email: user.email,\n                name: user.name,\n                role: user.role,\n            }\n            return done(userDetails, null);\n        }).catch((err: Error) => {\n            done(false, err);\n        });\n    }\n    req.logout = () => {\n        req.session.token = null;\n    }\n    req.issueNewToken = (user: IUser) => {\n        let token: string = sign({\n            name: user.name,\n            role: user.role,\n            email: user.email\n        }, env.secret, {\n            expiresIn: 86400 // expires in 24 hours\n        });\n        res.setHeader('x-access-token', token);\n        req.session.token = token;\n    }\n    next();\n});\n\nRoutes(app);\nserver = http.createServer(app);\nserver.on('error', (err: Error) => {\n    console.error(err);\n    server.close();\n})\n\nif (!env.disableAutoStart) {\n    socketServer = websocket(server, db);\n    mongoose.connection.on('connected', function () {\n        console.log('Connected to MongoDB via Mongoose');\n        server.listen(port, () => {\n            console.log(`Listening on port ${port}!`);\n            app.emit('server started');\n        });\n    });\n}\n\nexport default server;\nexport const conn = mongoose.connection;\nexport { app, socketServer };","import * as socketio from 'socket.io';\nimport { Server } from 'http';\nimport { Connection } from 'mongoose';\nimport {authorize as authorizeJwt} from 'socketio-jwt';\nimport Message, { IMessage } from '../models/Message';\nimport { Token } from '../../types/jwt';\nconst env = require('../../../env');\n\ninterface Socket extends socketio.Socket {\n    jwt: Token\n} \n\nconst init = (server: Server, db: Connection): socketio.Server => {\n    const io: socketio.Server = socketio(server);\n    let connectedUserEmails: string[] = [];\n\n    // set authorization for socket.io\n    io.on('connection', authorizeJwt({\n            secret: env.secret,\n            timeout: 15000, // 15 seconds to send the authentication message\n            decodedPropertyName: 'jwt'\n        })).on('authenticated', (socket: Socket) => {\n\n            connectedUserEmails.push(socket.jwt.email);\n            console.log('Connected users', connectedUserEmails);\n            io.emit('connected users', connectedUserEmails.filter((value, index, self) => {\n                return self.indexOf(value) === index;\n            }));\n\n            socket.on('disconnect', () => {\n                connectedUserEmails.splice(connectedUserEmails.indexOf(socket.jwt.email), 1);\n                io.emit('connected users', connectedUserEmails.filter((value, index, self) => {\n                    return self.indexOf(value) === index;\n                }));\n            });\n\n            socket.on('message', (message: { text: string, channel: string }) => {\n                console.log(message);\n                let m: IMessage = new Message({\n                    channel: message.channel,\n                    text: message.text,\n                    userEmail: socket.jwt.email\n                });\n                m.save().then((m: IMessage) => {\n                    io.emit('message', {\n                        _id: m._id,\n                        userEmail: m.userEmail,\n                        text: m.text,\n                        channel: m.channel,\n                        created: m.createdAt\n                    });\n                    socket.emit('message received');\n                }).catch((err: Error) => {\n                    console.error(err);\n                    socket.emit('message receive error', err);\n                });\n            });\n        });\n    return io;\n}\n\nexport default init;","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"compression\");","module.exports = require(\"connect-mongo\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"csurf\");","module.exports = require(\"express\");","module.exports = require(\"express-session\");","module.exports = require(\"helmet\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");","module.exports = require(\"mustache-express\");","module.exports = require(\"path\");","module.exports = require(\"socket.io\");","module.exports = require(\"socketio-jwt\");","module.exports = require(\"validator\");"],"sourceRoot":""}