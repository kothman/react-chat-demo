{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./env.js","webpack:///./src/server/middleware/admin.ts","webpack:///./src/server/middleware/authorized.ts","webpack:///./src/server/routes/api/channels.ts","webpack:///./src/server/routes/api/index.ts","webpack:///./src/server/routes/api/messages.ts","webpack:///./src/server/routes/api/users.ts","webpack:///./src/server/routes/index.ts","webpack:///./src/server/routes/widget.ts","webpack:///./src/server/server.ts","webpack:///./src/server/socket.io/index.ts","webpack:///external \"bcryptjs\"","webpack:///external \"body-parser\"","webpack:///external \"connect-mongo\"","webpack:///external \"csurf\"","webpack:///external \"express\"","webpack:///external \"express-session\"","webpack:///external \"helmet\"","webpack:///external \"http\"","webpack:///external \"mongodb\"","webpack:///external \"mustache-express\"","webpack:///external \"path\"","webpack:///external \"shortid\"","webpack:///external \"socket.io\"","webpack:///external \"validator\""],"names":[],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server/server.ts\");\n","module.exports = {\n    // https://docs.mongodb.com/manual/reference/connection-string/\n    mongodbConnectionUri: process.env.MONGODB_URI,\n    mailgunApiKey: process.env.MAILGUN_API_KEY,\n    mailgunDomain: process.env.MAILGUN_DOMAIN,\n    baseUrl: process.env.BASE_URL ? process.env.BASE_URL : 'http://localhost:5000'\n}\n","export default function(req: any, res: any, next: Function) {\n    if (req.session.user && req.session.user.role === 'admin') {\n        return next();\n    }\n    return res.status(401).json({ error: 'Not authorized as admin' });\n}","export default function(req: any, res: any, next: Function) {\n    if (req.session.user) {\n        return next();\n    }\n    return res.status(401).json({ error: 'Not authorized' });\n}","import authorizedMiddleware from '../../middleware/authorized';\nimport adminMiddleware from '../../middleware/admin';\nimport { Collection } from 'mongodb';\nimport * as validator from 'validator';\nimport { App, Request, Response } from '../../../types/express';\n\nexport default function (app: App) {\n    app.get('/api/v1/channel*', authorizedMiddleware);\n    app.get('/api/v1/channels', function (req: Request, res: Response) {\n        req.db.collection('channels', (e: Error, coll: Collection) => {\n            let p = new Promise((resolve) => {\n                coll.find({}).count((e, count: number) => {\n                    if (count === 0) {\n                        coll.insertMany(\n                            [{ name: 'general' }, { name: 'random' }],\n                            () => resolve());\n                    } else {\n                        resolve();\n                    }\n                })\n            });\n            p.then(() => {\n                coll.find({}).toArray((err: Error, arr: any) => {\n                    res.json({ channels: arr });\n                });\n            })\n        });\n    });\n    app.get('/api/v1/channel/delete/:channel', adminMiddleware, function (req: Request, res: Response) {\n        if (validator.isEmpty(req.params.channel)) {\n            return res.status(400).json({error: 'Invalid channel name'});\n        }\n        return req.db.collection('channels', (e: Error, coll: Collection) => {\n            let p = new Promise((resolve, reject) => {\n                coll.find({name: req.params.channel}).count((e, count: number) => {\n                    // make sure we only try to delete the record if one match was found\n                    if (count === 1) {\n                        return resolve();\n                    }\n                    return reject();\n                });\n            });\n            p.then(() => {\n                coll.deleteOne({name: req.params.channel}).then(() => {\n                    return res.json({success: true});\n                });\n            }).catch(() => {\n                return res.status(400).json({error: 'Returned channels count not equal to 1'});\n            })\n            return p;\n        });\n    });\n    app.post('/api/v1/channel/create', adminMiddleware, function (req: Request, res: Response) {\n        if (validator.isEmpty(req.body.channelName)) {\n            return res.status(400).json({ error: 'Invalid channel name' });\n        }\n        return req.db.collection('channels', (e: Error, coll: Collection) => {\n            let p = new Promise((resolve, reject) => {\n                coll.countDocuments({name: req.body.channelName}, (err, count) => {\n                    if (count!==0) {\n                        return reject();\n                    }\n                    return resolve();\n                });\n            });\n            return p.then(() => {\n                return coll.insertOne({name: req.body.channelName}).then(() => {\n                    return res.json({success: true});\n                });\n            }).catch(() => {\n                return res.status(400).json({error: 'Channel already exists'});\n            })\n        });\n    });\n}","const bcrypt = require('bcryptjs');\n\nimport { Collection } from 'mongodb';\nimport * as validator from 'validator';\nimport UserRoutes from './users';\nimport MessageRoutes from './messages';\nimport ChannelRoutes from './channels';\nimport {generate as shortid} from 'shortid';\n\nimport { App, Request, Response } from '../../../types/express';\n\nexport default function(app: App) {\n    app.use(function(req: Request, res: Response, next: Function) {\n        res.set('new-csrf-token', req.csrfToken());\n        return next();\n    });\n    UserRoutes(app);\n    MessageRoutes(app);\n    ChannelRoutes(app);\n    app.post('/api/v1/login', (req: Request, res: Response) => {\n        if (validator.isEmpty(req.body.email) || validator.isEmpty(req.body.password)) {\n            return res.status(400).json({ error: 'Please supply an email and password' });\n        }\n        if (!validator.isEmail(req.body.email)) {\n            return res.status(400).json({error: 'Not a valid email address'});\n        }\n        req.authenticate(req.body.email, req.body.password, (user: any | boolean) => {\n            if (!user)\n                return res.status(401).json({error: 'Invalid email or password'});\n            return res.json({\n                success: true,\n                email: req.session.user.email,\n                role: req.session.user.role,\n                name: req.session.user.name\n            });\n        })\n    });\n    app.post('/api/v1/register', function(req: Request, res: Response) {\n        if (validator.isEmpty(req.body.email) || validator.isEmpty(req.body.password)) {\n            return res.status(400).json({ error: 'Please supply an email and password' });\n        }\n        if (!validator.isEmail(req.body.email)) {\n            return res.status(400).json({ error: 'Not a valid email address' });\n        }\n        let passwordHash = bcrypt.hashSync(req.body.password);\n        let users: Collection = req.db.collection('users');\n\n        users.findOne({email: req.body.email}).then((user: any) => {\n            if (user !== null) {\n                return res.status(401).json({error: 'Email address already in use'});\n            }\n            // If no users exist, the created user should be an admin (role: 'admin'), and\n            // a widget document created.\n            users.countDocuments().then((count) => {\n                let role: string = 'user';\n                if (count === 0) {\n                    role = 'admin';\n                    let widgets: Collection = req.db.collection('widgets');\n                    // don't need to check short id since this should be the first widget created\n                    widgets.insertOne({\n                        shortId: shortid(),\n                        domain: 'http://localhost:4000',\n                    });\n                }\n                users.insertOne({\n                    email: req.body.email,\n                    password: passwordHash,\n                    emailVerified: false,\n                    role: role\n                }, (err) => {\n                    return res.json({ success: true });\n                });\n            })\n\n            \n        });\n    });\n    app.post('/api/v1/verifyEmail', function(req: Request, res: Response) {\n        if (validator.isEmpty(req.body.key)) {\n            return res.status(400).json({ error: 'Invalid request, no key supplied' });\n        }\n        let users: Collection = req.db.collection('users');\n        //console.log(req.body.key, typeof req.body.key);\n        users.findOneAndUpdate({ verifyKey: req.body.key }, { $set: {emailVerified: true, verifyKey: null}}, (err, result) => {\n            if (err || !result) {\n                console.log(err, result);\n                return res.status(400).json({error: 'Invalid key'});\n            }\n            return res.status(200).json({success: true});\n        });\n    });\n    app.get('/api/v1/logout', function(req: Request, res: Response) {\n        req.logout();\n        return res.json({success: true, message: 'logged out'});\n    });\n}","import authorizedMiddleware from '../../middleware/authorized';\nimport {ObjectID, Collection, MongoError} from 'mongodb'; \nimport { App, Request, Response } from '../../../types/express';\n\nexport default function (app: App) {\n    app.get('/api/v1/messages?', authorizedMiddleware);\n    app.get('/api/v1/messages/:channel/:offset', function (req: Request, res: Response) {\n        let messages: Collection = req.db.collection('messages');\n        messages.find(\n            {channel: req.params.channel},\n            {skip: parseInt(req.params.offset), sort: [['_id', -1]], limit: 20})\n            .toArray((err: any, messages: any) => {\n                if (!messages)\n                    return res.status(400).json({json: err});\n                messages.toArray((err: MongoError, msgArray: any[]) => {\n                    return res.json({ messages: msgArray.map((m) => {\n                            let objID: ObjectID = new ObjectID(m['_id']);\n                            m.created = objID.getTimestamp();\n                            return m;\n                        }).reverse()\n                    });\n                });\n        });\n    });\n}","import { Collection, MongoError } from 'mongodb';\nimport * as bcrypt from 'bcryptjs';\nimport * as validator from 'validator';\n\nimport authorizedMiddleware from '../../middleware/authorized';\nimport adminMiddleware from '../../middleware/admin';\nimport { App, Request, Response } from '../../../types/express';\n\nexport default function(app: App) {\n    app.get('/api/v1/user*', authorizedMiddleware);\n    app.get('/api/v1/user', function(req: Request, res: Response) {\n        res.send(req.session.user);\n    });\n    app.get('/api/v1/users', (req: Request, res: Response) => {\n        let usersColl: Collection = req.db.collection('users');\n        let users: any[] = [];\n        usersColl.find({}).forEach((userDoc) => {\n            users.push({\n                name: userDoc.name || '',\n                email: userDoc.email,\n                role: userDoc.role\n            })\n        }, (err: MongoError) => {\n            if (err) {\n                console.log(err)\n                return res.status(500).json({error: 'Something went wrong retrieving users'});\n            }\n            return res.status(200).json({success: true, users: users});\n        });\n    });\n    app.get('/api/v1/user/:user', function (req: Request, res: Response) {\n        req.db.collection('users').findOne({email: req.params.user},\n            (err: any, user: any) => {\n                if (err)\n                    return res.status(400).json({error: err});\n                return res.json({user: {\n                    email: user.email,\n                    _id: user['_id'],\n                    name: '',\n\n                }})\n            });\n    });\n    app.post('/api/v1/user/update/email', function (req: Request, res: Response) {\n        if (!validator.isEmail(req.body.email))\n            return res.status(400).json({error: 'Not a valid email'});\n        let users: Collection = req.db.collection('users');\n        return users.countDocuments({email: req.body.email}, (err: MongoError, count: number) => {\n            if(err) {\n                console.log(err);\n                return res.status(500).json({error: 'Something went wrong counting users with email ' + req.body.email});\n            }\n            if (count !== 0)\n                return res.status(400).json({error: 'Email address already in use'});\n            users.updateOne({ email: req.session.user.email }, { $set: { email: req.body.email } }, (err, user) => {\n                if (err || !user) {\n                    console.log(err, user);\n                    return res.status(500).json({ error: 'Something went wrong trying to update user\\'s email' });\n                }\n                // session info generally only gets populated on login, so we need to modify it here (and for other user updates)\n                req.session.user.email = req.body.email;\n                return res.status(200).json({ success: true });\n            });\n        })\n    });\n    app.post('/api/v1/user/update/name', function (req: Request, res: Response) {\n        let users: Collection = req.db.collection('users');\n        users.updateOne({email: req.session.user.email}, {$set: {name: req.body.name}}, (err, user) => {\n            if(err || !user) {\n                console.log(err, user);\n                return res.status(500).json({error: 'Something went wrong trying to update user\\'s name'});\n            }\n            req.session.user.name = req.body.name;\n            return res.status(200).json({success: true});\n        });\n    });\n    app.post('/api/v1/user/update/password', function (req: Request, res: Response) {\n        let users: Collection = req.db.collection('users');\n        if (validator.isEmpty(req.body.newPass) || validator.isEmpty(req.body.oldPass))\n            return res.status(400).json({error: 'Must supply the current and new password'});\n        return users.findOne({email: req.session.user.email}, (err: MongoError, user) => {\n            if (err || !user) {\n                console.log(err);\n                return res.status(500).json({error: 'Something went wrong trying to retrieve the logged in user'});\n            }\n            if (!bcrypt.compareSync(req.body.oldPass, user.password))\n                return res.status(400).json({error: 'Invalid password'});\n            users.updateOne({email: req.session.user.email}, {$set: {password: bcrypt.hashSync(req.body.newPass) }}, (err, user) => {\n                if (err) {\n                    console.log(err);\n                    return res.status(500).json({ error: 'Something went wrong trying to update the logged in user\\'s password' });\n                }\n                return res.status(200).json({success: true});\n            })\n        });\n    });\n    app.post('/api/v1/user/reset_password', function (req: Request, res: Response) {\n\n    });\n    app.post('/api/v1/user/resend_email_verification')\n}","import ApiRoutes from './api/index';\nimport WidgetRoutes from './widget';\nimport { App } from '../../types/express';\n\nexport default function(app: App) {\n    WidgetRoutes(app);\n    ApiRoutes(app);\n}","import * as path from 'path';\nexport default function(app: any) {\n    app.get('/widget', function(req: any, res: any) {\n        res.render(\n            path.resolve(__dirname, '../../../dist/public/widget/index.html')\n        );\n    });\n    app.get('/widget/demo', function(req: any, res: any) {\n        res.render(\n            path.resolve(__dirname, '../../../dist/public/widget/demo.html')\n        );\n    });\n}","//import Models from './models/index.ts';\n\nimport * as http from 'http';\nimport * as express from 'express';\nimport * as session from 'express-session';\nimport * as path from 'path';\nimport { MongoClient, Db, Collection } from 'mongodb';\nimport * as bodyParser from 'body-parser';\nimport * as bcrypt from 'bcryptjs';\nimport * as csurf from 'csurf';\nimport * as helmet from 'helmet';\nconst MongoStore = require('connect-mongo')(session);\nconst mustacheExpress = require('mustache-express');\n\nimport Routes from './routes/index';\nimport websocket from './socket.io/index';\nimport { App, Request, Response } from '../types/express';\nconst env = require('../../env');\n\nconst app: App = express();\nconst port: string | number = process.env.PORT || 3000;\nconst csurfMiddleware: express.RequestHandler = csurf();\n\napp.engine('html', mustacheExpress());\napp.set('view engine', 'html');\n\nMongoClient.connect(env.mongodbConnectionUri, {useNewUrlParser: true}, function(err: Error, client: MongoClient) {\n    if (err) return console.error(err);\n    let db: Db = client.db();\n    // add DB to each req via middleware\n    app.use((req: Request, res: Response, next: Function) => {\n        req.db = db;\n        return next();\n    });\n    const sessionMiddleware = session({\n        secret: 'some secret',\n        saveUninitialized: true,\n        resave: false,\n        cookie: {\n            secure: false\n        },\n        store: new MongoStore({ db: db, collection: 'session' })\n    });\n\n    app.use(bodyParser.json()); // support json encoded bodies\n    app.use(bodyParser.urlencoded({ extended: true }));\n    //app.use(cors());\n    app.use(sessionMiddleware);\n    app.use(csurfMiddleware);\n    app.use(helmet());\n    // Setup local strategy for passport authentication\n    app.use((req: Request, res: Response, next: Function) => {\n        req.authenticate = (username: string, password: string, done: Function) => {\n            let users: Collection = db.collection('users');\n            users.findOne({ email: username }).then((user) => {\n                if (user === null || !bcrypt.compareSync(password, user.password)) {\n                    return done(false);\n                }\n                let userDetails: any = {\n                    email: user.email,\n                    name: user.name,\n                    role: user.role\n                };\n                req.session.user = userDetails;\n                return done(userDetails);\n            });\n        }\n        req.logout = () => {\n            req.session.user = null;\n        }\n        next();\n    });\n\n    Routes(app);\n\n    app.get('/', function (req: Request, res: Response) {\n        res.render(\n            path.resolve(__dirname, '../../dist/public/index.html'),\n            { csrfToken: req.csrfToken() }\n        );\n    });\n    // Serve static files from dist/public\n    app.use(express.static(path.resolve(__dirname, '../../dist/public/')));\n    // Display index.html if unknown path, and let React-Router handle the 404\n    app.get('*', function (req: Request, res: Response) {\n        res.render(\n            path.resolve(__dirname, '../../dist/public/index.html'),\n            {csrfToken: req.csrfToken()}    \n        );\n    });\n\n    const server: http.Server = http.createServer(app);\n    websocket(server, db, sessionMiddleware);\n    server.listen(port, () => {\n        console.log(`Listening on port ${port}!`);\n    });\n});\n","import * as socketio from 'socket.io';\nimport { Db, ObjectID } from 'mongodb';\nimport { Server } from 'http';\n\ninterface Socket extends socketio.Socket {\n    request: {\n        session: {\n            user: {\n                email: string\n            }\n        }\n    }\n} \n\nconst init = (server: Server, db: Db, sessionMiddleware: any) => {\n    const io = socketio(server);\n    let connectedUserEmails: string[] = [];\n\n    // https://stackoverflow.com/questions/25532692/how-to-share-sessions-with-socket-io-1-x-and-express-4-x/25618636#25618636\n    io.use((socket, next) => {\n        sessionMiddleware(socket.request, socket.request.res, next);\n    });\n    // Make sure email is set on the session\n    io.use((socket, next) => {\n        if (socket.request.session.user.email) return next();\n        next(new Error('Authentication error'));\n    });\n    io.on('connection', (socket: Socket) => {\n        connectedUserEmails.push(socket.request.session.user.email);\n        console.log('Connected users', connectedUserEmails);\n        io.emit('connected users', connectedUserEmails.filter((value, index, self) => {\n            return self.indexOf(value) === index;\n        }));\n\n        socket.on('disconnect', () => {\n            connectedUserEmails.splice(connectedUserEmails.indexOf(socket.request.session.user.email), 1);\n            io.emit('connected users', connectedUserEmails.filter((value, index, self) => {\n                return self.indexOf(value) === index;\n            }));\n        });\n\n        socket.on('message', (message: { text: string, channel: string }) => {\n            console.log(message);\n            db.collection('messages').insertOne(\n                {channel: message.channel, text: message.text, userEmail: socket.request.session.user.email },\n                (err, r) =>{\n                    if (!err) {\n                        io.emit('message', {\n                            _id: r.insertedId,\n                            userEmail: socket.request.session.user.email,\n                            text: message.text,\n                            channel: message.channel,\n                            created: (new ObjectID(r.insertedId)).getTimestamp() });\n                        return socket.emit('message received');\n                    }\n                        \n                    return console.error(err);\n                });\n        });\n    });\n}\n\nexport default init;","module.exports = require(\"bcryptjs\");","module.exports = require(\"body-parser\");","module.exports = require(\"connect-mongo\");","module.exports = require(\"csurf\");","module.exports = require(\"express\");","module.exports = require(\"express-session\");","module.exports = require(\"helmet\");","module.exports = require(\"http\");","module.exports = require(\"mongodb\");","module.exports = require(\"mustache-express\");","module.exports = require(\"path\");","module.exports = require(\"shortid\");","module.exports = require(\"socket.io\");","module.exports = require(\"validator\");"],"sourceRoot":""}